/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 13:53:14 GMT 2023
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attribute_ESTest extends Attribute_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attribute attribute0 = new Attribute("S%&bl6FEIA]fv%zYj,", "");
      String string0 = attribute0.html();
      assertEquals("S%&bl6FEIA]fv%zYj,=\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("6", "6");
      Attribute attribute1 = new Attribute("6", (String) null);
      boolean boolean0 = attribute1.equals(attribute0);
      assertTrue(attribute0.equals((Object)attribute1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("RH-VknFQr%G:F)Rb", "RH-VknFQr%G:F)Rb");
      Attributes attributes1 = attributes0.put(attribute0);
      assertSame(attributes0, attributes1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attribute attribute0 = new Attribute("xDog9nRkx[;%CY5@X", "xDog9nRkx[;%CY5@X");
      boolean boolean0 = attribute0.isDataAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attribute attribute0 = new Attribute("xDogUnRkx[;%CY5@X", (String) null);
      Attribute attribute1 = attribute0.clone();
      boolean boolean0 = attribute1.equals(attribute0);
      assertEquals("", attribute1.getValue());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("/gwH^\"", "/gwH^\"");
      String string0 = attribute0.toString();
      assertEquals("/gwH^\"=\"/gwH^&quot;\"", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attribute attribute0 = new Attribute("/pmWT;~,u=6& ", "RH-VknFQr%G:F)R");
      // Undeclared exception!
      try { 
        attribute0.shouldCollapseAttribute((Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attribute attribute0 = new Attribute(",B]AHv_VX5w", ",B]AHv_VX5w");
      attribute0.setKey(",B]AHv_VX5w");
      assertEquals(",B]AHv_VX5w", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("K<7<dja(-!Ef%qx|", "K<7<dja(-!Ef%qx|", attributes0);
      attribute0.setKey("K<7<dja(-!Ef%qx|");
      assertEquals("K<7<dja(-!Ef%qx|", attribute0.getKey());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("K<7<dja(-!Ef%qx|", "K<7<dja(-!Ef%qx|");
      Attribute attribute0 = new Attribute("K<7<dja(-!Ef%qx|", "K<7<dja(-!Ef%qx|", attributes0);
      attribute0.setKey("K<7<dja(-!Ef%qx|");
      assertEquals("K<7<dja(-!Ef%qx|", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("g:?", "g:?", attributes0);
      String string0 = attribute0.setValue("g:?");
      assertEquals("g:?", attribute0.getValue());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("g:?", "g:?");
      Attribute attribute0 = new Attribute("g:?", "g:?", attributes1);
      String string0 = attribute0.setValue("g:?");
      assertEquals("g:?", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attribute attribute0 = new Attribute("`{O|0o#V&", (String) null);
      String string0 = attribute0.html();
      assertEquals("`{O|0o#V&", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = Attribute.isDataAttribute("data-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = Attribute.isDataAttribute("data-YUnGVNSnToEg#jp");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(34);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      Attribute.html("<]b", "<]b", (Appendable) charArrayWriter0, document_OutputSettings0);
      assertEquals(9, charArrayWriter0.size());
      assertEquals("<]b=\"<]b\"", charArrayWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attribute attribute0 = new Attribute("?hsdyxd#f^", "h}EK)$g");
      String string0 = attribute0.toString();
      assertEquals("?hsdyxd#f^=\"h}EK)$g\"", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("defer", "defer");
      String string0 = attribute0.html();
      assertEquals("defer", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attribute attribute0 = new Attribute("defer", "defer");
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attribute attribute0 = new Attribute("6", (String) null);
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded(",BAHv_VX5w", ",BAHv_VX5w");
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attribute attribute0 = new Attribute("S%&bl6FEIA]fv%zYj,", "");
      boolean boolean0 = attribute0.equals("S%&bl6FEIA]fv%zYj,");
      assertFalse(boolean0);
      assertEquals("", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attribute attribute0 = new Attribute("jowfp", "jowfp");
      boolean boolean0 = attribute0.equals(attribute0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attribute attribute0 = new Attribute("E+7LB\"6S}", (String) null);
      boolean boolean0 = attribute0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals("", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("d0AW<:N[QIZT@{^(", "d0AW<:N[QIZT@{^(");
      Attribute attribute1 = new Attribute("nowrap", "nowrap");
      boolean boolean0 = attribute0.equals(attribute1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("nowrap", "nowrap");
      Attribute attribute1 = attribute0.clone();
      boolean boolean0 = attribute0.equals(attribute1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Attribute attribute0 = new Attribute("nowrap", (String) null);
      attribute0.hashCode();
      assertEquals("", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("xDog9nRkx[;%CY5@X", "xDog9nRkx[;%CY5@X");
      attribute0.hashCode();
  }
}
