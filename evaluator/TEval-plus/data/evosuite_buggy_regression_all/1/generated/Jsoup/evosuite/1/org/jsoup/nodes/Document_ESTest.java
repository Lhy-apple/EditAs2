/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 13:43:48 GMT 2023
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Document_ESTest extends Document_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Document document0 = new Document("Gt");
      String string0 = document0.outerHtml();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Document document0 = Document.createShell("(gCGLgL(3~,");
      Document document1 = (Document)document0.html("(gCGLgL(3~,");
      Document document2 = document1.normalise();
      assertEquals("#document", document2.nodeName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Document document0 = new Document("mF^Q2Ags,");
      // Undeclared exception!
      try { 
        document0.text("mF^Q2Ags,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Document document0 = new Document("mF^Q2Ags,");
      String string0 = document0.nodeName();
      assertEquals("#document", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Document document0 = new Document("f%:mhZB");
      Element element0 = document0.createElement("NOSCRIPT");
      assertEquals("noscript", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Document document0 = Document.createShell("(gCGLgL(3~,");
      String string0 = document0.title();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Document document0 = new Document("&pEBEt`Uzvsy");
      Document document1 = document0.normalise();
      document1.title("&pEBEt`Uzvsy");
      String string0 = document0.title();
      assertEquals("&pEBEt`Uzvsy", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Document document0 = new Document("Gt");
      Document document1 = document0.normalise();
      document1.title("Gt");
      document0.title(" ");
      assertEquals("Gt", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Document document0 = Document.createShell("(gCGLgL(3~,");
      document0.html(" ");
      Document document1 = document0.normalise();
      assertSame(document1, document0);
  }
}
