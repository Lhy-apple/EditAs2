/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 13:52:51 GMT 2023
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.CharArrayWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attribute_ESTest extends Attribute_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attribute attribute0 = new Attribute(" h'3qVVw*Yy 3,w7 ", " h'3qVVw*Yy 3,w7 ");
      String string0 = attribute0.html();
      assertEquals("h'3qVVw*Yy 3,w7=\" h'3qVVw*Yy 3,w7 \"", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("!:", "!:");
      attributes0.put(attribute0);
      String string0 = attribute0.setValue("!:");
      assertEquals("!:", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("3", "3");
      boolean boolean0 = attribute0.isDataAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attribute attribute0 = new Attribute("3", "3");
      Attribute attribute1 = attribute0.clone();
      boolean boolean0 = attribute1.equals(attribute0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("allowfullsEreen", "allowfullsEreen");
      String string0 = attribute0.toString();
      assertEquals("allowfullsEreen=\"allowfullsEreen\"", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attribute attribute0 = new Attribute("UL7b'2M<Z/'T`L3L", "UL7b'2M<Z/'T`L3L");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      boolean boolean0 = attribute0.shouldCollapseAttribute(document_OutputSettings0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attribute attribute0 = new Attribute("G@QWF", "G@QWF");
      attribute0.setKey("G@QWF");
      assertEquals("G@QWF", attribute0.getKey());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("-U.Gi\"", "-U.Gi\"", attributes0);
      attribute0.setKey("-U.Gi\"");
      assertEquals("-U.Gi\"", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("-U.Gi\"", "-U.Gi\"");
      Attribute attribute0 = new Attribute("-U.Gi\"", "-U.Gi\"", attributes0);
      attribute0.setKey("-U.Gi\"");
      assertEquals("-U.Gi\"", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attribute attribute0 = new Attribute("FB3l|+`R[2?'k12~r{", (String) null);
      String string0 = attribute0.html();
      assertEquals("FB3l|+`R[2?'k12~r{", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = Attribute.isDataAttribute("data-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = Attribute.isDataAttribute("data-[");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("E8,zaGs,", "E8,zaGs,");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(917);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      attribute0.html((Appendable) charArrayWriter0, document_OutputSettings1);
      assertEquals(21, charArrayWriter0.size());
      assertEquals("E8,zaGs,=\"E8,zaGs,\"", charArrayWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Attribute attribute0 = new Attribute("nohref", "");
      String string0 = attribute0.html();
      assertEquals("", attribute0.getValue());
      assertEquals("nohref", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("open", "open");
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attribute attribute0 = new Attribute("%\"\"6Mb|$u_v", (String) null);
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attribute attribute0 = new Attribute(" ", " ");
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attribute attribute0 = new Attribute("G@QWF", "G@QWF");
      boolean boolean0 = attribute0.equals("G@QWF");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attribute attribute0 = new Attribute("3", "3");
      boolean boolean0 = attribute0.equals(attribute0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attribute attribute0 = new Attribute("w_MF-0s8dv,KQz", "w_MF-0s8dv,KQz", (Attributes) null);
      boolean boolean0 = attribute0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attribute attribute0 = new Attribute(" h'3qVw*/y 3,w7 ", " h'3qVw*/y 3,w7 ");
      Attribute attribute1 = Attribute.createFromEncoded("a9\"", "a9\"");
      boolean boolean0 = attribute0.equals(attribute1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attribute attribute0 = new Attribute("OG", (String) null);
      Attribute attribute1 = attribute0.clone();
      boolean boolean0 = attribute1.equals(attribute0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attribute attribute0 = new Attribute("OG", (String) null);
      Attribute attribute1 = new Attribute("OG", "OG");
      boolean boolean0 = attribute0.equals(attribute1);
      assertFalse(boolean0);
      assertTrue(attribute1.equals((Object)attribute0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attribute attribute0 = new Attribute(" h'3qVVw*Yy 3,w7 ", " h'3qVVw*Yy 3,w7 ");
      attribute0.hashCode();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attribute attribute0 = new Attribute("FB3l|+`R[2?'k12~r{", (String) null);
      attribute0.hashCode();
  }
}
