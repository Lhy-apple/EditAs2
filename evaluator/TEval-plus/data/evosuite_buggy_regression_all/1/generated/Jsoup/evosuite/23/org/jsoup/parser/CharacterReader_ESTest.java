/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 13:46:00 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("PzK#Kl{X~;XI");
      characterReader0.rewindToMark();
      assertEquals("PzK#Kl{X~;XI", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("PzK#Kl{X~;XI");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("nW^||'_j)");
      assertFalse(boolean0);
      assertEquals("PzK#Kl{X~;XI", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("PzK#Kl{X~;XI");
      characterReader0.mark();
      assertEquals("PzK#Kl{X~;XI", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("PzK#Kl{X~;XI");
      characterReader0.advance();
      assertEquals("zK#Kl{X~;XI", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("PzK#Kl{X~;XI");
      boolean boolean0 = characterReader0.matchConsume("i24=T4s");
      assertEquals("PzK#Kl{X~;XI", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("\r\n?");
      characterReader0.unconsume();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      String string0 = characterReader0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("PzK#Kl{X~;XI");
      characterReader0.consumeAsString();
      assertEquals("zK#Kl{X~;XI", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("@yhi7S),i/9y)ev");
      assertEquals("@yhi7S),i/9y)ev", characterReader0.toString());
      
      characterReader0.consumeToEnd();
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("PzK#Kl{X~;XI");
      characterReader0.consumeLetterSequence();
      characterReader0.consumeDigitSequence();
      assertEquals("#Kl{X~;XI", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("d_");
      char char0 = characterReader0.current();
      assertEquals('d', char0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("PzK#Kl{X~;XI");
      char char0 = characterReader0.consume();
      assertEquals("zK#Kl{X~;XI", characterReader0.toString());
      assertEquals('P', char0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("i%68ol");
      characterReader0.matchConsumeIgnoreCase("i%68ol");
      assertEquals("", characterReader0.toString());
      
      char char0 = characterReader0.consume();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("PzK#Kl{X~;XI");
      characterReader0.consumeTo('?');
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("@yhi7S),i/9y)ev");
      characterReader0.consumeToEnd();
      String string0 = characterReader0.consumeTo("@yhi7S),i/9y)ev");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("@yhi7S),i/9y)ev");
      String string0 = characterReader0.consumeTo("@yhi7S),i/9y)ev");
      assertEquals("", string0);
      assertEquals("@yhi7S),i/9y)ev", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("PzK#Kl{X~;XI");
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      characterReader0.consumeToAny(charArray0);
      assertEquals("{X~;XI", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("i%68ol");
      characterReader0.matchConsumeIgnoreCase("i%68ol");
      assertEquals("", characterReader0.toString());
      
      char[] charArray0 = new char[1];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("@yhi7S),i/9y)ev");
      characterReader0.consumeToEnd();
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("43nRmR/)Bj)mHhZg(AyZ48.K|");
      characterReader0.consumeHexSequence();
      assertEquals("nRmR/)Bj)mHhZg(AyZ48.K|", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(";z1ADP8d6/dQp+^<'");
      characterReader0.consumeTo('A');
      characterReader0.consumeHexSequence();
      assertEquals("P8d6/dQp+^<'", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("b,d,.");
      characterReader0.consumeHexSequence();
      assertEquals(",d,.", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("@yhi7S),i/9y)ev");
      assertEquals("@yhi7S),i/9y)ev", characterReader0.toString());
      
      characterReader0.consumeToEnd();
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("70X!2XO|Eu9p4Y");
      characterReader0.consumeDigitSequence();
      assertEquals("X!2XO|Eu9p4Y", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matches('1');
      assertFalse(boolean0);
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("hEy");
      boolean boolean0 = characterReader0.matches('h');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("43nRmR/)Bj)mHhZg(AyZ48.K|");
      boolean boolean0 = characterReader0.matches('b');
      assertEquals("43nRmR/)Bj)mHhZg(AyZ48.K|", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("hEy");
      char[] charArray0 = new char[9];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals("hEy", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("i%68ol");
      characterReader0.matchConsumeIgnoreCase("i%68ol");
      char[] charArray0 = new char[1];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals("", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("PzK#Kl{X~;XI");
      char[] charArray0 = new char[7];
      charArray0[1] = 'P';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("hEy");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("43nRmR/)Bj)mHhZg(AyZ48.K|");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals("43nRmR/)Bj)mHhZg(AyZ48.K|", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("B?lrmBBJG~VVqH");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("hEy");
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals("", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("43nRmR/)Bj)mHhZg(AyZ48.K|");
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("i%68ol");
      characterReader0.matchConsumeIgnoreCase("i%68ol");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals("", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("\r\n?");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
      assertEquals("\n?", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("PzK#Kl{X~;XI");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
      assertEquals("PzK#Kl{X~;XI", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("string must");
      boolean boolean0 = characterReader0.matchConsume("string must");
      assertEquals("", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("@yhi7S),i/9y)ev");
      boolean boolean0 = characterReader0.containsIgnoreCase("");
      assertEquals("@yhi7S),i/9y)ev", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("43nRmR/)Bj)mHhZg(AyZ48.K|");
      boolean boolean0 = characterReader0.containsIgnoreCase("43nRmR/)Bj)mHhZg(AyZ48.K|");
      assertEquals("43nRmR/)Bj)mHhZg(AyZ48.K|", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("S\"'{");
      boolean boolean0 = characterReader0.containsIgnoreCase("S\"'{");
      assertTrue(boolean0);
  }
}
