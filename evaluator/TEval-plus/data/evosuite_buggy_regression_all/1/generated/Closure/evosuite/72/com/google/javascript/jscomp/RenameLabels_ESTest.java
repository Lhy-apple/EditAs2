/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 13:10:04 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.RenameLabels;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RenameLabels_ESTest extends RenameLabels_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(124, "7a}Q.");
      Node node1 = new Node(126, node0, 24, 17);
      RenameLabels renameLabels0 = new RenameLabels(compiler0);
      Node node2 = new Node(27, node1, 42, 4);
      renameLabels0.process(node0, node2);
      assertFalse(node1.hasOneChild());
      assertEquals(98321, node0.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("~2\u0001-nr;56u!E^@1,vAF");
      Node node1 = new Node(126, node0, 10, 50);
      node0.addChildrenToBack(node1);
      RenameLabels renameLabels0 = new RenameLabels(compiler0);
      // Undeclared exception!
      try { 
        renameLabels0.process(node1, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // null
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(116, "7a}Q.");
      RenameLabels renameLabels0 = new RenameLabels(compiler0);
      renameLabels0.process(node0, node0);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("");
      Node node1 = new Node(117, node0, 43, 22);
      RenameLabels renameLabels0 = new RenameLabels(compiler0);
      // Undeclared exception!
      try { 
        renameLabels0.process(node1, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // null
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("]($qEmtT:");
      Node node1 = new Node(117, node0, 43, 22);
      RenameLabels renameLabels0 = new RenameLabels(compiler0);
      renameLabels0.process(node1, node1);
      assertEquals((-3), Node.LOCAL_BLOCK_PROP);
  }
}
