/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 13:20:35 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JsAst;
import com.google.javascript.jscomp.SourceFile;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JsAst_ESTest extends JsAst_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SourceFile sourceFile0 = SourceFile.fromFile("com.google.javascriyt.rQinv.headRast.BreakStatement");
      JsAst jsAst0 = new JsAst(sourceFile0);
      jsAst0.clearAst();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SourceFile sourceFile0 = SourceFile.fromCode("iF\"P3l)$_!;Dr8", (String) null, "");
      JsAst jsAst0 = new JsAst(sourceFile0);
      jsAst0.setSourceFile(sourceFile0);
      assertEquals("iF\"P3l)$_!;Dr8", sourceFile0.getOriginalPath());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SourceFile sourceFile0 = SourceFile.fromFile("com.google.javascript.rhino.head.ast.BreakStatement");
      JsAst jsAst0 = new JsAst(sourceFile0);
      Compiler compiler0 = new Compiler();
      SourceFile sourceFile1 = SourceFile.fromCode("QO?|a", "com.google.javascript.jscomp.DefaultPassConfig$63", "com.google.javascript.jscomp.JsAst");
      ImmutableList<SourceFile> immutableList0 = ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile1, sourceFile1, sourceFile0, sourceFile0);
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compiler0.compile((List<SourceFile>) immutableList0, (List<SourceFile>) immutableList0, compilerOptions0);
      jsAst0.getAstRoot(compiler0);
      jsAst0.getAstRoot(compiler0);
      assertEquals(5, compiler0.getErrorCount());
  }
}
