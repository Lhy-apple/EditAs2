/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 13:23:48 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.ControlFlowAnalysis;
import com.google.javascript.jscomp.JqueryCodingConvention;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.OptimizeArgumentsArray;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.jscomp.StrictModeCheck;
import com.google.javascript.jscomp.TypedScopeCreator;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypedScopeCreator_ESTest extends TypedScopeCreator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      TypedScopeCreator typedScopeCreator0 = null;
      try {
        typedScopeCreator0 = new TypedScopeCreator(compiler0, jqueryCodingConvention0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      String string0 = "}j'v o=8d5'PfA5";
      String string1 = "ahx3lW3iB";
      Node node0 = compiler0.parseSyntheticCode("}j'v o=8d5'PfA5", "ahx3lW3iB");
      jqueryCodingConvention0.getObjectLiteralCast(node0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, jqueryCodingConvention0);
      typedScopeCreator0.createInitialScope(node0);
      typedScopeCreator0.createInitialScope(node0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      String string0 = "Performing HotSwap for pass ";
      String string1 = "ahx3lW3iB";
      Node node0 = compiler0.parseSyntheticCode("Performing HotSwap for pass ", "ahx3lW3iB");
      jqueryCodingConvention0.getObjectLiteralCast(node0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, jqueryCodingConvention0);
      Scope scope0 = typedScopeCreator0.createInitialScope(node0);
      typedScopeCreator0.patchGlobalScope(scope0, node0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      String string0 = "}j'v o=8d5'PfA5";
      String string1 = "ahx3lW3iB";
      Node node0 = compiler0.parseSyntheticCode("}j'v o=8d5'PfA5", "ahx3lW3iB");
      jqueryCodingConvention0.getObjectLiteralCast(node0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, jqueryCodingConvention0);
      Scope scope0 = typedScopeCreator0.createInitialScope(node0);
      typedScopeCreator0.createScope(node0, scope0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      String string0 = "}j'v o=8d5'PfA5";
      String string1 = "ahx3lW3iB";
      Node node0 = compiler0.parseSyntheticCode(string0, string1);
      jqueryCodingConvention0.getObjectLiteralCast(node0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, jqueryCodingConvention0);
      Compiler compiler1 = new Compiler();
      OptimizeArgumentsArray optimizeArgumentsArray0 = new OptimizeArgumentsArray(compiler1);
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, optimizeArgumentsArray0, typedScopeCreator0);
      Compiler compiler2 = nodeTraversal0.getCompiler();
      TypedScopeCreator typedScopeCreator1 = new TypedScopeCreator(compiler2, jqueryCodingConvention0);
      Node node1 = ControlFlowAnalysis.getExceptionHandler(node0);
      Scope scope0 = nodeTraversal0.getScope();
      typedScopeCreator0.createScope(node1, scope0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      String string0 = "}j'vo=85'PfA5";
      String string1 = "ahx3lW3iB";
      Node node0 = compiler0.parseSyntheticCode("}j'vo=85'PfA5", "ahx3lW3iB");
      jqueryCodingConvention0.getObjectLiteralCast(node0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      Scope scope0 = typedScopeCreator0.createInitialScope(node0);
      TypedScopeCreator typedScopeCreator1 = new TypedScopeCreator(compiler0, jqueryCodingConvention0);
      typedScopeCreator1.patchGlobalScope(scope0, node0);
      Scope scope1 = typedScopeCreator1.createScope(node0, scope0);
      typedScopeCreator0.patchGlobalScope(scope1, node0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      String string0 = "}j'v o=8d5'PfA5";
      String string1 = "ahx3lW3iB";
      Node node0 = compiler0.parseSyntheticCode(string0, string1);
      jqueryCodingConvention0.getObjectLiteralCast(node0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, jqueryCodingConvention0);
      typedScopeCreator0.createInitialScope(node0);
      TypedScopeCreator typedScopeCreator1 = new TypedScopeCreator(compiler0, jqueryCodingConvention0);
      boolean boolean0 = true;
      boolean boolean1 = false;
      StrictModeCheck strictModeCheck0 = new StrictModeCheck(compiler0, boolean0, boolean1);
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, strictModeCheck0, typedScopeCreator0);
      Scope scope0 = nodeTraversal0.getScope();
      typedScopeCreator1.createScope(node0, scope0);
  }
}
