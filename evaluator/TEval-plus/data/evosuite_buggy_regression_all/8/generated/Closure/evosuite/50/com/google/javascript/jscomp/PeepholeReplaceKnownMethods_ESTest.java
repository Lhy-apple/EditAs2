/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 02:11:45 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.CheckMissingGetCssName;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.PeepholeReplaceKnownMethods;
import com.google.javascript.jscomp.ScopeCreator;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PeepholeReplaceKnownMethods_ESTest extends PeepholeReplaceKnownMethods_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods();
      Node node0 = Node.newNumber((-1.0));
      Node node1 = peepholeReplaceKnownMethods0.optimizeSubtree(node0);
      assertEquals(53, Node.LAST_PROP);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods();
      Node node0 = new Node(33);
      Node node1 = Node.newNumber((double) 9);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(37, node0, node0, node0, 45, 13);
      Node node3 = peepholeReplaceKnownMethods0.optimizeSubtree(node2);
      assertNotNull(node3);
      assertEquals(37, node3.getType());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods();
      Node node0 = new Node(37, 37, 37);
      Node node1 = peepholeReplaceKnownMethods0.optimizeSubtree(node0);
      assertEquals(0, node1.getLength());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods();
      Compiler compiler0 = new Compiler();
      CheckLevel checkLevel0 = CheckLevel.WARNING;
      CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallback$CopyideEffectSubexpressions");
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0, (ScopeCreator) null);
      peepholeReplaceKnownMethods0.beginTraversal(nodeTraversal0);
      Node node0 = new Node(37);
      Node node1 = new Node(37, node0, node0, node0, 45, 13);
      Node node2 = peepholeReplaceKnownMethods0.optimizeSubtree(node1);
      assertTrue(node2.hasChildren());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods();
      Node node0 = new Node(33);
      Node node1 = new Node(51);
      Node node2 = new Node(37, node0, node1, node1, 32, 2);
      // Undeclared exception!
      try { 
        peepholeReplaceKnownMethods0.optimizeSubtree(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.PeepholeReplaceKnownMethods", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods();
      Node node0 = new Node(33);
      Node node1 = Node.newNumber((double) 9);
      Node node2 = new Node(37, node0, node0, node1);
      // Undeclared exception!
      try { 
        peepholeReplaceKnownMethods0.optimizeSubtree(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.PeepholeReplaceKnownMethods", e);
      }
  }
}
