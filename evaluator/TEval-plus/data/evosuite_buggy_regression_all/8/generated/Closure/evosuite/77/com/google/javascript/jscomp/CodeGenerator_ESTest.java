/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 02:16:52 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.CodeConsumer;
import com.google.javascript.jscomp.CodeGenerator;
import com.google.javascript.rhino.Node;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CodeGenerator_ESTest extends CodeGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Node node0 = new Node(51);
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
      // Undeclared exception!
      try { 
        codeGenerator0.addList(node0, true, codeGenerator_Context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = CodeGenerator.regexpEscape("K}z7J.\"^]>TeAvd&");
      assertEquals("/K}z7J.\"^]>TeAvd&/", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Node node0 = new Node(43, 43, 43);
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      // Undeclared exception!
      try { 
        codeGenerator0.addList(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      // Undeclared exception!
      try { 
        codeGenerator0.tagAsStrict();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = CodeGenerator.escapeToDoubleQuotedJsString("\"PnH<!--T->dLQ[cY^z\"");
      assertEquals("\"\\\"PnH<\\!--T->dLQ[cY^z\\\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      // Undeclared exception!
      try { 
        codeGenerator0.addCaseBody((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      codeGenerator0.addList((Node) null, true);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Node node0 = new Node(85);
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      // Undeclared exception!
      try { 
        codeGenerator0.addArrayList(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Node node0 = Node.newString("!B=H--ul/m");
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
      // Undeclared exception!
      try { 
        codeGenerator0.addList(node0, true, codeGenerator_Context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      Node node0 = Node.newNumber((double) 48);
      CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.START_OF_EXPR;
      // Undeclared exception!
      try { 
        codeGenerator0.addList(node0, false, codeGenerator_Context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      codeGenerator0.addArrayList((Node) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      codeGenerator0.addAllSiblings((Node) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      // Undeclared exception!
      try { 
        codeGenerator0.addAllSiblings(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = CodeGenerator.jsString("un7lAS'l.>|KU#U", (CharsetEncoder) null);
      assertEquals("\"un7lAS'l.>|KU#U\"", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = CodeGenerator.jsString("\u0001 \u0001(\t\u0012\u0012\n\ninput_type~\u0002 \u0001(\t\u0012\u0013\n\u000Boutput_type\u0018\u0003 \u0001(\t\u0012/\n\u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.protobuf.MethodOptions\"\u00A4\u0003\n\u000BFileOptions\u0012\u0014\n\fjava_package\u0018\u0001 \u0001(\t\u0012\u001C\n\u0014java_outer_classname\u0018\b \u0001(\t\u0012\"\n\u0013java_multiple_files\u0018\n \u0001(\b:\u0005false\u0012F\n\foptimize_for\u0018\t \u0001(\u000E2).google.protobuf.ileOptions.OptimizeMode:\u0005SPEED\u0012!\n\u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#\n\u0015java_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!=\u0013py_generic_services\u0018\u0012 \u0001(\b:\u0004true\u0012C\n\u0014uninterpreted_opti", (CharsetEncoder) null);
      assertEquals("'\\u0001 \\u0001(\\t\\u0012\\u0012\\n\\ninput_type~\\u0002 \\u0001(\\t\\u0012\\u0013\\n\\u000boutput_type\\u0018\\u0003 \\u0001(\\t\\u0012/\\n\\u0007options\\u0018\\u0004 \\u0001(\\u000b2\\u001e.google.protobuf.MethodOptions\"\\u00a4\\u0003\\n\\u000bFileOptions\\u0012\\u0014\\n\\u000cjava_package\\u0018\\u0001 \\u0001(\\t\\u0012\\u001c\\n\\u0014java_outer_classname\\u0018\\u0008 \\u0001(\\t\\u0012\"\\n\\u0013java_multiple_files\\u0018\\n \\u0001(\\u0008:\\u0005false\\u0012F\\n\\u000coptimize_for\\u0018\\t \\u0001(\\u000e2).google.protobuf.ileOptions.OptimizeMode:\\u0005SPEED\\u0012!\\n\\u0013cc_generic_services\\u0018\\u0010 \\u0001(\\u0008:\\u0004true\\u0012#\\n\\u0015java_generic_services\\u0018\\u0011 \\u0001(\\u0008:\\u0004true\\u0012!=\\u0013py_generic_services\\u0018\\u0012 \\u0001(\\u0008:\\u0004true\\u0012C\\n\\u0014uninterpreted_opti'", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = CodeGenerator.regexpEscape("\r");
      assertEquals("/\\r/", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = CodeGenerator.escapeToDoubleQuotedJsString(">yx!(c");
      assertEquals("\">yx!(c\"", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = CodeGenerator.regexpEscape("\"PnH<!--->dLQ[cY^C\"");
      assertEquals("/\"PnH<\\!---\\>dLQ[cY^C\"/", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = CodeGenerator.regexpEscape("f</scripthbCg");
      assertEquals("/f<\\/scripthbCg/", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = CodeGenerator.escapeToDoubleQuotedJsString("<");
      assertEquals("\"<\"", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      CharsetEncoder charsetEncoder0 = charset0.newEncoder();
      String string0 = CodeGenerator.regexpEscape("5wvT-kE~ls3Y&-L;|O", charsetEncoder0);
      assertEquals("/5wvT-kE~ls3Y&-L;|O/", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = CodeGenerator.identifierEscape("\u0001 \u0001(\t\u0012\u0012\n\ninput_type~\u0002 \u0001(\t\u0012\u0013\n\u000Boutput_type\u0018\u0003 \u0001(\t\u0012Z\n\u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.protobuf.MethodOptions\"\u00A4\u0003\n\u000BFileOptions\u0012\u0014\n\fjava_package\u0018\u0001 \u0001(\t\u0012\u001C\n\u0014java_outer_classname\u0018\b \u0001(\t\u0012\"\n\u0013java_multiple_files\u0018\n \u0001(\b:\u0005false\u0012F\n\foptimize_for\u0018\t \u0001(\u000E2).google.protobuf.ileOptions.OptimizeMode:\u0005SPEED\u0012!\n\u0013cc_generic_services\u0010 \u0001(\b:\u0004true\u0012#\n\u0015java_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!=\u0013py_generic_services\u0018\u0012 \u0001(\b:\u0004true\u0012C\n\u0014uninterpreted_opti");
      assertEquals("\\u0001 \\u0001(\\u0009\\u0012\\u0012\\u000a\\u000ainput_type~\\u0002 \\u0001(\\u0009\\u0012\\u0013\\u000a\\u000boutput_type\\u0018\\u0003 \\u0001(\\u0009\\u0012Z\\u000a\\u0007options\\u0018\\u0004 \\u0001(\\u000b2\\u001e.google.protobuf.MethodOptions\"\\u00a4\\u0003\\u000a\\u000bFileOptions\\u0012\\u0014\\u000a\\u000cjava_package\\u0018\\u0001 \\u0001(\\u0009\\u0012\\u001c\\u000a\\u0014java_outer_classname\\u0018\\u0008 \\u0001(\\u0009\\u0012\"\\u000a\\u0013java_multiple_files\\u0018\\u000a \\u0001(\\u0008:\\u0005false\\u0012F\\u000a\\u000coptimize_for\\u0018\\u0009 \\u0001(\\u000e2).google.protobuf.ileOptions.OptimizeMode:\\u0005SPEED\\u0012!\\u000a\\u0013cc_generic_services\\u0010 \\u0001(\\u0008:\\u0004true\\u0012#\\u000a\\u0015java_generic_services\\u0018\\u0011 \\u0001(\\u0008:\\u0004true\\u0012!=\\u0013py_generic_services\\u0018\\u0012 \\u0001(\\u0008:\\u0004true\\u0012C\\u000a\\u0014uninterpreted_opti", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = CodeGenerator.identifierEscape("'fuS0l");
      assertEquals("'fuS0l", string0);
  }
}
