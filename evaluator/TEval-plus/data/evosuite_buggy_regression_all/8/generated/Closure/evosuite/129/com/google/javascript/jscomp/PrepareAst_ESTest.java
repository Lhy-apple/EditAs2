/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 02:27:01 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.PrepareAst;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PrepareAst_ESTest extends PrepareAst_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      PrepareAst prepareAst0 = new PrepareAst(compiler0);
      prepareAst0.process((Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(112, 112, 112);
      PrepareAst prepareAst0 = new PrepareAst(compiler0, true);
      Node node1 = new Node(29, node0, node0);
      prepareAst0.process(node1, node1);
      assertEquals(0, Node.SIDE_EFFECTS_ALL);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(110, 110, 110);
      PrepareAst prepareAst0 = new PrepareAst(compiler0, true);
      prepareAst0.process(node0, node0);
      assertFalse(node0.isContinue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(119, 119, 596);
      PrepareAst prepareAst0 = new PrepareAst(compiler0, true);
      Node node1 = new Node(119, 119, 596);
      Node node2 = new Node(119, node1, node0);
      // Undeclared exception!
      try { 
        prepareAst0.process(node0, node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // normalizeNodeType constraints violated
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      PrepareAst prepareAst0 = new PrepareAst(compiler0);
      Node node0 = new Node(40, 40, 40);
      Node node1 = new Node(37, node0, node0);
      prepareAst0.process(node1, node0);
      assertEquals(49, Node.DIRECT_EVAL);
  }
}
