/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 03:20:01 GMT 2023
 */

package com.fasterxml.jackson.databind.node;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.json.UTF8JsonGenerator;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.ByteArrayBuilder;
import com.fasterxml.jackson.core.util.JsonGeneratorDelegate;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.jsontype.TypeSerializer;
import com.fasterxml.jackson.databind.node.POJONode;
import com.fasterxml.jackson.databind.node.ShortNode;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.util.RawValue;
import java.net.Proxy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class POJONode_ESTest extends POJONode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      Object object0 = pOJONode0.getPojo();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      POJONode pOJONode0 = new POJONode("com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor");
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, pOJONode0, true);
      ObjectMapper objectMapper0 = new ObjectMapper();
      ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
      UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-1), objectMapper0, byteArrayBuilder0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        pOJONode0.serializeWithType(uTF8JsonGenerator0, defaultSerializerProvider_Impl0, (TypeSerializer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.node.ValueNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Proxy.Type proxy_Type0 = Proxy.Type.DIRECT;
      POJONode pOJONode0 = new POJONode(proxy_Type0);
      pOJONode0.hashCode();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      POJONode pOJONode0 = new POJONode("com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor");
      boolean boolean0 = pOJONode0.isPojo();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TextNode textNode0 = TextNode.EMPTY_STRING_NODE;
      POJONode pOJONode0 = new POJONode(textNode0);
      byte[] byteArray0 = pOJONode0.binaryValue();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      POJONode pOJONode0 = new POJONode("7_JR:6&,]r)OYc");
      String string0 = pOJONode0.asText();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      String string0 = pOJONode0.asText();
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      POJONode pOJONode0 = new POJONode("*X;9D6#U/@7~");
      String string0 = pOJONode0.asText("*X;9D6#U/@7~");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      String string0 = pOJONode0.asText("y*7LnB|z)2sh[Vx|");
      assertEquals("y*7LnB|z)2sh[Vx|", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      boolean boolean0 = pOJONode0.asBoolean(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Boolean boolean0 = new Boolean("null");
      POJONode pOJONode0 = new POJONode(boolean0);
      boolean boolean1 = pOJONode0.asBoolean();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      POJONode pOJONode0 = new POJONode("*X;)9D6L#U/@7~");
      boolean boolean0 = pOJONode0.asBoolean(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      int int0 = pOJONode0.asInt((-1175));
      assertEquals((-1175), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Float float0 = new Float(766.722737134);
      POJONode pOJONode0 = new POJONode(float0);
      int int0 = pOJONode0.asInt((-2041));
      assertEquals(766, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      long long0 = pOJONode0.asLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Float float0 = new Float(766.722737134);
      POJONode pOJONode0 = new POJONode(float0);
      long long0 = pOJONode0.asLong();
      assertEquals(766L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      double double0 = pOJONode0.asDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Double double0 = new Double(1.0);
      POJONode pOJONode0 = new POJONode(double0);
      double double1 = pOJONode0.asDouble(1.0);
      assertEquals(1.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      POJONode pOJONode0 = new POJONode(fileSystemHandling0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        pOJONode0.serialize((JsonGenerator) null, defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.node.POJONode", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      JsonGeneratorDelegate jsonGeneratorDelegate0 = new JsonGeneratorDelegate((JsonGenerator) null);
      // Undeclared exception!
      try { 
        pOJONode0.serialize(jsonGeneratorDelegate0, (SerializerProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.node.POJONode", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ShortNode shortNode0 = new ShortNode((short) (-2586));
      POJONode pOJONode0 = new POJONode(shortNode0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        pOJONode0.serialize((JsonGenerator) null, defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.node.ShortNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      POJONode pOJONode0 = new POJONode("*X;)9D6L#U/@7~");
      boolean boolean0 = pOJONode0.equals((Object) pOJONode0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      boolean boolean0 = pOJONode0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      POJONode pOJONode0 = new POJONode("*X9D6#U/@7~");
      POJONode pOJONode1 = new POJONode(pOJONode0);
      boolean boolean0 = pOJONode1.equals((Object) pOJONode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      boolean boolean0 = pOJONode0._pojoEquals(pOJONode0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      POJONode pOJONode1 = new POJONode(pOJONode0);
      boolean boolean0 = pOJONode0._pojoEquals(pOJONode1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RawValue rawValue0 = new RawValue("not a valid representation: %s");
      POJONode pOJONode0 = new POJONode(rawValue0);
      String string0 = pOJONode0.toString();
      assertEquals("(raw value '[RawValue of type `java.lang.String`]')", string0);
  }
}
