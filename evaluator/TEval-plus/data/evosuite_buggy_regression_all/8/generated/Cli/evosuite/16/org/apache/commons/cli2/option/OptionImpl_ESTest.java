/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 01:58:06 GMT 2023
 */

package org.apache.commons.cli2.option;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Locale;
import org.apache.commons.cli2.Group;
import org.apache.commons.cli2.Option;
import org.apache.commons.cli2.WriteableCommandLine;
import org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
import org.apache.commons.cli2.option.ArgumentImpl;
import org.apache.commons.cli2.option.Command;
import org.apache.commons.cli2.option.DefaultOption;
import org.apache.commons.cli2.option.GroupImpl;
import org.apache.commons.cli2.option.PropertyOption;
import org.apache.commons.cli2.option.SourceDestArgument;
import org.apache.commons.cli2.validation.FileValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptionImpl_ESTest extends OptionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("<4I[/?~26%6s", "<4I[/?~26%6s", 0, 0, 'I', 'I', fileValidator0, "<4I[/?~26%6s", linkedList0, 0);
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "<4I[/?~26%6s", "<4I[/?~26%6s", 0, 0);
      DefaultOption defaultOption0 = new DefaultOption("<4I[/?~26%6s", "<4I[/?~26%6s", false, "<4I[/?~26%6s", "<4I[/?~26%6s", linkedHashSet0, linkedHashSet0, false, argumentImpl0, groupImpl0, 0);
      String string0 = defaultOption0.toString();
      assertEquals("[<4I[/?~26%6s  [<4I[/?~26%6s ()]]", string0);
      assertEquals(0, defaultOption0.getId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<Command> linkedList0 = new LinkedList<Command>();
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "$NNN", "$NNN", 0, 0);
      WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);
      groupImpl0.defaults(writeableCommandLineImpl0);
      assertEquals(0, groupImpl0.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("<4I[/?~26%6s", "<4I[/?~26%6s", 0, 0, 'I', 'I', fileValidator0, "<4I[/?~26%6s", linkedList0, 0);
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "<4I[/?~26%6s", "<4I[/?~26%6s", 0, 0);
      DefaultOption defaultOption0 = new DefaultOption("<4I[/?~26%6s", "<4I[/?~26%6s", false, "<4I[/?~26%6s", "<4I[/?~26%6s", linkedHashSet0, linkedHashSet0, false, argumentImpl0, groupImpl0, 0);
      boolean boolean0 = defaultOption0.equals(argumentImpl0);
      assertEquals(0, defaultOption0.getId());
      assertFalse(defaultOption0.isRequired());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("<4I[/?~26%6{", "<4I[/?~26%6{", 0, 0, '9', '9', fileValidator0, "<4I[/?~26%6{", linkedList0, 0);
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "<4I[/?~26%6{", "<4I[/?~26%6{", 0, 0);
      WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      ListIterator<Object> listIterator0 = linkedList1.listIterator();
      boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, (ListIterator) listIterator0);
      assertEquals(0, groupImpl0.getId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PropertyOption propertyOption0 = new PropertyOption();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);
      ListIterator<PropertyOption> listIterator0 = (ListIterator<PropertyOption>) mock(ListIterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(listIterator0).hasNext();
      doReturn((Object) null).when(listIterator0).next();
      doReturn((Object) null).when(listIterator0).previous();
      propertyOption0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, (ListIterator) listIterator0);
      assertEquals(68, propertyOption0.getId());
      assertFalse(propertyOption0.isRequired());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("<4I[/?~26%6s", "<4I[/?~26%6s", 10, 10, 'A', 'A', fileValidator0, "<4I[/?~26%6s", linkedList0, 10);
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "<4I[/?~26%6s", "<4I[/?~26%6s", 10, 10);
      DefaultOption defaultOption0 = new DefaultOption("<4I[/?~26%6s", "<4I[/?~26%6s", true, "<4I[/?~26%6s", "<4I[/?~26%6s", linkedHashSet0, linkedHashSet0, true, argumentImpl0, groupImpl0, 10);
      boolean boolean0 = defaultOption0.equals(linkedHashSet0);
      assertEquals(10, defaultOption0.getId());
      assertFalse(boolean0);
      assertTrue(defaultOption0.isRequired());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("<4I[/?~2%{", "<4I[/?~2%{", (-10), (-10), 'I', 'I', fileValidator0, "<4I[/?~2%{", linkedList0, (-10));
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "<4I[/?~2%{", "<4I[/?~2%{", (-10), (-10));
      DefaultOption defaultOption0 = new DefaultOption("<4I[/?~2%{", "<4I[/?~2%{", false, "<4I[/?~2%{", "<4I[/?~2%{", linkedHashSet0, linkedHashSet0, false, argumentImpl0, groupImpl0, (-10));
      boolean boolean0 = defaultOption0.equals(groupImpl0);
      assertEquals((-10), defaultOption0.getId());
      assertFalse(boolean0);
      assertFalse(defaultOption0.isRequired());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("<4I[/?~2%{", "<4I[/?~2%{", 0, 0, 'I', 'I', fileValidator0, "<4I[/?~2%{", linkedList0, 0);
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "<4I[/?~2%{", "<4I[/?~2%{", 0, 0);
      DefaultOption defaultOption0 = new DefaultOption("<4I[/?~2%{", "<4I[/?~2%{", false, "<4I[/?~2%{", "<4I[/?~2%{", linkedHashSet0, linkedHashSet0, false, argumentImpl0, groupImpl0, 0);
      SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);
      boolean boolean0 = defaultOption0.equals(sourceDestArgument0);
      assertEquals(0, sourceDestArgument0.getId());
      assertFalse(defaultOption0.isRequired());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("<4I[/?~26%6s", (String) null, 36, 36, 'A', 'A', fileValidator0, "<4I[/?~26%6s", linkedList0, 36);
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "<4I[/?~26%6s", "<4I[/?~26%6s", 36, 36);
      DefaultOption defaultOption0 = new DefaultOption("<4I[/?~26%6s", "<4I[/?~26%6s", true, "<4I[/?~26%6s", "<4I[/?~26%6s", linkedHashSet0, linkedHashSet0, true, argumentImpl0, groupImpl0, 36);
      boolean boolean0 = defaultOption0.equals(argumentImpl0);
      assertEquals(36, defaultOption0.getId());
      assertTrue(defaultOption0.isRequired());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileValidator fileValidator0 = new FileValidator();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("<4I[/?~26%6s", "<4I[/?~26%6s", 0, 0, 'I', 'I', fileValidator0, "<4I[/?~26%6s", linkedList0, 0);
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "<4I[/?~26%6s", "<4I[/?~26%6s", 0, 0);
      boolean boolean0 = argumentImpl0.equals(groupImpl0);
      assertTrue(boolean0);
      assertEquals(0, groupImpl0.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("<4I[/?~2%{", "<4I[/?~2%{", 0, 0, 'I', 'I', fileValidator0, "<4I[/?~2%{", linkedList0, 0);
      DefaultOption defaultOption0 = new DefaultOption("?Gnc:a|1Fks<P", "--", true, "--", "wHs1WI.;5x;Rr&", linkedHashSet0, linkedHashSet0, true, argumentImpl0, (Group) null, 0);
      linkedList0.addFirst(defaultOption0);
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "<4I[/?~2%{", "--", 'I', 0);
      DefaultOption defaultOption1 = new DefaultOption("--", "<4I[/?~2%{", false, "<4I[/?~2%{", "--", linkedHashSet0, linkedHashSet0, true, argumentImpl0, groupImpl0, 0);
      linkedList0.add(defaultOption1);
      GroupImpl groupImpl1 = new GroupImpl(linkedList0, "<4I[/?~2%{", "<4I[/?~2%{", 0, 0);
      DefaultOption defaultOption2 = new DefaultOption("<4I[/?~2%{", "<4I[/?~2%{", true, "<4I[/?~2%{", "<4I[/?~2%{", linkedHashSet0, linkedHashSet0, true, argumentImpl0, groupImpl1, 0);
      boolean boolean0 = defaultOption2.equals(groupImpl1);
      assertTrue(linkedList0.contains(defaultOption0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, "--", (-146), 62);
      groupImpl0.hashCode();
      assertEquals(0, groupImpl0.getId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileValidator fileValidator0 = FileValidator.getExistingInstance();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("Option.trigger.needs.prefix", "DISPLAY_PROPERTY_OPTION", 1524, 1524, 'X', 'X', fileValidator0, "DISPLAY_PROPERTY_OPTION", (List) null, 1524);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'X', 'X', "org.apache.commons.cli2.option.OptionImpl", linkedList0);
      WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, (List) null);
      try { 
        sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0, (Option) sourceDestArgument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Missing value(s) Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix Option.trigger.needs.prefix
         //
         verifyException("org.apache.commons.cli2.option.ArgumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("<4I[/?~26%6{", "<4I[/?~26%6{", 0, 0, 'I', 'I', fileValidator0, "", linkedList0, 0);
      Option option0 = argumentImpl0.findOption("Option.trigger.needs.prefix");
      assertNull(option0);
      assertEquals(0, argumentImpl0.getId());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      FileValidator fileValidator0 = new FileValidator();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("<4I[/?~2%{", "<4I[/?~2%{", 0, 0, 'I', 'I', fileValidator0, "<4I[/?~2%{", linkedList0, 0);
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "<4I[/?~2%{", "<4I[/?~2%{", 0, 0);
      DefaultOption defaultOption0 = new DefaultOption("<4I[/?~2%{", "<4I[/?~2%{", true, "<4I[/?~2%{", "<4I[/?~2%{", linkedHashSet0, linkedHashSet0, true, argumentImpl0, groupImpl0, 0);
      Option option0 = defaultOption0.findOption("<4I[/?~2%{");
      assertTrue(option0.isRequired());
      assertNotNull(option0);
      assertEquals(0, option0.getId());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "<4I[?~2%{", "<4I[?~2%{", 0, 0);
      groupImpl0.checkPrefixes(linkedHashSet0);
      assertEquals(0, groupImpl0.getId());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      FileValidator fileValidator0 = FileValidator.getExistingFileInstance();
      LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();
      ArgumentImpl argumentImpl0 = new ArgumentImpl("<4I[/?~26%6s", "<4I[/?~26%6s", 36, 36, 'A', 'A', fileValidator0, "<4I[/?~26%6s", linkedList0, 36);
      GroupImpl groupImpl0 = new GroupImpl(linkedList0, "<4I[/?~26%6s", "<4I[/?~26%6s", 36, 36);
      DefaultOption defaultOption0 = null;
      try {
        defaultOption0 = new DefaultOption("<4I[/?~26%6s", "<4I[/?~26%6s", true, "--", "<4I[/?~26%6s", linkedHashSet0, linkedHashSet0, true, argumentImpl0, groupImpl0, 36);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Trigger -- must be prefixed with a value from java.util.HashSet@0000000007
         //
         verifyException("org.apache.commons.cli2.option.OptionImpl", e);
      }
  }
}
