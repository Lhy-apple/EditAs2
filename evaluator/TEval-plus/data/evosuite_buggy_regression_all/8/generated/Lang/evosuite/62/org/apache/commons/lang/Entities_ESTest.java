/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 03:57:10 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities.LookupEntityMap entities_LookupEntityMap0 = new Entities.LookupEntityMap();
      String string0 = entities_LookupEntityMap0.name(2678);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.escape("BDNB]2]ge&\"0$,;,'&_H");
      assertEquals("BDNB]2]ge&amp;&quot;0$,;,'&amp;_H", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities entities0 = new Entities();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      Entities.fillWithHtml40Entities(entities0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.ensureCapacity(112);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      entities_HashEntityMap0.add("LhHON.DW&lt;V]2;&amp;^6&lt;", (-5148));
      int int0 = entities_HashEntityMap0.value("LhHON.DW&lt;V]2;&amp;^6&lt;");
      assertEquals((-5148), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.unescape("LON.D&t;V]2;&amp;^&;");
      assertEquals("LON.D&t;V]2;&^&;", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      int int0 = entities_HashEntityMap0.value("4qRMr:O1L>0@N");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("BDBCgQ&|YnC,;,'K&._", (-1307));
      String string0 = entities_ArrayEntityMap0.name((-1307));
      assertEquals("BDBCgQ&|YnC,;,'K&._", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Entities entities0 = Entities.HTML40;
      Entities entities1 = Entities.HTML40;
      String string0 = entities0.unescape("BDNB]2]ge&\"0$,;,'&_H");
      assertEquals("BDNB]2]ge&\"0$,;,'&_H", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(72);
      entities_BinaryEntityMap0.add("LhHON.DW<V]2;&^6<", 20);
      int int0 = entities_BinaryEntityMap0.value("LhHON.DW<V]2;&^6<");
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("4qRMr:O1L>0@N", 20);
      entities_BinaryEntityMap0.add("", 3);
      entities_BinaryEntityMap0.add("", 20);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("", 3);
      entities_BinaryEntityMap0.add("", 20);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("4qRMr:O1L>0@N", 20);
      // Undeclared exception!
      try { 
        entities_BinaryEntityMap0.add("", 20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Entities entities0 = Entities.HTML32;
      entities0.escape((Writer) stringWriter0, "LhHON.DW&lt;V]2;&amp;^6&lt;");
      assertEquals("LhHON.DW&amp;lt;V]2;&amp;amp;^6&amp;lt;", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape(",`g-");
      assertEquals(",`g-", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.unescape("Bh&\"K&6;Rw_T");
      assertEquals("Bh&\"K&6;Rw_T", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Entities entities0 = Entities.HTML40;
      entities0.unescape((Writer) stringWriter0, "LhHON.DW&lt;V]2;&mp;^6&lt;");
      assertEquals("LhHON.DW<V]2;&mp;^6<", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "Axtj~Dmpy0pA");
      assertEquals("Axtj~Dmpy0pA", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "LhHON.DW<V]2;&^6<");
      assertEquals("LhHON.DW<V]2;&^6<", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Entities entities0 = Entities.HTML40;
      entities0.unescape((Writer) stringWriter0, "LhHON.DW&Xt;V]2;&a&p;^+&l;");
      assertEquals("LhHON.DW&Xt;V]2;&a&p;^+&l;", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Entities entities0 = Entities.HTML40;
      entities0.unescape((Writer) stringWriter0, "*nWx&;");
      assertEquals("*nWx&;", stringWriter0.toString());
  }
}
