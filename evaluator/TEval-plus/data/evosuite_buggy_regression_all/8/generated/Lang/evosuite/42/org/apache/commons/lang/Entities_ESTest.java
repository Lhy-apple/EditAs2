/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 03:53:16 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities entities0 = Entities.XML;
      Entities.fillWithHtml40Entities(entities0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(148);
      int int0 = entities_ArrayEntityMap0.value((String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(2162);
      String string0 = entities_BinaryEntityMap0.name(2162);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("", 2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      entities0.addEntity("YMM!~KvKw|w", 100);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      entities_TreeEntityMap0.add("uic[yl]VTQn8rNyP", 9);
      int int0 = entities_TreeEntityMap0.value("uic[yl]VTQn8rNyP");
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      int int0 = entities_TreeEntityMap0.value("uic[yl]VTQn8rNyP");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.entityName(3377);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.escape("2_<e:y>6./E1t=G'");
      assertEquals("2_&lt;e:y&gt;6./E1t=G&apos;", string0);
      
      String string1 = entities0.unescape("2_&lt;e:y&gt;6./E1t=G'");
      assertEquals("2_<e:y>6./E1t=G'", string1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(2);
      entities_BinaryEntityMap0.size = 2;
      int[] intArray0 = new int[2];
      intArray0[1] = 2;
      entities_BinaryEntityMap0.values = intArray0;
      entities_BinaryEntityMap0.add("uic[yl]VTQn8rNP", 2);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(2);
      entities_BinaryEntityMap0.size = 2;
      int[] intArray0 = new int[2];
      intArray0[1] = 2;
      entities_BinaryEntityMap0.values = intArray0;
      String string0 = entities_BinaryEntityMap0.name(2);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("uic[yl]VTQn8rNyP");
      assertEquals("uic[yl]VTQn8rNyP", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.HTML40.unescape((Writer) stringWriter0, "gd?YX>&so ");
      assertEquals("gd?YX>&so ", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter();
      entities0.HTML32.unescape((Writer) stringWriter0, "2_<e:y>6./E1t=G'");
      assertEquals("2_<e:y>6./E1t=G'", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("g&gd?YX>Nj&so ;?YX&gt;Nj&amp;so ");
      assertEquals("g&gd?YX>Nj&so ;?YX>Nj&so ", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.unescape("mda&;x/9P%aF=;h");
      assertEquals("mda&;x/9P%aF=;h", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("org.apache.common&#;.lang.IntHa&#;hMap$Entry");
      assertEquals("org.apache.common&#;.lang.IntHa&#;hMap$Entry", string0);
  }
}
