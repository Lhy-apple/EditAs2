/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 04:06:42 GMT 2023
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Sigmoid;
import org.apache.commons.math.analysis.function.Signum;
import org.apache.commons.math.analysis.function.Tan;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3729.397617830054), 2089981487, 2089981487);
      illinoisSolver0.solve(2089981487, (UnivariateRealFunction) signum0, (-3729.397617830054), (double) 2089981487, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Sigmoid sigmoid0 = new Sigmoid();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = illinoisSolver0.solve(5, (UnivariateRealFunction) sigmoid0, (-1371.8846), (double) 5, allowedSolution0);
      assertEquals(5.0, illinoisSolver0.getMax(), 0.01);
      assertEquals((-1371.8846), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Tan tan0 = new Tan();
      double double0 = illinoisSolver0.solve(709, (UnivariateRealFunction) tan0, (double) 709, -0.0, -0.0);
      assertEquals(-0.0, illinoisSolver0.getMax(), 0.01);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3730.271575736713), (-3730.271575736713));
      double double0 = illinoisSolver0.solve(2089981487, (UnivariateRealFunction) signum0, (-3730.271575736713), (double) 2089981487, allowedSolution0);
      assertEquals(1.0449888783642122E9, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Signum signum0 = new Signum();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.3333333134651184, 0.3333333134651184, 0.3333333134651184);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(2701249, (UnivariateRealFunction) signum0, (-1.0), 2.57891E-318, allowedSolution0);
      assertEquals((-0.5), regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(2.57891E-318, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3685.4680402131394), 2089981496, 2089981496);
      double double0 = illinoisSolver0.solve(2089981496, (UnivariateRealFunction) signum0, (-3685.4680402131394), (double) 2089981496, allowedSolution0);
      assertEquals(1.0449889052659799E9, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(1.0449889052659799E9, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3732.1385294336596), 119, 119);
      double double0 = illinoisSolver0.solve(119, (UnivariateRealFunction) signum0, (-3732.1385294336596), (double) 119, allowedSolution0);
      assertEquals(119.0, illinoisSolver0.getMax(), 0.01);
      assertEquals(54.814357842772324, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Signum signum0 = new Signum();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3746.8098613758166), 2089981475, 2089981475);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = illinoisSolver0.solve(2089981475, (UnivariateRealFunction) signum0, (-3746.8098613758166), (double) 2089981475, allowedSolution0);
      assertEquals(1.0449888640950693E9, illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-3746.8098613758166), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Signum signum0 = new Signum();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3801.0205624512864), 180, 180);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = illinoisSolver0.solve(180, (UnivariateRealFunction) signum0, (-3801.0205624512864), (double) 180, allowedSolution0);
      assertEquals((-1810.5102812256432), illinoisSolver0.getStartValue(), 0.01);
      assertEquals(113.64965729247854, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3729.397617830054), 119, 119);
      double double0 = illinoisSolver0.solve(119, (UnivariateRealFunction) signum0, (-3729.397617830054), (double) 119, allowedSolution0);
      assertEquals((-1805.198808915027), illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-1805.198808915027), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3732.139), 119, 119);
      double double0 = illinoisSolver0.solve(119, (UnivariateRealFunction) signum0, (-3732.139), (double) 119, allowedSolution0);
      assertEquals((-1806.5695), illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-1806.5695), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Signum signum0 = new Signum();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = illinoisSolver0.solve(956, (UnivariateRealFunction) signum0, (-2243.0), (double) 956, allowedSolution0);
      assertEquals((-643.5), illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-8.112903504235301E-7), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Signum signum0 = new Signum();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = illinoisSolver0.solve(48313, (UnivariateRealFunction) signum0, (-3730.4579747), (double) 48313, allowedSolution0);
      assertEquals(22291.271012650002, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(4.882704683992215E-7, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Signum signum0 = new Signum();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = illinoisSolver0.solve(2089981487, (UnivariateRealFunction) signum0, (-1138.6554356597667), (double) 2089981487, allowedSolution0);
      assertEquals(2.089981487E9, illinoisSolver0.getMax(), 0.01);
      assertEquals((-3.0212912807435195E-8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      double double0 = illinoisSolver0.solve(2089981487, (UnivariateRealFunction) signum0, (-1146.4442741), (double) 2089981487, allowedSolution0);
      assertEquals(1.044990170277863E9, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(6.182959050281489E-7, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Signum signum0 = new Signum();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      double double0 = illinoisSolver0.solve(2089981487, (UnivariateRealFunction) signum0, (-1138.6554356597667), (double) 2089981487, allowedSolution0);
      assertEquals(1.0449901741722821E9, illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-3.0212912807435195E-8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Signum signum0 = new Signum();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = illinoisSolver0.solve(956, (UnivariateRealFunction) signum0, (-2243.0), (double) 956, allowedSolution0);
      assertEquals(956.0, illinoisSolver0.getMax(), 0.01);
      assertEquals(8.149183907692724E-8, double0, 0.01);
  }
}
