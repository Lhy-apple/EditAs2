/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 04:54:01 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.CodeConsumer;
import com.google.javascript.jscomp.CodeGenerator;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.LoggerErrorManager;
import com.google.javascript.jscomp.PrintStreamErrorManager;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import java.io.File;
import java.io.PrintStream;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import java.util.logging.Logger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CodeGenerator_ESTest extends CodeGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("wMC");
      Node node1 = new Node(32, node0, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown precedence for script (type 132)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = Node.newString("/ \u0001(\ta\u0012\n\ninput_type\u0018\u0002 \u0001(\t\u0012\u0013\n\u000Boutput_type\u0018\u0003 \u0001(\t\u0012/\n\u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.prTtobuf.methodoptions\"\u00A4\u0003\u000Bfileoptions\u0012\u0014\n\fjava_packag\u0018\u0001 (\t\u0012\u001C\n\u0014java_outer_classname\u0018\b \u0001(\t\u0012\"\n\u0013java_multiple_filesy\n \u0001(\b:\u0005false\u0012f\n\foptimize_for\u0018\t \u0001(\u000E2).google.prM*obuf.fileop)ins.optimizemo<!--criptd\u0012!\n\u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#\n\u0015jp#a_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!\n\u0013py_generic_services\u0018\u0012 \u0001(\b:\u0004true\u0012c\n\u0014uninterpreted_opti/");
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node0);
      assertEquals("'/ \\u0001(\\ta\\u0012\\n\\ninput_type\\u0018\\u0002 \\u0001(\\t\\u0012\\u0013\\n\\u000boutput_type\\u0018\\u0003 \\u0001(\\t\\u0012/\\n\\u0007options\\u0018\\u0004 \\u0001(\\u000b2\\u001e.google.prTtobuf.methodoptions\"\\u00a4\\u0003\\u000bfileoptions\\u0012\\u0014\\n\\u000cjava_packag\\u0018\\u0001 (\\t\\u0012\\u001c\\n\\u0014java_outer_classname\\u0018\\u0008 \\u0001(\\t\\u0012\"\\n\\u0013java_multiple_filesy\\n \\u0001(\\u0008:\\u0005false\\u0012f\\n\\u000coptimize_for\\u0018\\t \\u0001(\\u000e2).google.prM*obuf.fileop)ins.optimizemo<\\!--criptd\\u0012!\\n\\u0013cc_generic_services\\u0018\\u0010 \\u0001(\\u0008:\\u0004true\\u0012#\\n\\u0015jp#a_generic_services\\u0018\\u0011 \\u0001(\\u0008:\\u0004true\\u0012!\\n\\u0013py_generic_services\\u0018\\u0012 \\u0001(\\u0008:\\u0004true\\u0012c\\n\\u0014uninterpreted_opti/'", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[6];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      String string0 = compiler0.toSource(node0);
      assertEquals("(,,,,,)", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      // Undeclared exception!
      try { 
        codeGenerator0.tagAsStrict();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("4");
      Node node1 = new Node(112, node0, node0, node0);
      String string0 = compiler0.toSource(node1);
      assertEquals("default:\"4\"", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      codeGenerator0.addList((Node) null, true);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("1*w");
      String string0 = compiler0.toSource(node0);
      assertEquals("1*w", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(4);
      String string0 = compiler0.toSource(node0);
      assertEquals("return", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newString(5, ":helper", (-3446), 5);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 5
         // GOTO :helper
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("@</script-]j--w]>&!:tum@");
      Node node1 = new Node(8, node0, node0, node0);
      String string0 = compiler0.toSource(node1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("wwMC");
      Node node1 = new Node(9, node0, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 9
         // BITOR
         //     SCRIPT 1 [sourcename: java.lang.String@0000000468] [synthetic: 1]
         //         EXPR_RESULT 1 [sourcename: java.lang.String@0000000468]
         //             NAME wwMC 1 [sourcename: java.lang.String@0000000468]
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(10);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 10
         // BITXOR
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("a");
      Node node1 = new Node(11, node0, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 11
         // BITAND
         //     SCRIPT 1 [sourcename: java.lang.String@0000000468] [synthetic: 1]
         //         EXPR_RESULT 1 [sourcename: java.lang.String@0000000468]
         //             NAME a 1 [sourcename: java.lang.String@0000000468]
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String string0 = "/ \\u0001(\\ta\\u0012\\n\\ninput_type\\u0018\\u0002 \\u0001(\\t\\u0012\\u0013\\n\\u000boutput_type\\u0018\\u0003 \\u0001(\\t\\u0012/\\n\\u0007options\\u0018\\u0004 \\u0001(\\u000b2\\u001e.google.prTtobuf.methodoptions\"\\u00a4\\u0003\\u000bfileoptions\\u0012\\u0014\\n\\u000cjava_packag\\u0018\\u0001 (\\t\\u0012\\u001c\\n\\u0014java_outer_classname\\u0018\\u0008 \\u0001(\\t\\u0012\"\\n\\u0013java_multiple_filesy\\n \\u0001(\\u0008:\\u0005false\\u0012f\\n\\u000coptimize_for\\u0018\\t \\u0001(\\u000e2).google.prM*obuf.fileop)ins.optimizemo<!--criptd\\u0012!\\n\\u0013cc_generic_services\\u0018\\u0010 \\u0001(\\u0008:\\u0004true\\u0012#\\n\\u0015jp#a_generic_services\\u0018\\u0011 \\u0001(\\u000m:\\u0004true\\u0012!\\n\\u0013py_generic_services\\u0018\\u0012 \\u0001(\\u0008:\\u0004true\\u0012c\\n\\u0014uninterpreted_opti/";
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode(string0);
      Node node1 = new Node(12, node0, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 12
         // EQ
         //     BLOCK [sourcename: java.lang.String@0000000457]
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      File file0 = MockFile.createTempFile("while(", "else");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      Compiler compiler0 = new Compiler(mockPrintStream0);
      Node node0 = new Node(13);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 13
         // NE
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("6&'x]>2");
      Compiler compiler0 = new Compiler(mockPrintStream0);
      Node node0 = new Node(15);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 15
         // LE
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(16, "/ \u0001(\ta\u0012\n\ninput_type\u0018\u0002 \u0001(\t\u0012\u0013\n\u000Boutput_type\u0018\u0003 \u0001(\t\u0012/\n\u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.prttobuf.methodoptions\"\u00A4\u0003\u000Bfileoptions\u0012\u0014\n\fjava_packag\u0018\u0001 (\t\u0012\u001C\n\u0014java_outer_classname\u0018\b \u0001\t\u0012\"\n\u0013java_multiple_filesy\n \u0001(\b:\u0005false\u0012f\n\foptimize_for\u0018\t \u0001(\u000E2).google.prm*obuf.fileop)ins.optimizemo</scripttd\u0012!\n\u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#\n\u0015jp#a_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!\n\u0013py_generic_services\u0018\u0012 \u0001(\b:\u0004true\u0012c\n\u0014uninterpreted_opti/", 1939, 3372);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 16
         // GT / \u0001(\ta\u0012
         // 
         // input_type\u0018\u0002 \u0001(\t\u0012\u0013
         // \u000Boutput_type\u0018\u0003 \u0001(\t\u0012/
         // \u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.prttobuf.methodoptions\"\u00A4\u0003\u000Bfileoptions\u0012\u0014
         // \fjava_packag\u0018\u0001 (\t\u0012\u001C
         // \u0014java_outer_classname\u0018\b \u0001\t\u0012\"
         // \u0013java_multiple_filesy
         //  \u0001(\b:\u0005false\u0012f
         // \foptimize_for\u0018\t \u0001(\u000E2).google.prm*obuf.fileop)ins.optimizemo</scripttd\u0012!
         // \u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#
         // \u0015jp#a_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!
         // \u0013py_generic_services\u0018\u0012 \u0001(\b:\u0004true\u0012c
         // \u0014uninterpreted_opti/ 1939
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(17, "a");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 17
         // GE a
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(18, "@<eB<!----]J!--w]>&!:TuM@");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 18
         // LSH @<eB<!----]J!--w]>&!:TuM@
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(19, "R.-^7z");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 19
         // RSH R.-^7z
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(21, "U/|");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 21
         // ADD U/|
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(24, "/ \u0001(\ta\u0012\n\ninput_type\u0018\u0002 \u0001(\t\u0012\u0013\n\u000Boutput_type\u0018\u0003 \u0001(\t\u0012/\n\u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.prTtobuf.methodoptions\"\u00A4\u0003\u000Bfileoptions\u0012\u0014\n\fjava_packag\u0018\u0001 (\t\u0012\u001C\n\u0014java_outer_classname\u0018\b \u0001\t\u0012\"\n\u0013java_multiple_filesy\n \u0001(\b:\u0005false\u0012f\n\foptimize_for\u0018\t \u0001(\u000E2).google.prM*obuf.fileop)ins.optimizemo<!--criptd\u0012!\n\u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#\n\u0015jp#a_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!\n\u0013py_generic_services\u0018\u0012 \u0001(\b:\u0004true\u0012c\n\u0014uninterpreted_opti/", 1301, 1);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 24
         // DIV / \u0001(\ta\u0012
         // 
         // input_type\u0018\u0002 \u0001(\t\u0012\u0013
         // \u000Boutput_type\u0018\u0003 \u0001(\t\u0012/
         // \u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.prTtobuf.methodoptions\"\u00A4\u0003\u000Bfileoptions\u0012\u0014
         // \fjava_packag\u0018\u0001 (\t\u0012\u001C
         // \u0014java_outer_classname\u0018\b \u0001\t\u0012\"
         // \u0013java_multiple_filesy
         //  \u0001(\b:\u0005false\u0012f
         // \foptimize_for\u0018\t \u0001(\u000E2).google.prM*obuf.fileop)ins.optimizemo<!--criptd\u0012!
         // \u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#
         // \u0015jp#a_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!
         // \u0013py_generic_services\u0018\u0012 \u0001(\b:\u0004true\u0012c
         // \u0014uninterpreted_opti/ 1301
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("!--crip");
      String string0 = compiler0.toSource(node0);
      assertEquals("!--crip", string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(28);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("@</script-]j--w]>&!:tum@");
      Node node1 = new Node(29, node0, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown precedence for block (type 125)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("J");
      Node node1 = new Node(30, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown precedence for script (type 132)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("a");
      Node node1 = new Node(31, node0, node0, node0);
      String string0 = compiler0.toSource(node1);
      assertEquals("delete a", string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = "/ \\u0001(\\ta\\u0012\\n\\ninput_type\\u0018\\u0002 \\u0001(\\t\\u0012\\u0013\\n\\u000boutput_type\\u0018\\u0003 \\u0001(\\t\\u0012/\\n\\u0007options\\u0018\\u0004 \\u0001(\\u000b2\\u001e.google.prTtobuf.methodoptions\"\\u00a4\\u0003\\u000bfileoptions\\u0012\\u0014\\n\\u000cjava_packag\\u0018\\u0001 (\\t\\u0012\\u001c\\n\\u0014java_outer_classname\\u0018\\u0008 \\u0001(\\t\\u0012\"\\n\\u0013java_multiple_filesy\\n \\u0001(\\u0008:\\u0005false\\u0012f\\n\\u000coptimize_for\\u0018\\t \\u0001(\\u000e2).google.prM*obuf.fileop)ins.optimizemo<!--criptd\\u0012!\\n\\u0013cc_generic_services\\u0018\\u0010 \\u0001(\\u0008:\\u0004true\\u0012#\\n\\u0015jp#a_generic_services\\u0018\\u0011 \\u0001(\\u000m:\\u0004true\\u0012!\\n\\u0013py_generic_services\\u0018\\u0012 \\u0001(\\u0008:\\u0004true\\u0012c\\n\\u0014uninterpreted_opti/";
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(33, string0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Bad GETPROP: expected 2 children, but got 0
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("6&'x]>2");
      Compiler compiler0 = new Compiler(mockPrintStream0);
      Node node0 = Node.newString(34, ".");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 34
         // SETPROP .
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode(">");
      Node node1 = new Node(35, node0, node0, (-1), 42);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Bad GETELEM: expected 2 children but got 1
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(36, "\"wwMC\"", 4, 48);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 36
         // SETELEM \"wwMC\" 4
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(37, "<!--/script&!:tum");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Logger logger0 = Logger.getAnonymousLogger();
      LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
      Compiler compiler0 = new Compiler(loggerErrorManager0);
      Node node0 = compiler0.parseTestCode("break");
      Node node1 = new Node(43, node0, node0, 31, 3);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(44, "a", 60, 120);
      String string0 = compiler0.toSource(node0);
      assertEquals("true", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(46, "Expected children to be strings", 46, 25);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 46
         // SHNE Expected children to be strings 46
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("/while(/");
      String string0 = compiler0.toSource(node0);
      assertEquals("/while(/", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newString(49, ":helper", 49, 49);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(50, "A<8Hs%#");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 50
         // RETHROW A<8Hs%#
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(51, "%Z@", 146, 17);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 51
         // IN %Z@ 146
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(53, "\u0001 \u0001(\t\u0012\u0012\n\ninput_type\u0018\u0002 \u0001(\t\u0012\u0013\n\u000Boutput_type\u0018\u0003 \u0001(\t\u0012/\n\u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.protobuf.MethodOptions\"\u00A4.\n\u000BFileOptions\u0012\u0014\n\fjava_package\u0018) \u0001(\t\u0012\u001C\n\u0014java_outer_classname\u0018\b \u0001(\t\u0012\"\n\u0013java_multiple_files\u0018\n \u0001(\b:\u0005als\u0012F\n\foptimize_fr\u0018\t \u0001(\u000E2).google.protobuf.FileOptions.OptimizeMode:\u0005SPEED\u0012!\n\u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#\n\u0015java_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!\n\u0013py_generic_servces\u0018\u0012 \u0001(\b:\u0004true\u0012C\n\u0014uninterpreted_opti", (-1180), (-1180));
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 53
         // LOCAL_LOAD \u0001 \u0001(\t\u0012\u0012
         // 
         // input_type\u0018\u0002 \u0001(\t\u0012\u0013
         // \u000Boutput_type\u0018\u0003 \u0001(\t\u0012/
         // \u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.protobuf.MethodOptions\"\u00A4.
         // \u000BFileOptions\u0012\u0014
         // \fjava_package\u0018) \u0001(\t\u0012\u001C
         // \u0014java_outer_classname\u0018\b \u0001(\t\u0012\"
         // \u0013java_multiple_files\u0018
         //  \u0001(\b:\u0005als\u0012F
         // \foptimize_fr\u0018\t \u0001(\u000E2).google.protobuf.FileOptions.OptimizeMode:\u0005SPEED\u0012!
         // \u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#
         // \u0015java_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!
         // \u0013py_generic_servces\u0018\u0012 \u0001(\b:\u0004true\u0012C
         // \u0014uninterpreted_opti
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(55, "iX.CCI-jHT`s[x(", 55, (-1254));
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 55
         // SETVAR iX.CCI-jHT`s[x(
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(64, ".");
      String string0 = compiler0.toSource(node0);
      assertEquals("{}", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(65, "UZ_YV", 85, 25);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = Node.newString((int) (byte)73, "!--crip");
      PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager((PrintStream) null);
      Compiler compiler0 = new Compiler(printStreamErrorManager0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 73
         // REF_MEMBER !--crip
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(76, "h^t[:5`Cx");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 76
         // REF_NS_NAME h^t[:5`Cx
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = Node.newString(79, "*IVy\"6i", 79, 79);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 79
         // LB *IVy\"6i 79
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(86, "?N~CXQDP", (-1273), 4544);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 86
         // ASSIGN ?N~CXQDP
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("4");
      Node node1 = new Node(88, node0, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 88
         // ASSIGN_BITXOR
         //     SCRIPT 1 [sourcename: java.lang.String@0000000467] [synthetic: 1]
         //         EXPR_RESULT 1 [sourcename: java.lang.String@0000000467]
         //             NUMBER 4.0 1 [sourcename: java.lang.String@0000000467]
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(93, "DSIHOou;CM?: Ac#", 1156, 1156);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 93
         // ASSIGN_ADD DSIHOou;CM?: Ac# 1156
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(97, "4", 124, 119);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 97
         // ASSIGN_MOD 4 124
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(98, "6&'x]>2");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newString(100, "xp_", 100, 100);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 100
         // OR xp_ 100
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(102, "4");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newString(104, "catch(", 2334, 2334);
      Compiler compiler0 = new Compiler((PrintStream) null);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 104
         // DOT catch( 2334
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(105, "eB<", 122, 697);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected Node subclass.
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(108, "P6= Bo1q}#%>P3e12X", 108, (-1050));
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(109, "6&'x]>2", 100, 100);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 109
         // ELSE 6&'x]>2 100
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("4");
      Node node1 = new Node(110, node0, node0, node0);
      String string0 = compiler0.toSource(node1);
      assertEquals("switch(\"4\"){}", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(111, "wMC", 31, 16);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(113, "9rm{mI", (-1273), 297);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(114);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newString(116, "p,$TC@=9Zuv_", 4214, 4214);
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node0);
      assertEquals("break", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Compiler compiler0 = new Compiler((PrintStream) null);
      Node node0 = new Node(118);
      String string0 = compiler0.toSource(node0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(119, "4", 2505, 119);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(120, "CG8<!--#0urPqBMZ", 120, 120);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(122, "\u0001 \u0001(\t\u0012\u0012\n\ninput_type\u0018\u0002 \u0001(\t\u0012\u0013\n\u000Boutput_type\u0018\u0003 \u0001(\t\u0012/\n\u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.protobuf.MethodOptions\"\u00A4.\n\u000BFileOptions\u0012\u0014\n\fjava_package\u0018) \u0001(\t\u0012\u001C\n\u0014java_outer_classname\u0018\b \u0001(\t\u0012\"\n\u0013java_multiple_files\u0018\n \u0001(\b:\u0005als\u0012F\n\foptimize_fr\u0018\t \u0001(\u000E2).google.protobuf.FileOptions.OptimizeMode:\u0005SPEED\u0012!\n\u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#\n\u0015java_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!\n\u0013py_generic_servces\u0018\u0012 \u0001(\b:\u0004true\u0012C\n\u0014uninterpreted_opti", 122, 122);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = Node.newNumber((double) 123, 123, 123);
      Node node1 = new Node(123, node0, 49, 53);
      Logger logger0 = Logger.getGlobal();
      LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
      Compiler compiler0 = new Compiler(loggerErrorManager0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 123
         // RESERVED 49
         //     NUMBER 123.0 123
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode(";UJ");
      String string0 = compiler0.toSource(node0);
      assertEquals("UJ", string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("a");
      Node node1 = new Node(126, node0, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Compiler compiler0 = new Compiler((PrintStream) null);
      File file0 = MockFile.createTempFile("com.google.javascript.jscomp.mozilla.rhino.optimizer.OptRuntime", ".nUuZu1LGpk~\fP`");
      JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(file0);
      Node node0 = compiler0.parse(jSSourceFile0);
      Node node1 = new Node(127, node0, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 127
         // TARGET
         //     SCRIPT 1 [sourcename: java.lang.String@0000000463] [synthetic: 1]
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(128, "NTI", 128, 128);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 128
         // LOOP NTI 128
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(129, "overriding prototype with non-object");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected EXPR_VOID. Should be EXPR_RESULT.
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(131, ">", 2, 122);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 131
         // JSR > 2
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newString(134, "@<eB<!----RJ!--w]>&!:TuM@");
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 134
         // USE_STACK @<eB<!----RJ!--w]>&!:TuM@
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(135, "4", 2505, 135);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 135
         // SETPROP_OP 4 2505
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(136, "Internal compiler error. Cannot parse generated code: {0}", 146, 136);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 136
         // SETELEM_OP Internal compiler error. Cannot parse generated code: {0} 146
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newString(137, "&pc,8", 2665, (-5));
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 137
         // LOCAL_BLOCK &pc,8
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("a");
      Node node1 = new Node(139, node0, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 139
         // DOTDOT
         //     SCRIPT 1 [sourcename: java.lang.String@0000000468] [synthetic: 1]
         //         EXPR_RESULT 1 [sourcename: java.lang.String@0000000468]
         //             NAME a 1 [sourcename: java.lang.String@0000000468]
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(140);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 140
         // COLONCOLON
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(141, "6&'x]>2", (-2466), (-3186));
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 141
         // XML 6&'x]>2
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(142, "iX.CCI-jHT`s[x(", (-1254), 124);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 142
         // DOTQUERY iX.CCI-jHT`s[x(
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(144, "/ \u0001(\ta\u0012\n\ninput_type\u0018\u0002 \u0001(\t\u0012\u0013\n\u000Boutput_type\u0018\u0003 \u0001(\t\u0012/\n\u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.prttobuf.methodoptions\"\u00A4\u0003\u000Bfileoptions\u0012\u0014\n\fjava_packag\u0018\u0001 (\t\u0012\u001C\n\u0014java_outer_classname\u0018\b \u0001(\t\u0012\"\n\u0013java_multiple_filesy\n \u0001(\b:\u0005false\u0012f\n\foptimize_for\u0018\t \u0001(\u000E2).google.prm*obuf.fileop)ins.optimizemo</scripttd\u0012!\n\u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#\n\u0015jp#a_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!\n\u0013py_generic_services\u0018\u0012 \u0001(\b:\u0004true\u0012c\n\u0014uninterpreted_opti/", 144, 144);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 144
         // XMLEND / \u0001(\ta\u0012
         // 
         // input_type\u0018\u0002 \u0001(\t\u0012\u0013
         // \u000Boutput_type\u0018\u0003 \u0001(\t\u0012/
         // \u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.prttobuf.methodoptions\"\u00A4\u0003\u000Bfileoptions\u0012\u0014
         // \fjava_packag\u0018\u0001 (\t\u0012\u001C
         // \u0014java_outer_classname\u0018\b \u0001(\t\u0012\"
         // \u0013java_multiple_filesy
         //  \u0001(\b:\u0005false\u0012f
         // \foptimize_for\u0018\t \u0001(\u000E2).google.prm*obuf.fileop)ins.optimizemo</scripttd\u0012!
         // \u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#
         // \u0015jp#a_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!
         // \u0013py_generic_services\u0018\u0012 \u0001(\b:\u0004true\u0012c
         // \u0014uninterpreted_opti/ 144
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(145, "*IVy\"6i", 1073741824, 79);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 145
         // TO_OBJECT *IVy\"6i 0
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newNumber((-2240.8019), (-1035), (-1035));
      Node node1 = new Node(147, node0, node0, 17, 1);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(148);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newString(149, "ClH", (-737), (-2807));
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 149
         // CONST ClH
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newString(150, "p,$TC@=9Zuv_", 375, 375);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 150
         // SETCONST p,$TC@=9Zuv_ 375
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(152, "4", 124, 119);
      String string0 = compiler0.toSource(node0);
      assertEquals("debugger", string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(153, "-0vQU 6geUCW");
      String string0 = compiler0.toSource(node0);
      assertEquals("-0vQU 6geUCW", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("6&'x]>2");
      Node node1 = new Node((-1915), node0, node0, (-3), (-2));
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1915
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("<+6x0|aa>6Lfmtu9");
      Node node1 = new Node(39, node0, node0, (-2049), 145);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(29, "txO1", 41, 21);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("=");
      Node node1 = new Node(47, node0, node0, 49, 48);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Expected children to be strings
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Logger logger0 = Logger.getAnonymousLogger();
      LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
      Compiler compiler0 = new Compiler(loggerErrorManager0);
      Node node0 = Node.newString(132, "break", 20, 42);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected Node subclass.
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode(">");
      Node node1 = new Node(35, node0, node0, (-1), 42);
      String string0 = compiler0.toSource(node0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("8iB90e=B*us^_op7 [p");
      Node node1 = new Node(132, node0, node0, (-1433), 4095);
      String string0 = compiler0.toSource(node1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("4");
      Node node1 = new Node(125, node0, node0, node0);
      String string0 = compiler0.toSource(node1);
      assertEquals("4", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("com.google.javascript.jscomp.ProcessDefines");
      String string0 = compiler0.toSource(node0);
      assertEquals("com.google.javascript.jscomp.ProcessDefines", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(130, "com.google.javascript.jscomp.NodeNameExtractor", (-1983), (-1983));
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString("/ \u0001(\ta\u0012\n\ninput_type\u0018\u0002 \u0001(\t\u0012\u0013\n\u000Boutput_type\u0018\u0003 \u0001(\t\u0012/\n\u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.prTtobuf.methodoptions\"\u00A4\u0003\u000Bfileoptions\u0012\u0014\n\fjava_packag\u0018\u0001 (\t\u0012\u001C\n\u0014java_outer_classname\u0018\b \u0001(\t\u0012\"\n\u0013java_multiple_filesy\n \u0001(\b:\u0005false\u0012f\n\foptimize_for\u0018\t \u0001(\u000E2).google.prM*obuf.fileop)ins.optimizemo<!--criptd\u0012!\n\u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#\n\u0015jp#a_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!\n\u0013py_generic_services\u0018\u0012 \u0001(\b:\u0004true\u0012c\n\u0014uninterpreted_opti/");
      node0.addChildToBack(node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      compiler0.toSource(node0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("6&'x]>2");
      Node node0 = Node.newString(31, "I !kntbG", (int) (byte)34, (int) (byte)73);
      Compiler compiler0 = new Compiler(mockPrintStream0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      double double0 = CodeGenerator.getSimpleNumber("");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      double double0 = CodeGenerator.getSimpleNumber(";UJ");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      double double0 = CodeGenerator.getSimpleNumber("1*w");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      double double0 = CodeGenerator.getSimpleNumber("8");
      assertEquals(8.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(85);
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      // Undeclared exception!
      try { 
        codeGenerator0.addArrayList(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      Node node0 = Node.newString("!`fh5c");
      CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
      // Undeclared exception!
      try { 
        codeGenerator0.addList(node0, false, codeGenerator_Context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      Node node0 = Node.newString(51, "{+_\"<!--h");
      CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
      // Undeclared exception!
      try { 
        codeGenerator0.addList(node0, true, codeGenerator_Context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      codeGenerator0.addArrayList((Node) null);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(93);
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      // Undeclared exception!
      try { 
        codeGenerator0.addAllSiblings(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      // Undeclared exception!
      try { 
        codeGenerator0.addJsString("iX@!px\"^|A{'%L'Vr*,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = CodeGenerator.escapeToDoubleQuotedJsString("@</script-]j--w]>&!:tum@");
      assertEquals("\"@<\\/script-]j--w]>&!:tum@\"", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = CodeGenerator.regexpEscape(">");
      assertEquals("/>/", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = CodeGenerator.escapeToDoubleQuotedJsString("i-MaSv<!-->\",hO,o");
      assertEquals("\"i-\\u007fMaSv<\\!--\\>\\\",hO,o\"", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = CodeGenerator.regexpEscape("@eGx->_qy5cxa4w]W-");
      assertEquals("/@eGx->_qy5cxa4w]W-/", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String string0 = CodeGenerator.escapeToDoubleQuotedJsString("^a<XX&'*NyL");
      assertEquals("\"^a<XX&'*Ny\\u007fL\"", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      CharsetEncoder charsetEncoder0 = charset0.newEncoder();
      String string0 = CodeGenerator.regexpEscape("while(", charsetEncoder0);
      assertEquals("/while(/", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = CodeGenerator.identifierEscape("\u0001 \u0001(\t\u0012\u0012\n\ninput_type\u0018\u0002 \u0001(\t\u0012\u0013\n\u000Boutput_type\u0018\u0003 \u0001(\t\u0012/\n\u0007options\u0018\u0004 \u0001(\u000B2\u001E.google.protobuf.MethodOptions\"\u00A4\u0003\n\u000BFileOptions\u0012\u0014\n\fjava_package\u0018\u0001 \u0001(\t\u0012\u001C\n\u0014java_outer_classname\u0018\b \u0001(\t\u0012\"\n\u0013java_multiple_files\u0018\n \u0001(\b:\u0005false\u0012F\n\foptimize_for\u0018\t \u0001(\u000E2).google.protobuf.FileOptions.OptimizeMode:\u0005SPEED\u0012!\n\u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0004true\u0012#\n\u0015java_generic_services\u0018\u0011 \u0001(\b:\u0004true\u0012!\n\u0013py_generic_services\u0018\u0012 \u0001(\b:\u0004true\u0012C\n\u0014uninterpreted_opti");
      assertEquals("\\u0001 \\u0001(\\u0009\\u0012\\u0012\\u000a\\u000ainput_type\\u0018\\u0002 \\u0001(\\u0009\\u0012\\u0013\\u000a\\u000boutput_type\\u0018\\u0003 \\u0001(\\u0009\\u0012/\\u000a\\u0007options\\u0018\\u0004 \\u0001(\\u000b2\\u001e.google.protobuf.MethodOptions\"\\u00a4\\u0003\\u000a\\u000bFileOptions\\u0012\\u0014\\u000a\\u000cjava_package\\u0018\\u0001 \\u0001(\\u0009\\u0012\\u001c\\u000a\\u0014java_outer_classname\\u0018\\u0008 \\u0001(\\u0009\\u0012\"\\u000a\\u0013java_multiple_files\\u0018\\u000a \\u0001(\\u0008:\\u0005false\\u0012F\\u000a\\u000coptimize_for\\u0018\\u0009 \\u0001(\\u000e2).google.protobuf.FileOptions.OptimizeMode:\\u0005SPEED\\u0012!\\u000a\\u0013cc_generic_services\\u0018\\u0010 \\u0001(\\u0008:\\u0004true\\u0012#\\u000a\\u0015java_generic_services\\u0018\\u0011 \\u0001(\\u0008:\\u0004true\\u0012!\\u000a\\u0013py_generic_services\\u0018\\u0012 \\u0001(\\u0008:\\u0004true\\u0012C\\u000a\\u0014uninterpreted_opti", string0);
  }
}
