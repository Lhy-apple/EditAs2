/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 06:42:57 GMT 2023
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Ceil;
import org.apache.commons.math.analysis.function.Cos;
import org.apache.commons.math.analysis.function.Inverse;
import org.apache.commons.math.analysis.function.Sigmoid;
import org.apache.commons.math.analysis.function.Sin;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      regulaFalsiSolver0.solve(810, (UnivariateRealFunction) sin0, (double) 810, 1904.5517279869223);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(1217, (UnivariateRealFunction) sin0, (-947.9473810942907), (double) 1217, allowedSolution0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (1,217) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Sigmoid sigmoid0 = new Sigmoid();
      UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
      double double0 = illinoisSolver0.solve(970, univariateRealFunction0, (double) 970, (double) 970);
      assertEquals(970.0, illinoisSolver0.getMin(), 0.01);
      assertEquals(970.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      double double0 = regulaFalsiSolver0.solve(810, (UnivariateRealFunction) sin0, 1904.5517279869223, 0.0);
      assertEquals(1904.5517279869223, regulaFalsiSolver0.getMin(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1055.961, 1055.961, 1055.961);
      Ceil ceil0 = new Ceil();
      double double0 = regulaFalsiSolver0.solve(770, (UnivariateRealFunction) ceil0, (-1565.251), (double) 770);
      assertEquals((-1565.251), regulaFalsiSolver0.getMin(), 0.01);
      assertEquals((-0.0827708779444265), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-161.1427099104917));
      Inverse inverse0 = new Inverse();
      // Undeclared exception!
      try { 
        illinoisSolver0.solve(1363, (UnivariateRealFunction) inverse0, (-161.1427099104917), 0.4742954538501373);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (1,363) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      Cos cos0 = new Cos();
      double double0 = pegasusSolver0.solve(8, (UnivariateRealFunction) cos0, (double) 0, (double) 8, (double) 0);
      assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(7.853981633974484, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1873.075300444902, 1873.075300444902, 1873.075300444902);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(520436262, (UnivariateRealFunction) sin0, 1873.075300444902, (double) 520436262, (double) 520436262, allowedSolution0);
      assertEquals(5.20436262E8, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(2.2230965681914347E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1873.075300444902, 1873.075300444902, 1873.075300444902);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(520436262, (UnivariateRealFunction) sin0, 1873.075300444902, (double) 520436262, (double) 520436262, allowedSolution0);
      assertEquals(5.20436262E8, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(2.2230965681914347E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1873.075300444902, 1873.075300444902, 1873.075300444902);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = regulaFalsiSolver0.solve(520436262, (UnivariateRealFunction) sin0, 1873.075300444902, (double) 520436262, (double) 520436262, allowedSolution0);
      assertEquals(5.20436262E8, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(1873.075300444902, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1873.075300444902, 1873.075300444902, 1873.075300444902);
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = regulaFalsiSolver0.solve(520436243, (UnivariateRealFunction) sin0, 1873.075300444902, (double) 520436243, (double) 520436243, allowedSolution0);
      assertEquals(2.3644330786290663E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1873.075300444902, 1873.075300444902, 1873.075300444902);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(520436243, (UnivariateRealFunction) sin0, 1873.075300444902, (double) 520436243, (double) 520436243, allowedSolution0);
      assertEquals(5.20436243E8, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(5.20436243E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1835.4270600928614, 1835.4270600928614, 1835.4270600928614);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(520436262, (UnivariateRealFunction) sin0, 1835.4270600928614, (double) 520436262, (double) 520436262, allowedSolution0);
      assertEquals(5.20436262E8, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(5.20436262E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1835.4270600928614, 1835.4270600928614, 1835.4270600928614);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = regulaFalsiSolver0.solve(520436249, (UnivariateRealFunction) sin0, 1835.4270600928614, (double) 520436249, (double) 520436249, allowedSolution0);
      assertEquals(5.20436249E8, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(2.8636641277314794E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Sin sin0 = new Sin();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1872.794889);
      double double0 = regulaFalsiSolver0.solve(695, (UnivariateRealFunction) sin0, (double) 695, 1872.794889, (double) 695, allowedSolution0);
      assertEquals(695.0, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(695.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Sin sin0 = new Sin();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1873.1490348058148);
      double double0 = regulaFalsiSolver0.solve(695, (UnivariateRealFunction) sin0, (double) 695, 1873.1490348058148, (double) 695, allowedSolution0);
      assertEquals(695.0, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(1267.1594100549105, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1873.5774982257544, 1873.5774982257544);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = regulaFalsiSolver0.solve(520436262, (UnivariateRealFunction) sin0, 1873.5774982257544, (double) 520436262, (double) 520436262, allowedSolution0);
      assertEquals(5.20436262E8, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(2.716624508675698E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1873.075300444902, 1873.075300444902);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(520436262, (UnivariateRealFunction) sin0, 1873.075300444902, (double) 520436262, (double) 520436262, allowedSolution0);
      assertEquals(5.20436262E8, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(2.2230965681914347E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Sin sin0 = new Sin();
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1904.5517279869223, 1904.5517279869223);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = regulaFalsiSolver0.solve(33, (UnivariateRealFunction) sin0, (double) 33, 80.325479858, allowedSolution0);
      assertEquals(33.0, regulaFalsiSolver0.getMin(), 0.01);
      assertEquals(56.93692737094791, double0, 0.01);
  }
}
