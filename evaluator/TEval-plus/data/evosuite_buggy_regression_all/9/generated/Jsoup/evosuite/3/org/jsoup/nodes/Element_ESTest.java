/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 06:01:45 GMT 2023
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Document document0 = new Document("^T0v9ikEu<{2;7im.?");
      String string0 = document0.val();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Document document0 = new Document("E68");
      Element element0 = document0.appendText("E68");
      assertSame(element0, document0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Document document0 = new Document("G%F@8U[");
      Element element0 = document0.val("G%F@8U[");
      assertSame(element0, document0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Document document0 = new Document("#E9\u0005&pJ+");
      Elements elements0 = document0.getElementsByAttributeValueEnding("#E9\u0005&pJ+", "8I|2%m1");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Document document0 = new Document("&q6s*JVo");
      Elements elements0 = document0.getElementsByClass("&q6s*JVo");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Document document0 = new Document("rarr");
      Element element0 = document0.createElement("Wp_]!kAh&*D {j69\"");
      document0.appendChild(element0);
      Element element1 = document0.prependElement("rarr");
      element1.text("rarr");
      String string0 = document0.text();
      assertEquals("rarr", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Document document0 = new Document("Oslash");
      // Undeclared exception!
      try { 
        document0.child((-1619426955));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Document document0 = new Document("rarr");
      Element element0 = document0.appendChild(document0);
      // Undeclared exception!
      element0.toString();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Document document0 = new Document("E68");
      Elements elements0 = document0.getElementsByAttributeValueContaining("E68", "E68");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Document document0 = new Document("&q6s*JVo");
      Elements elements0 = document0.getElementsByAttributeValueNot("&q6s*JVo", "&q6s*JVo");
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Document document0 = new Document("GzQ%MuVz");
      Elements elements0 = document0.getElementsByAttribute("GzQ%MuVz");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Document document0 = new Document("&o$qs*V");
      // Undeclared exception!
      try { 
        document0.html("&o$qs*V");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Document document0 = new Document("|j@ %");
      Elements elements0 = document0.getElementsByAttributeValue("|j@ %", "|j@ %");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Document document0 = new Document("t_EyyC");
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Document document0 = new Document("&q6s*JVo");
      Elements elements0 = document0.getElementsByAttributeValueStarting("&q6s*JVo", "&q6s*JVo");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tag tag0 = Tag.valueOf("!bPm2r");
      Element element0 = new Element(tag0, "!bPm2r");
      String string0 = element0.nodeName();
      assertEquals("!bpm2r", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Document document0 = new Document("V");
      Element element0 = document0.removeClass("V");
      assertSame(document0, element0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Document document0 = new Document("Iqqt");
      // Undeclared exception!
      try { 
        document0.normalise();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Document document0 = new Document(" 0Y8imXNBCONGN");
      Elements elements0 = document0.getAllElements();
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Document document0 = new Document("E68");
      Elements elements0 = document0.getElementsByIndexLessThan((-3103));
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Document document0 = new Document("plusmn");
      Elements elements0 = document0.parents();
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Document document0 = new Document("E68");
      Elements elements0 = document0.getElementsByIndexGreaterThan(196);
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Document document0 = new Document("Gz|;MW8Ez");
      Elements elements0 = document0.getElementsByIndexEquals((-546));
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Document document0 = new Document("plusmn");
      Element element0 = document0.prependElement("plusmn");
      Elements elements0 = element0.parents();
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tag tag0 = Tag.valueOf("<");
      Element element0 = new Element(tag0, "<");
      element0.addChild(element0);
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Document document0 = new Document("&q6s*JVo");
      document0.prependText("&q6s*JVo");
      Element element0 = document0.getElementById("&q6s*JVo");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Document document0 = new Document("E68");
      Element element0 = document0.prependElement("E68");
      Element element1 = element0.nextElementSibling();
      assertNull(element1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Document document0 = new Document("rarr");
      document0.appendChild(document0);
      Element element0 = document0.prependElement("rarr");
      Element element1 = element0.text("rarr");
      Element element2 = element1.nextElementSibling();
      assertEquals("#document", element2.nodeName());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Document document0 = new Document("E68");
      Element element0 = document0.prependElement("E68");
      Element element1 = element0.previousElementSibling();
      assertNull(element1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Document document0 = new Document("rarr");
      document0.appendChild(document0);
      document0.prependElement("rarr");
      Element element0 = document0.previousElementSibling();
      assertEquals("rarr", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Tag tag0 = Tag.valueOf("f<");
      Element element0 = new Element(tag0, "f<");
      Element element1 = element0.prependElement("FRAME");
      Element element2 = element1.firstElementSibling();
      assertNull(element2);
      assertEquals("frame", element1.tagName());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Document document0 = new Document("rarr");
      document0.appendChild(document0);
      Element element0 = document0.prependElement("rarr");
      Element element1 = element0.firstElementSibling();
      assertEquals("rarr", element1.baseUri());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Document document0 = new Document("E68");
      Element element0 = document0.prependElement("E68");
      Integer integer0 = element0.elementSiblingIndex();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Document document0 = new Document("E68");
      Element element0 = document0.prependElement("E68");
      Element element1 = element0.lastElementSibling();
      assertNull(element1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Document document0 = new Document("V");
      Element element0 = document0.appendChild(document0);
      element0.prependElement("V");
      Element element1 = document0.lastElementSibling();
      assertSame(element1, document0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Document document0 = new Document(";zQ%MuV{");
      Comment comment0 = new Comment("jjj)w&f", "jjj)w&f");
      document0.prependChild(comment0);
      boolean boolean0 = document0.hasText();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Document document0 = new Document("&q6s*JVo");
      Element element0 = document0.prependElement("&q6s*JVo");
      element0.text("");
      boolean boolean0 = element0.hasText();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Document document0 = new Document("E68");
      Element element0 = document0.prependElement("E68");
      element0.text("E68");
      boolean boolean0 = document0.hasText();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Document document0 = new Document("E68");
      document0.prependElement("E68");
      boolean boolean0 = document0.hasText();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Document document0 = new Document(";zQ%MuV{");
      Comment comment0 = new Comment("jjj)w&f", "jjj)w&f");
      document0.prependChild(comment0);
      String string0 = document0.data();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Document document0 = new Document("&q6s*JVo");
      document0.prependElement("&q6s*JVo");
      String string0 = document0.data();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Tag tag0 = Tag.valueOf("f<");
      Element element0 = new Element(tag0, "f<");
      element0.toggleClass("dMz");
      String string0 = element0.className();
      assertEquals(" dMz", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Tag tag0 = Tag.valueOf("f<");
      Element element0 = new Element(tag0, "f<");
      element0.toggleClass("dMz");
      Element element1 = element0.addClass("f<");
      assertFalse(element1.isBlock());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Document document0 = new Document("E68");
      document0.addClass("E68");
      boolean boolean0 = document0.hasClass("E68");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Document document0 = new Document(";zQ%MuV{");
      Element element0 = document0.toggleClass("");
      assertEquals("#root", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Document document0 = new Document("^T0v9ikEu<{2;7im.?");
      Element element0 = document0.prependElement("textarea");
      element0.val();
      assertEquals("textarea", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Tag tag0 = Tag.valueOf("f<");
      Element element0 = new Element(tag0, "f<");
      element0.prependElement("FRAME");
      String string0 = element0.toString();
      assertEquals("<f<>\n<frame />\n</f<>", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Document document0 = new Document("rarr");
      Element element0 = document0.createElement("Wp_]!kAh&*D {j69\"");
      document0.appendChild(element0);
      document0.prependElement("rarr");
      String string0 = element0.toString();
      assertEquals("<wp_]!kah&*d {j69\">\n</wp_]!kah&*d {j69\">", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Document document0 = new Document("b");
      Element element0 = document0.prependElement("b");
      String string0 = element0.toString();
      assertEquals("\n<b></b>", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Document document0 = new Document("E68");
      boolean boolean0 = document0.equals("E68");
      assertFalse(boolean0);
  }
}
