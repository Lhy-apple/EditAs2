/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 06:05:58 GMT 2023
 */

package org.jsoup.safety;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.safety.Cleaner;
import org.jsoup.safety.Whitelist;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Cleaner_ESTest extends Cleaner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Whitelist whitelist0 = Whitelist.simpleText();
      Cleaner cleaner0 = new Cleaner(whitelist0);
      // Undeclared exception!
      try { 
        cleaner0.clean((Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Whitelist whitelist0 = new Whitelist();
      Document document0 = Document.createShell("DoctypeName");
      document0.text("DoctypeName");
      Cleaner cleaner0 = new Cleaner(whitelist0);
      boolean boolean0 = cleaner0.isValid(document0);
      assertTrue(boolean0);
  }
}
