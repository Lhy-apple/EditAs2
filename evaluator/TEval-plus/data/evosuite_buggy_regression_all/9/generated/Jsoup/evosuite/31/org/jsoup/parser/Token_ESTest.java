/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 06:05:20 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.parser.Token;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Token_ESTest extends Token_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      String string0 = token_EndTag0.tokenType();
      assertEquals("EndTag", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.EndTag token_EndTag1 = token_EndTag0.asEndTag();
      assertSame(token_EndTag1, token_EndTag0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Token.Character token_Character0 = new Token.Character(";e0AK0GJ)ksNG0sHL");
      Token.Character token_Character1 = token_Character0.asCharacter();
      assertEquals(";e0AK0GJ)ksNG0sHL", token_Character1.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      // Undeclared exception!
      try { 
        token_EndTag0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      // Undeclared exception!
      try { 
        token_Comment0.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag("Doctype");
      // Undeclared exception!
      try { 
        token_EndTag0.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag("@[pS7mj");
      Token.Tag token_Tag0 = token_StartTag0.name("org.jsoup.parser.Token$EndTag");
      assertSame(token_StartTag0, token_Tag0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeName('R');
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendTagName('R');
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      boolean boolean0 = token_EndTag0.isSelfClosing();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      // Undeclared exception!
      try { 
        token_EndTag0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Token$Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      Token.TokenType token_TokenType0 = Token.TokenType.Doctype;
      token_EOF0.type = token_TokenType0;
      boolean boolean0 = token_EOF0.isDoctype();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      String string0 = token_Comment0.toString();
      assertEquals("<!---->", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.getSystemIdentifier();
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.getName();
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.getPublicIdentifier();
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      boolean boolean0 = token_Doctype0.isForceQuirks();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Token.Character token_Character0 = new Token.Character(";e0AK0GJ)ksNG0sHL");
      String string0 = token_Character0.toString();
      assertEquals(";e0AK0GJ)ksNG0sHL", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeName("Kx`!nJB");
      token_EndTag0.finaliseTag();
      token_EndTag0.newAttribute();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag("");
      token_EndTag0.appendAttributeName("\"[");
      token_EndTag0.appendAttributeValue('{');
      token_EndTag0.newAttribute();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag("");
      token_StartTag0.finaliseTag();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag("@[pS7mj");
      String string0 = token_StartTag0.toString();
      assertEquals("<@[pS7mj>", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag("");
      // Undeclared exception!
      try { 
        token_EndTag0.name();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag("@[pS7mj");
      token_StartTag0.appendTagName("org.jsoup.parser.Token$EndTag");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeName("iuxx86vA?cITo_u");
      token_EndTag0.appendAttributeName("EndTag");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.appendAttributeValue("[S`~sE#V'F,I,pZh");
      token_StartTag0.appendAttributeValue('K');
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag("", (Attributes) null);
      // Undeclared exception!
      try { 
        token_StartTag0.toString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeName("EndTag");
      token_EndTag0.newAttribute();
      Attributes attributes0 = token_EndTag0.getAttributes();
      Token.StartTag token_StartTag0 = new Token.StartTag((String) null, attributes0);
      // Undeclared exception!
      try { 
        token_StartTag0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Token$Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      boolean boolean0 = token_EndTag0.isDoctype();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      boolean boolean0 = token_Doctype0.isStartTag();
      assertFalse(boolean0);
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      boolean boolean0 = token_StartTag0.isStartTag();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      boolean boolean0 = token_StartTag0.isEndTag();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      boolean boolean0 = token_EndTag0.isEndTag();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      boolean boolean0 = token_EndTag0.isComment();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      Token.TokenType token_TokenType0 = Token.TokenType.Comment;
      token_Doctype0.type = token_TokenType0;
      boolean boolean0 = token_Doctype0.isComment();
      assertTrue(boolean0);
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      boolean boolean0 = token_Doctype0.isCharacter();
      assertFalse(boolean0);
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Token.Character token_Character0 = new Token.Character("($-LuA");
      boolean boolean0 = token_Character0.isCharacter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      boolean boolean0 = token_EndTag0.isEOF();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      boolean boolean0 = token_EOF0.isEOF();
      assertTrue(boolean0);
  }
}
