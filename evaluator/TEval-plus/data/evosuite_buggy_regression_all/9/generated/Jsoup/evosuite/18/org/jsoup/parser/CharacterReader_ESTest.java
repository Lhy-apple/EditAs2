/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 06:03:34 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.rewindToMark();
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("+@2");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("GUfCh^l");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("kBR1u`x9-C2");
      characterReader0.mark();
      assertEquals("kBR1u`x9-C2", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("dfkBR1u`x9-C2");
      characterReader0.advance();
      assertEquals("fkBR1u`x9-C2", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("String must not be empty");
      characterReader0.unconsume();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("rV2?nl9Tt.<jO{3BSJ");
      String string0 = characterReader0.toString();
      assertEquals("rV2?nl9Tt.<jO{3BSJ", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vG:4:x2:b[IhX$a\"z!");
      characterReader0.consumeAsString();
      assertEquals("G:4:x2:b[IhX$a\"z!", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("String must not be empty");
      characterReader0.consumeTo("yEYyr`N&z~");
      characterReader0.consumeLetterSequence();
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vG:4:x2:b[IhX$a\"z!");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("dfkBR1u`x9-C2");
      char char0 = characterReader0.current();
      assertEquals('d', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vG:4:x2:b[IhX$a\"z!");
      characterReader0.consume();
      char[] charArray0 = new char[9];
      charArray0[0] = ':';
      characterReader0.consume();
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(":4:x2:b[IhX$a\"z!", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.matchConsumeIgnoreCase("org.jsoup.parser.CharacterReader");
      assertEquals("", characterReader0.toString());
      
      char char0 = characterReader0.consume();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vG:4:x2:b[IhX$a\"z!");
      characterReader0.consumeTo('#');
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.consumeTo('t');
      assertEquals("terReader", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("r2nl9#t.<{3BSJ");
      String string0 = characterReader0.consumeTo("r2nl9#t.<{3BSJ");
      assertEquals("r2nl9#t.<{3BSJ", characterReader0.toString());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("rV2?nl9Tt.<jO{3BSJ");
      char[] charArray0 = new char[1];
      characterReader0.consumeToAny(charArray0);
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals("", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("##Qbc7l1a");
      char[] charArray0 = new char[1];
      charArray0[0] = 'a';
      characterReader0.consumeToAny(charArray0);
      assertEquals("a", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("rV2?nl9Tt.<jO{3BSJ");
      assertEquals("rV2?nl9Tt.<jO{3BSJ", characterReader0.toString());
      
      String string0 = characterReader0.consumeToEnd();
      String string1 = characterReader0.consumeToAny((char[]) null);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("|w:3$5");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("##Qbc7l1a");
      char[] charArray0 = new char[1];
      characterReader0.consumeToAny(charArray0);
      characterReader0.consumeHexSequence();
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ur%Bj-G:hCk");
      characterReader0.consumeHexSequence();
      assertEquals("Ur%Bj-G:hCk", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("+@2+/yw");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("|Cd6");
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vG:4:x2:b[IhX$a\"z!");
      assertEquals("vG:4:x2:b[IhX$a\"z!", characterReader0.toString());
      
      characterReader0.consumeToEnd();
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("+@2");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8KQZ");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("KQZ", characterReader0.toString());
      assertEquals("8", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matches('#');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ur%Bj-G:hCk");
      boolean boolean0 = characterReader0.matches('d');
      assertFalse(boolean0);
      assertEquals("Ur%Bj-G:hCk", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vG:4:x2:b[IhX$a\"z!");
      boolean boolean0 = characterReader0.matches('v');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vG:4:x2:b[IhX$a\"z!");
      char[] charArray0 = new char[9];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals("vG:4:x2:b[IhX$a\"z!", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ur%Bj-G:hCk");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("d+/yw");
      characterReader0.consumeTo("PcMInzj&1%}");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals("", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vG:4:x2:b[IhX$a\"z!");
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(":4:x2:b[IhX$a\"z!", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("kBR1u`x9-C2");
      characterReader0.consume();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals("BR1u`x9-C2", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("dfkBR1u`x9-C2");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals("dfkBR1u`x9-C2", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vG:4:x2:b[IhX$a\"z!");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals("vG:4:x2:b[IhX$a\"z!", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("+/yw");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals("+/yw", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("rV2?nl9Tt.<jO{3BSJ");
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals("2?nl9Tt.<jO{3BSJ", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("rV2?nl9Tt.<jO{3BSJ");
      assertEquals("rV2?nl9Tt.<jO{3BSJ", characterReader0.toString());
      
      characterReader0.consumeToEnd();
      boolean boolean0 = characterReader0.matchConsume("rV2?nl9Tt.<jO{3BS");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matchConsume("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ortg.js");
      boolean boolean0 = characterReader0.containsIgnoreCase("ortg.js");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      boolean boolean0 = characterReader0.containsIgnoreCase("org.jsoup.parser.CharacterReader");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("VBR");
      boolean boolean0 = characterReader0.containsIgnoreCase("VBR");
      assertTrue(boolean0);
  }
}
