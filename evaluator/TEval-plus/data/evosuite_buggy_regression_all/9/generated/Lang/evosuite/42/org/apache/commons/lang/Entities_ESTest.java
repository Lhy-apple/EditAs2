/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 06:29:51 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.HTML40.entityName(1088);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("/&amp;&amp;#El;6V!");
      assertEquals("/&&#El;6V!", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.escape("/&&#El;6V!");
      assertEquals("/&amp;&amp;#El;6V!", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      Entities.fillWithHtml40Entities(entities0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("u-", 509);
      int int0 = entities_BinaryEntityMap0.value("w");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(1625);
      entities_ArrayEntityMap0.add("w", 1625);
      String string0 = entities_ArrayEntityMap0.name(1625);
      assertEquals("w", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      entities_HashEntityMap0.add("C1xJ$q876M X}0BH*", 125);
      int int0 = entities_HashEntityMap0.value("C1xJ$q876M X}0BH*");
      assertEquals(125, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      String string0 = entities_TreeEntityMap0.name(2270);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("&&7,#_;6V!");
      assertEquals("&&7,#_;6V!", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      int int0 = entities_HashEntityMap0.value((String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("Ym", 0);
      String string0 = entities_ArrayEntityMap0.name(122);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("u-", 509);
      int int0 = entities_BinaryEntityMap0.value("u-");
      assertEquals(509, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("u-", 509);
      entities_BinaryEntityMap0.add("u-", Integer.MAX_VALUE);
      entities_BinaryEntityMap0.add("8250", Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("732", 854);
      entities_BinaryEntityMap0.add("732", (-832));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(49);
      entities_BinaryEntityMap0.add("Ys13N6N", 49);
      String string0 = entities_BinaryEntityMap0.name(49);
      assertEquals("Ys13N6N", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.unescape("c7[Oks}r,1i");
      assertEquals("c7[Oks}r,1i", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter();
      entities0.HTML32.unescape((Writer) stringWriter0, "/^N&&#s4;RH*}(!");
      assertEquals("/^N&&#s4;RH*}(!", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "");
      assertEquals("", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.unescape("&/&#6V'!");
      assertEquals("&/&#6V'!", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.unescape("&&;6V'");
      assertEquals("&&;6V'", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.unescape("&&#;6V!");
      assertEquals("&&#;6V!", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("/&&#4;6VH*!");
      assertEquals("/&\u00046VH*!", string0);
  }
}
