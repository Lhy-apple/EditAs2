/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 05:34:58 GMT 2023
 */

package com.fasterxml.jackson.core.sym;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteQuadsCanonicalizer_ESTest extends ByteQuadsCanonicalizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(5617);
      int int0 = byteQuadsCanonicalizer0.hashSeed();
      assertEquals(5617, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("J", 1);
      byteQuadsCanonicalizer1.release();
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      int int0 = byteQuadsCanonicalizer0.bucketCount();
      assertEquals(0, byteQuadsCanonicalizer0.size());
      assertEquals(0, byteQuadsCanonicalizer0.hashSeed());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(33);
      byteQuadsCanonicalizer0.release();
      assertEquals(0, byteQuadsCanonicalizer0.size());
      assertEquals(33, byteQuadsCanonicalizer0.hashSeed());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.release();
      assertEquals(0, byteQuadsCanonicalizer1.size());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(839877741, byteQuadsCanonicalizer1.hashSeed());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertFalse(byteQuadsCanonicalizer1.maybeDirty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._count = 32801;
      byteQuadsCanonicalizer1.addName("J", 32802);
      byteQuadsCanonicalizer1.release();
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      int int0 = byteQuadsCanonicalizer1.size();
      assertEquals(839877741, byteQuadsCanonicalizer1.hashSeed());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(0, int0);
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      int int0 = byteQuadsCanonicalizer0.size();
      assertEquals(0, byteQuadsCanonicalizer0.hashSeed());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(69);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("com.Easterxml.jacksoncore.symBteQuadsCanonicaizer$TbleInfo", 69);
      byteQuadsCanonicalizer1.addName("com.Easterxml.jacksoncore.symBteQuadsCanonicaizer$TbleInfo", 69);
      byteQuadsCanonicalizer1.toString();
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(24);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(24);
      byteQuadsCanonicalizer1.addName("fA`GB7\"#=H", 24);
      byteQuadsCanonicalizer1.addName("fA`GB7\"#=H", 24);
      byteQuadsCanonicalizer1.addName("k1Cz{_K<Z\u0004)", 24);
      int int0 = byteQuadsCanonicalizer1.tertiaryCount();
      assertEquals(3, byteQuadsCanonicalizer1.size());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(10);
      int[] intArray0 = new int[9];
      byteQuadsCanonicalizer0._hashArea = intArray0;
      assertEquals(10, byteQuadsCanonicalizer0.hashSeed());
      
      byteQuadsCanonicalizer0.findName(10);
      assertEquals(0, byteQuadsCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(47);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("c;m.fasterxml.jackson.core.s]mBteQuadsCanonicaizer$TbQemdf-", 47);
      byteQuadsCanonicalizer1.findName(47);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(14);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(14);
      byteQuadsCanonicalizer1.addName("com.fasterxml.jZckson.core.sym.ByteQuadsCanonicalizer", 14);
      byteQuadsCanonicalizer1.findName((-3426));
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(14);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(14);
      byteQuadsCanonicalizer1.addName("com.fasterxml.jZckson.core.sym.ByteQuadsCanonicalizer", 14);
      byteQuadsCanonicalizer1.addName("gD2{MEoZgq\"yu`LF ", (-3426));
      byteQuadsCanonicalizer1.findName((-3426));
      assertTrue(byteQuadsCanonicalizer1.maybeDirty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(2);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      int[] intArray0 = new int[4];
      byteQuadsCanonicalizer1.findName(intArray0, 2);
      assertEquals(0, byteQuadsCanonicalizer1.size());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(2, byteQuadsCanonicalizer1.hashSeed());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(2);
      int[] intArray0 = new int[7];
      intArray0[3] = 2;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      String string0 = byteQuadsCanonicalizer0.findName(2, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(1891);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1891);
      byteQuadsCanonicalizer1.addName("#a>Z&", 1891, 1891);
      byteQuadsCanonicalizer1.findName(1891, 1891);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(451);
      byteQuadsCanonicalizer1.addName("{}6OARjY}F VquI6WM", 451, 451);
      byteQuadsCanonicalizer1.findName(451, 180);
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(2);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("Failed rehash(): old count=", 2);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      byteQuadsCanonicalizer1.findName(intArray0, 2);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(2);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("Failed rehash(): old count=", 2);
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      byteQuadsCanonicalizer1.addName("Failed rehash(): old count=", intArray0, 2);
      byteQuadsCanonicalizer1.findName(intArray0, 2);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("", 32801, 32801, 32801);
      byteQuadsCanonicalizer1.findName(32801, 32801, 32801);
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.findName(567, (-1893), 814);
      assertEquals(0, byteQuadsCanonicalizer1.size());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(839877741, byteQuadsCanonicalizer1.hashSeed());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(306);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("R$m=SdM<E>+2g", 306);
      int[] intArray0 = new int[4];
      intArray0[0] = 306;
      byteQuadsCanonicalizer1.findName(intArray0, 3);
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(3);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("Failed rehash(): old count=", 3);
      int[] intArray0 = new int[4];
      intArray0[0] = 3;
      byteQuadsCanonicalizer1.addName("Failed rehash(): old count=", intArray0, 3);
      byteQuadsCanonicalizer1.findName(intArray0, 3);
      assertTrue(byteQuadsCanonicalizer1.maybeDirty());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(306);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("R$m=SdM<E>+2g", 306);
      byteQuadsCanonicalizer1.addName("R$m=SdM<E>+2g", 306);
      int[] intArray0 = new int[4];
      intArray0[0] = 306;
      byteQuadsCanonicalizer1.findName(intArray0, 3);
      assertTrue(byteQuadsCanonicalizer1.maybeDirty());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName((int[]) null, (-1016));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[4];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(4);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(4);
      byteQuadsCanonicalizer1.addName("^5kFq$ZGs", intArray0, 4);
      byteQuadsCanonicalizer1.findName(intArray0, 4);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(47);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      int[] intArray0 = new int[9];
      intArray0[0] = 47;
      byteQuadsCanonicalizer1.findName(intArray0, 7);
      assertEquals(47, byteQuadsCanonicalizer1.hashSeed());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(4);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("Failed rehash(): old count=", 4);
      int[] intArray0 = new int[6];
      intArray0[0] = 4;
      byteQuadsCanonicalizer1.findName(intArray0, 4);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(33);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("%+@roas;IHb|a4B8n", 33);
      byteQuadsCanonicalizer1.addName("%+@roas;IHb|a4B8n", 33);
      int[] intArray0 = new int[8];
      intArray0[0] = 33;
      byteQuadsCanonicalizer1.findName(intArray0, 8);
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(4);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("Failed rehash(): old count=", 4);
      int[] intArray0 = new int[6];
      intArray0[0] = 4;
      byteQuadsCanonicalizer1.addName("Failed rehash(): old count=", intArray0, 4);
      byteQuadsCanonicalizer1.findName(intArray0, 4);
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot((-3861));
      int[] intArray0 = new int[10];
      intArray0[3] = (-3861);
      byteQuadsCanonicalizer0._tertiaryShift = (-3861);
      intArray0[4] = (-3861);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      assertEquals((-3861), byteQuadsCanonicalizer0.hashSeed());
      
      byteQuadsCanonicalizer0.findName((-3861));
      assertEquals(0, byteQuadsCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(14);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(14);
      byteQuadsCanonicalizer1.addName("cJm4fasterxml.jZckson.core.sy.ByteQuadsCanonicalizer", 14);
      byteQuadsCanonicalizer1.addName("cJm4fasterxml.jZckson.core.sy.ByteQuadsCanonicalizer", 14);
      byteQuadsCanonicalizer1.addName("A", (-3426));
      byteQuadsCanonicalizer1.findName((-3426));
      assertEquals(3, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(10);
      int[] intArray0 = new int[9];
      intArray0[3] = 10;
      intArray0[4] = 10;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      byteQuadsCanonicalizer0._spilloverEnd = 10;
      byteQuadsCanonicalizer0.findName(10);
      assertEquals(2, byteQuadsCanonicalizer0.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(2);
      int[] intArray0 = new int[7];
      byteQuadsCanonicalizer0._tertiaryStart = 2;
      intArray0[2] = 2;
      intArray0[3] = 2;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      assertEquals(2, byteQuadsCanonicalizer0.hashSeed());
      
      byteQuadsCanonicalizer0.findName(2, 0);
      assertEquals(0, byteQuadsCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(47);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("com.Easterxml.jackson.core.symBteQuadsCanonicaizer$TbleInfo", 47);
      byteQuadsCanonicalizer1.addName("com.Easterxml.jackson.core.symBteQuadsCanonicaizer$TbleInfo", 47);
      byteQuadsCanonicalizer1.addName("com.Easterxml.jackson.core.symBteQuadsCanonicaizer$TbleInfo", 47);
      int[] intArray0 = new int[9];
      intArray0[0] = 47;
      byteQuadsCanonicalizer1.findName(intArray0, 2);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(47);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("c;m.fasterxml.jackson.core.s]mBteQuadsCanonicaizer$TbQemdf-", 47);
      byteQuadsCanonicalizer1.addName("c;m.fasterxml.jackson.core.s]mBteQuadsCanonicaizer$TbQemdf-", 47);
      byteQuadsCanonicalizer1.findName(0, 47, 0);
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(2);
      int[] intArray0 = new int[9];
      intArray0[3] = 2;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      assertEquals(2, byteQuadsCanonicalizer0.hashSeed());
      
      intArray0[0] = 2;
      byteQuadsCanonicalizer0.findName(2, 0, 0);
      assertEquals(0, byteQuadsCanonicalizer0.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(2);
      int[] intArray0 = new int[9];
      intArray0[2] = 2;
      intArray0[3] = 2;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[0] = 2;
      String string0 = byteQuadsCanonicalizer0.findName(2, 0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(14);
      int[] intArray0 = new int[9];
      intArray0[3] = 14;
      intArray0[4] = 14;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      byteQuadsCanonicalizer0._spilloverEnd = 14;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(14, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(33);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("%+@roas;IHb|a4B8n", 33);
      byteQuadsCanonicalizer1._tertiaryShift = 33;
      byteQuadsCanonicalizer1.addName("%+@roas;IHb|a4B8n", 33);
      int[] intArray0 = new int[8];
      intArray0[0] = 33;
      byteQuadsCanonicalizer1.addName(") does not override copy(); it has to", 33);
      byteQuadsCanonicalizer1._hashSize = 33;
      byteQuadsCanonicalizer1.findName(intArray0, 8);
      assertEquals(54, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName("]gw(?P&", 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName(")", 523, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(306);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._hashSize = (-1);
      byteQuadsCanonicalizer1.addName("R$m=SdM<E>+2g", 306);
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.addName("R$m=SdM<E>+2g", 306);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(279);
      byteQuadsCanonicalizer1._count = 32;
      byteQuadsCanonicalizer1.addName("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo", 279);
      assertTrue(byteQuadsCanonicalizer1.maybeDirty());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(396);
      int[] intArray0 = new int[7];
      intArray0[3] = 396;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName(",%=[m$Vu)PL85c", 396);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(435);
      int[] intArray0 = new int[4];
      intArray0[3] = 435;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName(",nD4oWi$h!", 435);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("Spill-over slots in symbol table with ", 31);
      byteQuadsCanonicalizer1._secondaryStart = 2;
      byteQuadsCanonicalizer1.addName("Spill-over slots in symbol table with ", 31, 31);
      byteQuadsCanonicalizer1._count = 420;
      byteQuadsCanonicalizer1._tertiaryStart = 31;
      byteQuadsCanonicalizer1.addName("Spill-over slots in symbol table with ", 31);
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.addName("Spill-over slots in symbol table with ", 420);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Failed rehash(): old count=421, copyCount=3
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName("", intArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._count = 523;
      byteQuadsCanonicalizer1.addName("Eb\"4f7", 523, 523);
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.addName("Eb\"4f7", 523, 1, 1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Failed rehash(): old count=524, copyCount=1
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._count = 502;
      byteQuadsCanonicalizer1.addName("", 502, 503, 503);
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.addName("", 502);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Failed rehash(): old count=503, copyCount=1
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot((-466));
      byteQuadsCanonicalizer0._hashSize = 1690;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0._reportTooManyCollisions();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Spill-over slots in symbol table with 0 entries, hash area of 1690 slots is now full (all 211 slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = ByteQuadsCanonicalizer._calcTertiaryShift(1868);
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = ByteQuadsCanonicalizer._calcTertiaryShift(451);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = ByteQuadsCanonicalizer._calcTertiaryShift(6000);
      assertEquals(7, int0);
  }
}
