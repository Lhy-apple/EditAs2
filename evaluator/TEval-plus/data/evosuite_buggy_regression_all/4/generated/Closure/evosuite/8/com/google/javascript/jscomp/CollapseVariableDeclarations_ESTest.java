/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 21:08:00 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.CollapseVariableDeclarations;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CollapseVariableDeclarations_ESTest extends CollapseVariableDeclarations_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      compiler0.getErrorManager();
      Node node0 = Node.newString(118, "Number node not created with Node.newNumber", 118, 118);
      CollapseVariableDeclarations collapseVariableDeclarations0 = new CollapseVariableDeclarations(compiler0);
      Node node1 = Node.newString(118, "Number node not created with Node.newNumber", 118, 118);
      Node node2 = new Node(30, node1, node0, node0, node0);
      collapseVariableDeclarations0.process(node2, node2);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(118, ":*fQ8A0", 118, 118);
      CollapseVariableDeclarations collapseVariableDeclarations0 = new CollapseVariableDeclarations(compiler0);
      Node node1 = Node.newString(16, "Number node not created with Node.newNumber", 10, (-536870912));
      Node node2 = new Node((-1), node0, node0, node1, node1);
      // Undeclared exception!
      try { 
        collapseVariableDeclarations0.process(node1, node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Node node0 = Node.newString(118, "Numbr node not created with Node.newNumber", 118, 118);
      Node node1 = new Node(30, node0, node0, node0, node0);
      Compiler compiler0 = new Compiler();
      CollapseVariableDeclarations collapseVariableDeclarations0 = new CollapseVariableDeclarations(compiler0);
      // Undeclared exception!
      try { 
        collapseVariableDeclarations0.process(node0, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("z=Z=Uj");
      CollapseVariableDeclarations collapseVariableDeclarations0 = new CollapseVariableDeclarations(compiler0);
      collapseVariableDeclarations0.process(node0, node0);
      assertFalse(node0.isInstanceOf());
  }
}
