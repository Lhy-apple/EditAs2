/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 21:25:38 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.jscomp.RenamePrototypes;
import com.google.javascript.jscomp.VariableMap;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RenamePrototypes_ESTest extends RenamePrototypes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED_OBFUSCATED;
      compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);
      RenamePrototypes renamePrototypes0 = new RenamePrototypes(compiler0, false, (char[]) null, (VariableMap) null);
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "com.google.common.collect.Sets$SetView", "com.google.common.collect.Sets$SetView");
      renamePrototypes0.process(node0, node0);
      assertEquals(47, Node.DIRECTIVES);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      RenamePrototypes renamePrototypes0 = new RenamePrototypes(compiler0, false, (char[]) null, (VariableMap) null);
      VariableMap variableMap0 = renamePrototypes0.getPropertyMap();
      assertNotNull(variableMap0);
  }
}
