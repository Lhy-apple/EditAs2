/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 21:12:53 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.PeepholeReplaceKnownMethods;
import com.google.javascript.jscomp.SyntacticScopeCreator;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PeepholeReplaceKnownMethods_ESTest extends PeepholeReplaceKnownMethods_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods();
      Node node0 = Node.newNumber(2469.49387802017);
      Node node1 = peepholeReplaceKnownMethods0.optimizeSubtree(node0);
      assertEquals(0, node1.getSideEffectFlags());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods();
      Node node0 = new Node(35, 37, 37);
      Node node1 = new Node(37, node0, node0, node0, 17, 27);
      // Undeclared exception!
      try { 
        peepholeReplaceKnownMethods0.optimizeSubtree(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.PeepholeReplaceKnownMethods", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods();
      Node node0 = new Node(37, 37, 37);
      Node node1 = peepholeReplaceKnownMethods0.optimizeSubtree(node0);
      assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods();
      Compiler compiler0 = new Compiler();
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0, (SyntacticScopeCreator.RedeclarationHandler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null, syntacticScopeCreator0);
      peepholeReplaceKnownMethods0.beginTraversal(nodeTraversal0);
      Node node0 = new Node(37);
      Node node1 = new Node(37, node0, node0, node0, 1, 53);
      Node node2 = peepholeReplaceKnownMethods0.optimizeSubtree(node1);
      assertEquals(4149, node2.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods();
      AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED;
      Compiler compiler0 = new Compiler();
      compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0, (SyntacticScopeCreator.RedeclarationHandler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null, syntacticScopeCreator0);
      peepholeReplaceKnownMethods0.beginTraversal(nodeTraversal0);
      Node node0 = new Node(37);
      Node node1 = new Node(37, node0, node0, node0, 1, 53);
      Node node2 = peepholeReplaceKnownMethods0.optimizeSubtree(node1);
      assertTrue(node2.hasChildren());
  }
}
