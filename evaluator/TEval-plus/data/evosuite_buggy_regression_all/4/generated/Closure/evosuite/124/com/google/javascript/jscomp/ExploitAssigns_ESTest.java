/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 21:21:38 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.ExploitAssigns;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExploitAssigns_ESTest extends ExploitAssigns_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExploitAssigns exploitAssigns0 = new ExploitAssigns();
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode("aj=q", "aj=q");
      Node node1 = exploitAssigns0.optimizeSubtree(node0);
      assertFalse(node1.isBreak());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExploitAssigns exploitAssigns0 = new ExploitAssigns();
      Node node0 = Node.newString("com.google.javascript.jscomp.ExploitAssigns");
      Node node1 = new Node(51, node0);
      Node node2 = exploitAssigns0.optimizeSubtree(node1);
      assertEquals(4095, Node.COLUMN_MASK);
  }
}
