/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 21:36:44 GMT 2023
 */

package com.fasterxml.jackson.core.sym;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteQuadsCanonicalizer_ESTest extends ByteQuadsCanonicalizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      int int0 = byteQuadsCanonicalizer0.hashSeed();
      assertEquals(839877741, int0);
      assertEquals(0, byteQuadsCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(10);
      int int0 = byteQuadsCanonicalizer0.bucketCount();
      assertEquals(10, byteQuadsCanonicalizer0.hashSeed());
      assertEquals(0, byteQuadsCanonicalizer0.size());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(486);
      byteQuadsCanonicalizer1.addName("F,\"+", 486, 486);
      byteQuadsCanonicalizer1.release();
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot((-10));
      byteQuadsCanonicalizer0.release();
      assertEquals(0, byteQuadsCanonicalizer0.size());
      assertEquals((-10), byteQuadsCanonicalizer0.hashSeed());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(3424);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(3424);
      byteQuadsCanonicalizer1.release();
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(0, byteQuadsCanonicalizer1.size());
      assertFalse(byteQuadsCanonicalizer1.maybeDirty());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(3424, byteQuadsCanonicalizer1.hashSeed());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(310);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(310);
      int int0 = byteQuadsCanonicalizer1.size();
      assertEquals(310, byteQuadsCanonicalizer1.hashSeed());
      assertEquals(0, int0);
      assertFalse(byteQuadsCanonicalizer1.maybeDirty());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      int int0 = byteQuadsCanonicalizer0.size();
      assertEquals(0, int0);
      assertEquals(839877741, byteQuadsCanonicalizer0.hashSeed());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-322));
      byteQuadsCanonicalizer1.addName((String) null, (-322), (-322), (-322));
      byteQuadsCanonicalizer1.addName((String) null, (-322), (-322), (-322));
      byteQuadsCanonicalizer1.toString();
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(2384);
      int[] intArray0 = new int[5];
      byteQuadsCanonicalizer0._hashSize = 2384;
      intArray0[3] = 2384;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.tertiaryCount();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(475);
      int[] intArray0 = new int[1];
      byteQuadsCanonicalizer1.findName(intArray0, (-1277));
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(0, byteQuadsCanonicalizer1.size());
      assertEquals(839877741, byteQuadsCanonicalizer1.hashSeed());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(672);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=64, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 1);
      byteQuadsCanonicalizer1.findName(672);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-286));
      byteQuadsCanonicalizer1.addName("", (-286));
      byteQuadsCanonicalizer1.findName((-286));
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(475);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING", 475, 475);
      byteQuadsCanonicalizer1.addName("USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING", 1);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      byteQuadsCanonicalizer1.findName(intArray0, (-1277));
      assertEquals(2, byteQuadsCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(487);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=64, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 487);
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=64, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 495);
      byteQuadsCanonicalizer1.findName(1);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(2);
      int[] intArray0 = new int[4];
      intArray0[3] = 2;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      assertEquals(2, byteQuadsCanonicalizer0.hashSeed());
      assertEquals(0, byteQuadsCanonicalizer0.spilloverCount());
      
      byteQuadsCanonicalizer0.findName(2);
      assertEquals(0, byteQuadsCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(3);
      int[] intArray0 = new int[9];
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[0] = 3;
      String string0 = byteQuadsCanonicalizer0.findName(intArray0, 2);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(400);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName((String) null, 2415, 2415);
      byteQuadsCanonicalizer1.findName(2415, 400);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(2);
      int[] intArray0 = new int[4];
      byteQuadsCanonicalizer0._hashSize = 2;
      intArray0[3] = 2;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      byteQuadsCanonicalizer0.findName(2, 2);
      assertEquals((-4), byteQuadsCanonicalizer0.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-286));
      byteQuadsCanonicalizer1.addName("6JR^@l ,%", (-286), (-286));
      byteQuadsCanonicalizer1.findName((-286), (-286));
      assertTrue(byteQuadsCanonicalizer1.maybeDirty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(473);
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", (-1), 1468, 473);
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", (-17), 1451);
      byteQuadsCanonicalizer1.findName((-17), 1451);
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(487);
      byteQuadsCanonicalizer1.findName(0, 487, 0);
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(839877741, byteQuadsCanonicalizer1.hashSeed());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(487);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=64, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 1, 0, 487);
      byteQuadsCanonicalizer1.findName(0, 487, 0);
      assertEquals(1, byteQuadsCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(487);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=64, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 1, 0, 487);
      byteQuadsCanonicalizer1.findName(1, 487, 0);
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(499);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[%s: size=%d, hashSize=%d, %d/%d/%d/%d pri/sec/ter/spill (=%s), total:%d]", 1, 499, 1);
      byteQuadsCanonicalizer1.findName(1, 499, 304);
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-286));
      byteQuadsCanonicalizer1.addName((String) null, (-286), (-286), (-286));
      byteQuadsCanonicalizer1.findName((-286), (-286), (-286));
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(486);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("F,\"+", 486, 486);
      byteQuadsCanonicalizer1.findName(486, 486, 495);
      assertEquals(110, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(486);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("F,\"+", 486, 486);
      byteQuadsCanonicalizer1.addName("F,\"+", 495, 1, 486);
      byteQuadsCanonicalizer1.findName(486, 486, 495);
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(487);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=64, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 487);
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=64, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 1, 0, 487);
      byteQuadsCanonicalizer1.findName(1, 487, 0);
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(499);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("F,\"+", 499, 499);
      byteQuadsCanonicalizer1.addName("F,\"+", 495, 1, 499);
      byteQuadsCanonicalizer1.findName(495, 1, (-554));
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(486);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("F,\"+", 486, 486);
      byteQuadsCanonicalizer1.addName("F,\"+", 495, 1, 486);
      byteQuadsCanonicalizer1.findName(495, 1, 486);
      assertEquals(2, byteQuadsCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName((int[]) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(355);
      int[] intArray0 = new int[26];
      byteQuadsCanonicalizer1.findName(intArray0, 18);
      assertEquals(839877741, byteQuadsCanonicalizer1.hashSeed());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(0, byteQuadsCanonicalizer1.size());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(355);
      byteQuadsCanonicalizer1.addName("[uDzK6-9prJR;h;", 355);
      int[] intArray0 = new int[26];
      intArray0[1] = 355;
      intArray0[2] = 18;
      intArray0[4] = 18;
      byteQuadsCanonicalizer1.findName(intArray0, 18);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(3);
      byteQuadsCanonicalizer0._tertiaryStart = 3;
      int[] intArray0 = new int[7];
      intArray0[3] = 3;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      assertEquals(3, byteQuadsCanonicalizer0.hashSeed());
      
      byteQuadsCanonicalizer0.findName(3);
      assertEquals(0, byteQuadsCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(32768);
      byteQuadsCanonicalizer0._spilloverEnd = 32768;
      int[] intArray0 = new int[5];
      intArray0[3] = 32768;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(32768);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(32768);
      byteQuadsCanonicalizer0._spilloverEnd = 32768;
      int[] intArray0 = new int[5];
      intArray0[0] = 32768;
      intArray0[3] = 32768;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(32768);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(487);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=64, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 487);
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=64, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 1, 0, 487);
      byteQuadsCanonicalizer1.findName(0, 487);
      assertEquals(2, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(12);
      byteQuadsCanonicalizer0._spilloverEnd = 12;
      int[] intArray0 = new int[9];
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[0] = 12;
      intArray0[3] = 12;
      byteQuadsCanonicalizer0.findName(intArray0, 2);
      assertEquals(3, byteQuadsCanonicalizer0.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot((-98));
      int[] intArray0 = new int[5];
      intArray0[0] = (-98);
      intArray0[1] = (-98);
      intArray0[3] = (-98);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      String string0 = byteQuadsCanonicalizer0.findName((-98), 0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot((-98));
      int[] intArray0 = new int[5];
      intArray0[0] = (-98);
      intArray0[2] = (-98);
      intArray0[3] = (-98);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      String string0 = byteQuadsCanonicalizer0.findName((-98), 0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(6);
      int[] intArray0 = new int[9];
      intArray0[3] = 6;
      byteQuadsCanonicalizer0._spilloverEnd = 6;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      String string0 = byteQuadsCanonicalizer0.findName(6, 0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(6);
      int[] intArray0 = new int[9];
      intArray0[0] = 6;
      intArray0[3] = 6;
      byteQuadsCanonicalizer0._spilloverEnd = 6;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      byteQuadsCanonicalizer0.findName(6, 0, 0);
      assertEquals(1, byteQuadsCanonicalizer0.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=-98, 0/0/0/171 pri/sec/ter/spill (=0), total:171]", 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(517);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName(",\"+", 517, 517);
      byteQuadsCanonicalizer1.addName(",\"+", 495, 1, 517);
      byteQuadsCanonicalizer1.addName(",\"+", 1);
      assertEquals(3, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(2);
      int[] intArray0 = new int[4];
      byteQuadsCanonicalizer0._hashSize = 2;
      intArray0[3] = 2;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName("WCsUO!mIu_'p(^5mc}", 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(3);
      byteQuadsCanonicalizer0._tertiaryStart = 3;
      int[] intArray0 = new int[7];
      intArray0[3] = 3;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName("$Gsw:Jz6~br<|9+}", 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(51);
      int[] intArray0 = new int[11];
      intArray0[3] = 51;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName("", 51);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(3428);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(3428);
      int[] intArray0 = new int[9];
      byteQuadsCanonicalizer1._longNameOffset = 403;
      byteQuadsCanonicalizer1.addName("", intArray0, 4);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(355);
      int[] intArray0 = new int[34];
      byteQuadsCanonicalizer1.addName("]Eo*<", intArray0, 4);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName("", intArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(416);
      byteQuadsCanonicalizer1._count = 416;
      byteQuadsCanonicalizer1.addName((String) null, 412, 416);
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.addName("Spill-over slots in symbol table with ", 412);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Failed rehash(): old count=417, copyCount=1
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(3428);
      byteQuadsCanonicalizer0._hashSize = 3428;
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(3428);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer2 = byteQuadsCanonicalizer1._parent;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer2._reportTooManyCollisions();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Spill-over slots in symbol table with 0 entries, hash area of 3428 slots is now full (all 428 slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(539);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=64, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 2415, 2415);
      byteQuadsCanonicalizer1._hashSize = 2415;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=64, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 539);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4188
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = ByteQuadsCanonicalizer._calcTertiaryShift(694);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = ByteQuadsCanonicalizer._calcTertiaryShift(1223);
      assertEquals(6, int0);
  }
}
