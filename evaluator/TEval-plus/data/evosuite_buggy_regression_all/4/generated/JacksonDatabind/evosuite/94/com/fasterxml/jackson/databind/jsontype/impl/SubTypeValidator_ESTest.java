/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 21:47:46 GMT 2023
 */

package com.fasterxml.jackson.databind.jsontype.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.type.MapType;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeFactory;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SubTypeValidator_ESTest extends SubTypeValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SubTypeValidator subTypeValidator0 = new SubTypeValidator();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SubTypeValidator subTypeValidator0 = SubTypeValidator.instance();
      Class<TextNode> class0 = TextNode.class;
      SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
      subTypeValidator0.validateSubType((DeserializationContext) null, simpleType0);
      assertFalse(simpleType0.hasValueHandler());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SubTypeValidator subTypeValidator0 = SubTypeValidator.instance();
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<Map> class0 = Map.class;
      MapType mapType0 = typeFactory0.constructRawMapType(class0);
      subTypeValidator0.validateSubType((DeserializationContext) null, mapType0);
      assertEquals(2, mapType0.containedTypeCount());
  }
}
