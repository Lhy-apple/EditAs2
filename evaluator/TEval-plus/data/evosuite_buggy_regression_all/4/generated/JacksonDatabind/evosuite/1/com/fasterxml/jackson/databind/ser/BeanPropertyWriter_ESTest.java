/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 21:37:35 GMT 2023
 */

package com.fasterxml.jackson.databind.ser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.AnnotationIntrospector;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonSerializer;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.ext.CoreXMLSerializers;
import com.fasterxml.jackson.databind.ext.DOMSerializer;
import com.fasterxml.jackson.databind.introspect.AnnotatedField;
import com.fasterxml.jackson.databind.introspect.AnnotatedMember;
import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
import com.fasterxml.jackson.databind.introspect.AnnotationMap;
import com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder;
import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor;
import com.fasterxml.jackson.databind.jsontype.TypeSerializer;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.ser.BeanPropertyWriter;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.NameTransformer;
import java.io.IOException;
import java.io.InputStream;
import java.lang.annotation.Annotation;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeanPropertyWriter_ESTest extends BeanPropertyWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = CoreXMLSerializers.XMLGregorianCalendarSerializer.instance;
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("Direct self-reference leading to cycle", annotationIntrospector0, true);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, coreXMLSerializers_XMLGregorianCalendarSerializer0, (TypeSerializer) null, (JavaType) null, false, (Object) null);
      AnnotatedMember annotatedMember0 = beanPropertyWriter0.getMember();
      assertTrue(beanPropertyWriter0.hasSerializer());
      assertNotNull(annotatedMember0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("/3!P6:%<73", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, ">E%s%/Wy8E9EOa\"");
      Class<?>[] classArray0 = beanPropertyWriter0.getViews();
      assertNull(classArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, ">E%s%/Wy8E9EOa\"");
      PropertyName propertyName0 = beanPropertyWriter0.getWrapperName();
      assertNull(propertyName0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, annotatedField0);
      Class<Annotation> class0 = Annotation.class;
      Annotation annotation0 = beanPropertyWriter0.getAnnotation(class0);
      assertNull(annotation0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = new CoreXMLSerializers.XMLGregorianCalendarSerializer();
      SimpleType simpleType0 = (SimpleType)TypeBindings.UNBOUND;
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, simpleType0, coreXMLSerializers_XMLGregorianCalendarSerializer0, (TypeSerializer) null, simpleType0, false, annotationIntrospector0);
      beanPropertyWriter0.getSerializedName();
      assertTrue(beanPropertyWriter0.hasSerializer());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = new CoreXMLSerializers.XMLGregorianCalendarSerializer();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("", annotationIntrospector0, true);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, coreXMLSerializers_XMLGregorianCalendarSerializer0, (TypeSerializer) null, (JavaType) null, true, annotationIntrospector0);
      boolean boolean0 = beanPropertyWriter0.isRequired(annotationIntrospector0);
      assertFalse(boolean0);
      assertTrue(beanPropertyWriter0.hasSerializer());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<AnnotatedMethod> class0 = AnnotatedMethod.class;
      JavaType[] javaTypeArray0 = new JavaType[0];
      JavaType javaType0 = typeFactory0.constructSimpleType(class0, javaTypeArray0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, (TypeSerializer) null, javaType0, false, annotationIntrospector0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        beanPropertyWriter0.depositSchemaProperty((ObjectNode) null, (SerializerProvider) defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.SerializerProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("fieqld \"", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, false, "fieqld \"");
      // Undeclared exception!
      try { 
        beanPropertyWriter0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<AnnotatedMethod> class0 = AnnotatedMethod.class;
      JavaType[] javaTypeArray0 = new JavaType[0];
      JavaType javaType0 = typeFactory0.constructSimpleType(class0, javaTypeArray0);
      JsonSerializer<InputStream> jsonSerializer0 = (JsonSerializer<InputStream>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(jsonSerializer0).toString();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, jsonSerializer0, (TypeSerializer) null, javaType0, true, (Object) null);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        beanPropertyWriter0.depositSchemaProperty((ObjectNode) null, (SerializerProvider) defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, ":-MW7wSY^@IxnC5Bc");
      JavaType javaType0 = beanPropertyWriter0.getType();
      assertNull(javaType0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, annotationIntrospector0);
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("{go2!:/g?gDcGxCS*Z", ":-MW7wSY^@IxnC5Bc");
      NameTransformer nameTransformer1 = NameTransformer.chainedTransformer(nameTransformer0, nameTransformer0);
      BeanPropertyWriter beanPropertyWriter1 = beanPropertyWriter0.unwrappingWriter(nameTransformer1);
      assertFalse(beanPropertyWriter1.isRequired());
      assertTrue(beanPropertyWriter1.willSuppressNulls());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, ":-MW7wSY^@IxnC5Bc");
      beanPropertyWriter0.setNonTrivialBaseType((JavaType) null);
      assertFalse(beanPropertyWriter0.hasSerializer());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, ":-MW7wSY^@IxnC5Bc");
      Class<Annotation> class0 = Annotation.class;
      Annotation annotation0 = beanPropertyWriter0.getContextAnnotation(class0);
      assertNull(annotation0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("/3!P6:%<73", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, ">E%s%/Wy8E9EOa\"");
      boolean boolean0 = beanPropertyWriter0.willSuppressNulls();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("C+EVlfQ%", annotationIntrospector0, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      BeanPropertyWriter beanPropertyWriter0 = null;
      try {
        beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, (AnnotatedMember) null, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, false, annotationIntrospector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, ">E%s%/Wy8E9EOa\"");
      beanPropertyWriter0.setInternalSetting((Object) null, (Object) null);
      BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0);
      assertTrue(beanPropertyWriter1.willSuppressNulls());
      assertFalse(beanPropertyWriter1.isRequired());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      DOMSerializer dOMSerializer0 = new DOMSerializer();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, dOMSerializer0, (TypeSerializer) null, (JavaType) null, true, dOMSerializer0);
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("8R`?QzE0%&#`W]'", "com.fasterxml.jackson.core.JsonParser$NumberType");
      BeanPropertyWriter beanPropertyWriter1 = beanPropertyWriter0.rename(nameTransformer0);
      assertEquals("8R`?QzE0%&#`W]':-MW7wSY^@IxnC5Bccom.fasterxml.jackson.core.JsonParser$NumberType", beanPropertyWriter1.getName());
      assertFalse(beanPropertyWriter1.hasNullSerializer());
      assertTrue(beanPropertyWriter1.hasSerializer());
      assertFalse(beanPropertyWriter1.isRequired());
      assertTrue(beanPropertyWriter1.willSuppressNulls());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, ":-MW7wSY^@IxnC5Bc");
      NameTransformer nameTransformer0 = NameTransformer.NOP;
      BeanPropertyWriter beanPropertyWriter1 = beanPropertyWriter0.rename(nameTransformer0);
      assertSame(beanPropertyWriter1, beanPropertyWriter0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("field \"", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, false, "field \"");
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      beanPropertyWriter0.assignSerializer(defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);
      assertTrue(beanPropertyWriter0.hasSerializer());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = new CoreXMLSerializers.XMLGregorianCalendarSerializer();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("Direct self-reference leading to cycle", annotationIntrospector0, true);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, coreXMLSerializers_XMLGregorianCalendarSerializer0, (TypeSerializer) null, (JavaType) null, false, (Object) null);
      // Undeclared exception!
      try { 
        beanPropertyWriter0.assignSerializer((JsonSerializer<Object>) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can not override serializer
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("Type id handling not implemented for type ", annotationIntrospector0, true);
      JsonSerializer<Method> jsonSerializer0 = (JsonSerializer<Method>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(jsonSerializer0).toString();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, jsonSerializer0, (TypeSerializer) null, (JavaType) null, true, annotationMap0);
      JsonSerializer<Object> jsonSerializer1 = beanPropertyWriter0.getSerializer();
      assertNotNull(jsonSerializer1);
      
      beanPropertyWriter0.assignSerializer(jsonSerializer1);
      assertTrue(beanPropertyWriter0.hasSerializer());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("fieqld \"", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, false, "fieqld \"");
      JsonSerializer<Object> jsonSerializer0 = SerializerProvider.DEFAULT_UNKNOWN_SERIALIZER;
      beanPropertyWriter0.assignNullSerializer(jsonSerializer0);
      beanPropertyWriter0.assignNullSerializer(jsonSerializer0);
      assertTrue(beanPropertyWriter0.hasNullSerializer());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, annotatedField0);
      beanPropertyWriter0.depositSchemaProperty((JsonObjectFormatVisitor) null);
      assertFalse(beanPropertyWriter0.hasNullSerializer());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^8IxnC5Bc", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = new CoreXMLSerializers.XMLGregorianCalendarSerializer();
      SimpleType simpleType0 = (SimpleType)TypeBindings.UNBOUND;
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, simpleType0, coreXMLSerializers_XMLGregorianCalendarSerializer0, (TypeSerializer) null, simpleType0, false, coreXMLSerializers_XMLGregorianCalendarSerializer0);
      JsonObjectFormatVisitor.Base jsonObjectFormatVisitor_Base0 = new JsonObjectFormatVisitor.Base();
      beanPropertyWriter0.depositSchemaProperty((JsonObjectFormatVisitor) jsonObjectFormatVisitor_Base0);
      assertTrue(beanPropertyWriter0.hasSerializer());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, annotatedField0);
      Object object0 = beanPropertyWriter0.getInternalSetting((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, ":-MW7wSY^@IxnC5Bc");
      beanPropertyWriter0.setInternalSetting((Object) null, (Object) null);
      Object object0 = beanPropertyWriter0.setInternalSetting(beanPropertyWriter0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = new CoreXMLSerializers.XMLGregorianCalendarSerializer();
      SimpleType simpleType0 = (SimpleType)TypeBindings.UNBOUND;
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, simpleType0, coreXMLSerializers_XMLGregorianCalendarSerializer0, (TypeSerializer) null, simpleType0, true, annotationIntrospector0);
      Object object0 = beanPropertyWriter0.removeInternalSetting(simpleType0);
      assertNull(object0);
      assertTrue(beanPropertyWriter0.hasSerializer());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, false, ">E%s%/Wy8E9EOa\"");
      boolean boolean0 = beanPropertyWriter0.hasSerializer();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      DOMSerializer dOMSerializer0 = new DOMSerializer();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, dOMSerializer0, (TypeSerializer) null, (JavaType) null, true, dOMSerializer0);
      boolean boolean0 = beanPropertyWriter0.hasSerializer();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, annotatedField0);
      boolean boolean0 = beanPropertyWriter0.hasNullSerializer();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, ":-MW7wSY^@IxnC5Bc");
      Class<?> class0 = beanPropertyWriter0.getRawSerializationType();
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC?I5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = new CoreXMLSerializers.XMLGregorianCalendarSerializer();
      SimpleType simpleType0 = (SimpleType)TypeBindings.UNBOUND;
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, simpleType0, coreXMLSerializers_XMLGregorianCalendarSerializer0, (TypeSerializer) null, simpleType0, true, coreXMLSerializers_XMLGregorianCalendarSerializer0);
      // Undeclared exception!
      try { 
        beanPropertyWriter0.getPropertyType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, true, "wIn)9qDnC[Rtc");
      // Undeclared exception!
      try { 
        beanPropertyWriter0.depositSchemaProperty((ObjectNode) null, (SerializerProvider) defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = CoreXMLSerializers.XMLGregorianCalendarSerializer.instance;
      SimpleType simpleType0 = (SimpleType)TypeBindings.UNBOUND;
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, simpleType0, coreXMLSerializers_XMLGregorianCalendarSerializer0, (TypeSerializer) null, simpleType0, true, coreXMLSerializers_XMLGregorianCalendarSerializer0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        beanPropertyWriter0.depositSchemaProperty((ObjectNode) null, (SerializerProvider) defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.SerializerProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, false, annotationIntrospector0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      try { 
        beanPropertyWriter0.serializeAsPlaceholder(annotationMap0, (JsonGenerator) null, defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, false, annotationIntrospector0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      beanPropertyWriter0.assignNullSerializer(defaultSerializerProvider_Impl0.DEFAULT_UNKNOWN_SERIALIZER);
      try { 
        beanPropertyWriter0.serializeAsPlaceholder(annotationMap0, (JsonGenerator) null, defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.SerializerProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("field \"", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, (JsonSerializer<?>) null, (TypeSerializer) null, (JavaType) null, false, "field \"");
      PropertySerializerMap propertySerializerMap0 = beanPropertyWriter0._dynamicSerializers;
      Class<JsonDeserializer> class0 = JsonDeserializer.class;
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        beanPropertyWriter0._findAndAddDynamic(propertySerializerMap0, class0, defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.SerializerProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^@IxnC5Bc", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = CoreXMLSerializers.XMLGregorianCalendarSerializer.instance;
      SimpleType simpleType0 = (SimpleType)TypeBindings.UNBOUND;
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, simpleType0, coreXMLSerializers_XMLGregorianCalendarSerializer0, (TypeSerializer) null, simpleType0, false, coreXMLSerializers_XMLGregorianCalendarSerializer0);
      try { 
        beanPropertyWriter0.get(":-MW7wSY^@IxnC5Bc");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(":-MW7wSY^8IxnC5Bc", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = new CoreXMLSerializers.XMLGregorianCalendarSerializer();
      SimpleType simpleType0 = (SimpleType)TypeBindings.UNBOUND;
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, simpleType0, coreXMLSerializers_XMLGregorianCalendarSerializer0, (TypeSerializer) null, simpleType0, false, coreXMLSerializers_XMLGregorianCalendarSerializer0);
      try { 
        beanPropertyWriter0._handleSelfReference(annotationMap0, coreXMLSerializers_XMLGregorianCalendarSerializer0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Direct self-reference leading to cycle
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }
}
