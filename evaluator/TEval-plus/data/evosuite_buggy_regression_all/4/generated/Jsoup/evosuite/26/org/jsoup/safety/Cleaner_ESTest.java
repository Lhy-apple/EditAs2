/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 21:52:15 GMT 2023
 */

package org.jsoup.safety;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.safety.Cleaner;
import org.jsoup.safety.Whitelist;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Cleaner_ESTest extends Cleaner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Whitelist whitelist0 = Whitelist.simpleText();
      Document document0 = Document.createShell("p");
      Element element0 = document0.body();
      element0.prependElement("p");
      Whitelist whitelist1 = whitelist0.addEnforcedAttribute("p", "p", "p");
      Cleaner cleaner0 = new Cleaner(whitelist1);
      Document document1 = cleaner0.clean(document0);
      boolean boolean0 = cleaner0.isValid(document1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Whitelist whitelist0 = Whitelist.simpleText();
      Document document0 = Document.createShell("p");
      Element element0 = document0.body();
      element0.prependText("p");
      Cleaner cleaner0 = new Cleaner(whitelist0);
      Document document1 = cleaner0.clean(document0);
      assertNotSame(document1, document0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Whitelist whitelist0 = Whitelist.none();
      Document document0 = Document.createShell("org.jsoup.safety.Cleaner$ElementMeta");
      Element element0 = document0.body();
      element0.prependElement("org.jsoup.safety.Cleaner$ElementMeta");
      Cleaner cleaner0 = new Cleaner(whitelist0);
      boolean boolean0 = cleaner0.isValid(document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Whitelist whitelist0 = Whitelist.simpleText();
      Document document0 = Document.createShell("p");
      Element element0 = document0.body();
      element0.prependElement("p");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "p";
      stringArray0[1] = "p";
      Whitelist whitelist1 = whitelist0.addEnforcedAttribute("p", "p", "p");
      Cleaner cleaner0 = new Cleaner(whitelist1);
      whitelist1.addAttributes("p", stringArray0);
      Document document1 = cleaner0.clean(document0);
      boolean boolean0 = cleaner0.isValid(document1);
      assertTrue(boolean0);
      assertNotSame(document1, document0);
  }
}
