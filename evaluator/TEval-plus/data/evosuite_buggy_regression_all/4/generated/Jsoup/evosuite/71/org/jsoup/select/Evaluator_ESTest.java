/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 21:55:05 GMT 2023
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.CombiningEvaluator;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.StructuralEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Evaluator_ESTest extends Evaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(1241);
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IndexEquals0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*:eq(1241)", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$IsFirstOfType");
      Elements elements0 = document0.getElementsByIndexLessThan(1906);
      assertEquals(3, elements0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(148);
      String string0 = evaluator_IndexLessThan0.toString();
      assertEquals(":lt(148)", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IsLastChild0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*:last-child", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting(":has(:empty)", ":has(:empty)");
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_AttributeWithValueStarting0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*[:has(:empty)^=:has(:empty)]", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("lUXu'#", "lUXu'#");
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_AttributeWithValue0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*[luxu'#=luxu'#]", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("1r_V2kUbOF]25", "h67<)5EhNq[tM");
      String string0 = evaluator_AttributeWithValueNot0.toString();
      assertEquals("[1r_v2kubof]25!=h67<)5ehnq[tm]", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan((-736));
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_IndexGreaterThan0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent:gt(-736)", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_IsOnlyOfType0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent:only-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(1788, 1788);
      Evaluator[] evaluatorArray0 = new Evaluator[5];
      evaluatorArray0[0] = (Evaluator) evaluator_IsNthLastOfType0;
      evaluatorArray0[1] = (Evaluator) evaluator_IsNthLastOfType0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsEmpty0);
      String string0 = structuralEvaluator_Has0.toString();
      assertEquals(":has(:empty)", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("org.jsoup.select.Evaluator$IsFirstOfType");
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("org.jsoup.select.Evaluator$IsFirstOfType", pattern0);
      String string0 = evaluator_AttributeWithValueMatching0.toString();
      assertEquals("[org.jsoup.select.evaluator$isfirstoftype~=org.jsoup.select.Evaluator$IsFirstOfType]", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IsFirstChild0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*:first-child", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("<", "'s*zvDJDjUz[Q}E8R#2'");
      String string0 = evaluator_AttributeWithValueEnding0.toString();
      assertEquals("[<$=s*zvdjdjuz[q}e8r#2]", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsOnlyChild0);
      String string0 = structuralEvaluator_Has0.toString();
      assertEquals(":has(:only-child)", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("vF");
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_AttributeStarting0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*[^vf]", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IsRoot0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*:root", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType((-1096), 0);
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_IsNthOfType0);
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertEquals(":prev:nth-of-type(-1096n)", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("T;*", "T;*");
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_AttributeWithValueContaining0);
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(structuralEvaluator_Not0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent:not[t;**=t;*]", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Document document0 = Document.createShell("+hf2k7Ed");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches((Pattern) null);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_Matches0);
      String string0 = structuralEvaluator_Has0.toString();
      assertEquals(":has(:matches(null))", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("+0f2+7E/");
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_ContainsText0);
      String string0 = structuralEvaluator_Parent0.toString();
      assertEquals(":parent:contains(+0f2+7e/)", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Document document0 = Document.createShell("7;");
      Elements elements0 = document0.getElementsContainingText("7;");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-15), (-15));
      String string0 = evaluator_IsNthChild0.toString();
      assertEquals(":nth-child(-15n-15)", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Document document0 = Document.createShell("j");
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-15), (-15));
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthChild0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("org.jsoup.select.Evaluator$IndexEvaluator");
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_ContainsData0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*:containsData(org.jsoup.select.evaluator$indexevaluator)", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+7E/");
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("+0f2+.E/");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_ContainsData0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("#%s");
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_Id0);
      String string0 = structuralEvaluator_Not0.toString();
      assertEquals(":not##%s", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Document document0 = Document.createShell("\"\" FGiPDZh");
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("\"\" FGiPDZh");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_Id0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Evaluator.Class evaluator_Class0 = new Evaluator.Class(":ImmediateParent%s");
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_Class0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent.:ImmediateParent%s", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Document document0 = Document.createShell("V");
      Evaluator.Class evaluator_Class0 = new Evaluator.Class("p");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_Class0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(0, 0);
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_IsNthLastChild0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent:nth-last-child(0)", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Document document0 = Document.createShell("fgipdzh");
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(1450, 1450);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthLastChild0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Document document0 = Document.createShell("fx");
      Pattern pattern0 = Pattern.compile("F!3:G2z8H}d%");
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_MatchesOwn0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("94P)DbMA ZysV/Q", 1658);
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_MatchesOwn0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*:matchesOwn(94P)DbMA ZysV/Q)", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_IsLastOfType0);
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertEquals(":prev:last-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+7E/");
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("+0f2+7E/");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_TagEndsWith0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("Unexpected characters returned for ");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_TagEndsWith0);
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(structuralEvaluator_Has0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent:has(Unexpected characters returned for )", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+.E/");
      Elements elements0 = document0.getElementsByAttribute("+0f2+.E/");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[2];
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      evaluatorArray0[0] = (Evaluator) evaluator_AllElements0;
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("vSp");
      evaluatorArray0[1] = (Evaluator) evaluator_Attribute0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Document document0 = Document.createShell("\"[progress!=audio]");
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("\"\" GiPDZh");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_ContainsOwnText0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("W'yLiz");
      String string0 = evaluator_ContainsOwnText0.toString();
      assertEquals(":containsOwn(w'yliz)", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("'jtPkhL%9i2%");
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_Tag0);
      String string0 = structuralEvaluator_Parent0.toString();
      assertEquals(":parent'jtPkhL%9i2%", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Document document0 = Document.createShell("O");
      Document document1 = document0.normalise();
      assertFalse(document1.isBlock());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstOfType0);
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(structuralEvaluator_Has0);
      String string0 = structuralEvaluator_Not0.toString();
      assertEquals(":not:has(:first-of-type)", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_AllElements0);
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertEquals(":prev*", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+7E/");
      document0.attr("+0f2+7E/", true);
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("\":first-of-type");
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_AttributeStarting0);
      boolean boolean0 = structuralEvaluator_Not0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("org.jsoup.select.Evaluator$AttributeWithValueMatching", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("}", true);
      FormElement formElement0 = new FormElement(tag0, "<55cRm[&YQ5l", attributes1);
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("}");
      boolean boolean0 = evaluator_AttributeStarting0.matches(formElement0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+7E/");
      Elements elements0 = document0.getElementsByAttributeValue(":last-of-tppe", "Kebu!T^J:");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Document document0 = Document.createShell("m");
      Tag tag0 = Tag.valueOf("mt~a?Ki");
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("org.jsoup.select.NodeTraversor", "Ac09V8i`");
      Comment comment0 = new Comment("m", "org.jsoup.select.NodeTraversor");
      Attributes attributes0 = comment0.attributes();
      Attribute attribute0 = Attribute.createFromEncoded("org.jsoup.select.NodeTraversor", "mt~a?Ki");
      attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "Ac09V8i`", attributes0);
      boolean boolean0 = evaluator_AttributeWithValue0.matches(document0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Document document0 = Document.createShell("m");
      Tag tag0 = Tag.valueOf("mt~a?Ki");
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("org.jsoup.select.NodeTraversor", "Ac09V8i`");
      Comment comment0 = new Comment("m", "org.jsoup.select.NodeTraversor");
      Attributes attributes0 = comment0.attributes();
      attributes0.put("org.jsoup.select.NodeTraversor", "Ac09V8i`");
      FormElement formElement0 = new FormElement(tag0, "Ac09V8i`", attributes0);
      boolean boolean0 = evaluator_AttributeWithValue0.matches(document0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Document document0 = Document.createShell(":has(%s)");
      Elements elements0 = document0.getElementsByAttributeValueNot("AfterAfterFrameset", "          ");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$IsLastOfType");
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("org.jsoup.select.Evaluator$IsLastOfType", "org.jsoup.select.Evaluator$IsLastOfType");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_AttributeWithValueNot0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+7E/");
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("vP?9vZ<pgun)\"", "vP?9vZ<pgun)\"");
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("\"\" FGiPDZh", parseSettings0);
      Attributes attributes0 = new Attributes();
      attributes0.put("WWUW4f@r`^`N^hlv}[S", "\"\" FGiPDZh");
      FormElement formElement0 = new FormElement(tag0, "pqvh", attributes0);
      Document document0 = Document.createShell("pqvh");
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("WWUW4f@r`^`N^hlv}[S", "\"\" FGiPDZh");
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(document0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("Nh@qh", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("Nh@qh", true);
      Element element0 = new Element(tag0, "Nh@qh", attributes1);
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("Nh@qh", "Re");
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("WWUW4f@r`^`N^hlv}[S", "\"\" FGiPDZh");
      Document document0 = Document.createShell("pqvh");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("\"\" FGiPDZh", parseSettings0);
      Attributes attributes0 = new Attributes();
      attributes0.put("WWUW4f@r`^`N^hlv}[S", "\"\" FGiPDZh");
      FormElement formElement0 = new FormElement(tag0, "pqvh", attributes0);
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("WWUW4f@r`^`N^hlv}[S", "\"\" FGiPDZh");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(formElement0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Document document0 = new Document("+0)2D7E/");
      Element element0 = document0.attr(":last-of-tppe", true);
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding(":last-of-tppe", "'+0f2+7E/");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(element0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+7E/");
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("+0f2+7E/", "+0f2+7E/");
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Document document0 = Document.createShell("O");
      Element element0 = document0.attr("O", true);
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("O", "fe*7=F z&qb.sX0");
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+7E/");
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("+0f2+7E/", "+0f2+7E/");
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("+0f2+7E/", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("+0f2+7E/", "+0f2+7E/");
      Element element0 = new Element(tag0, "+0f2+7E/", attributes1);
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Document document0 = Document.createShell("O");
      document0.attr("O", true);
      Elements elements0 = document0.getElementsByAttributeValueMatching("O", "O");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("g+oL;*.&|(/:AEo", "\"org.jsoup.select.Evaluator$IsFirstChild\"");
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+.E/");
      Elements elements0 = document0.getElementsByIndexLessThan((-18548323));
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+7E/");
      Elements elements0 = document0.getElementsByIndexGreaterThan(0);
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+7E/");
      Elements elements0 = document0.getElementsByIndexEquals(0);
      assertEquals(3, elements0.size());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      Document document0 = Document.createShell("'a");
      boolean boolean0 = evaluator_IsLastChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$IsFirstOfType");
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsLastChild0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Document document0 = Document.createShell("pqvh");
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      boolean boolean0 = evaluator_IsFirstOfType0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Document document0 = Document.createShell("O");
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstOfType0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Document document0 = Document.createShell("+0f)Q.E/");
      Element element0 = document0.body();
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(1, 1);
      boolean boolean0 = evaluator_IsNthOfType0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+7E/");
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType((-2524), 65);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthOfType0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Document document0 = Document.createShell("'+0f2+7E/");
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType((-63161284), (-63161284));
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthLastOfType0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Document document0 = Document.createShell("");
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Evaluator[] evaluatorArray0 = new Evaluator[8];
      evaluatorArray0[0] = (Evaluator) evaluator_IsFirstChild0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      Document document0 = Document.createShell(":prev*:first-child");
      Element element0 = document0.body();
      boolean boolean0 = combiningEvaluator_And0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+.E/");
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstChild0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+7E/");
      Element element0 = document0.body();
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsRoot0);
      boolean boolean0 = structuralEvaluator_Has0.matches(element0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsRoot0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      Document document0 = new Document("\"                  ");
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Document document0 = Document.createShell("O");
      Element element0 = document0.body();
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Document document0 = Document.createShell("+0f2+7E/");
      document0.appendTo(document0);
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Document document0 = Document.createShell("O");
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$IsLastOfType");
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsOnlyOfType0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Document document0 = Document.createShell("O");
      Element element0 = document0.body();
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      Element element1 = element0.before("fe*7=F z&qb.sX0");
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, element1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      Document document0 = Document.createShell("pqvh");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsEmpty0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }
}
