/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 21:50:29 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("zmPtiEqWw^T*.");
      characterReader0.rewindToMark();
      assertEquals("zmPtiEqWw^T*.", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("CmVVz! 9");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("w4]|G+=wDw4]|G+=wD");
      assertEquals("CmVVz! 9", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("w4]|G+=wD");
      characterReader0.mark();
      assertEquals("w4]|G+=wD", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.unconsume();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("P~c*Q;Y}*G");
      String string0 = characterReader0.toString();
      assertEquals("P~c*Q;Y}*G", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("w4]|G+=wD");
      characterReader0.consumeAsString();
      assertEquals("4]|G+=wD", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("CmVVz! 9");
      int int0 = characterReader0.pos();
      assertEquals("CmVVz! 9", characterReader0.toString());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("zmPtiEqWw^T*.");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals("zmPtiEqWw^T*.", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("\r\n?");
      char[] charArray0 = new char[5];
      characterReader0.consumeToAny(charArray0);
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      char char0 = characterReader0.current();
      assertEquals('o', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("P~c*Q;Y}*G");
      assertEquals("P~c*Q;Y}*G", characterReader0.toString());
      
      characterReader0.consumeToEnd();
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("w4]|G+=wDw4]|G+=wD");
      char char0 = characterReader0.consume();
      assertEquals("4]|G+=wDw4]|G+=wD", characterReader0.toString());
      assertEquals('w', char0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char char0 = characterReader0.consume();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("CkAV;o-'2:KSEj|d");
      characterReader0.consumeTo('8');
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("w4]dG+=wD");
      characterReader0.consumeTo(";");
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("w4]|G+=wD");
      characterReader0.consumeTo("");
      assertEquals("w4]|G+=wD", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("?^u t");
      char[] charArray0 = new char[6];
      charArray0[0] = '?';
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consumeLetterSequence();
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.consumeLetterSequence();
      characterReader0.consumeHexSequence();
      assertEquals(".jsoup.parser.CharacterReader", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("s~.QJPODz");
      characterReader0.consumeLetterSequence();
      assertEquals("~.QJPODz", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("P~c*Q;Y}*G");
      assertEquals("P~c*Q;Y}*G", characterReader0.toString());
      
      characterReader0.consumeToEnd();
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.consumeHexSequence();
      assertEquals("org.jsoup.parser.CharacterReader", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("29Y1CH4h$MAOIm{*?");
      characterReader0.consumeHexSequence();
      assertEquals("Y1CH4h$MAOIm{*?", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("fB[@FFv02~ihYiU~K/k");
      characterReader0.consumeHexSequence();
      assertEquals("[@FFv02~ihYiU~K/k", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("P~c*Q;Y}*G");
      assertEquals("P~c*Q;Y}*G", characterReader0.toString());
      
      characterReader0.consumeToEnd();
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.consumeLetterSequence();
      characterReader0.consumeDigitSequence();
      assertEquals(".jsoup.parser.CharacterReader", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("w4]|G+=wD");
      characterReader0.consumeLetterSequence();
      characterReader0.consumeDigitSequence();
      assertEquals("]|G+=wD", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("P~c*Q;Y}*G");
      characterReader0.matchConsumeIgnoreCase("P~c*Q;Y}*G");
      boolean boolean0 = characterReader0.matches('h');
      assertEquals("", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      boolean boolean0 = characterReader0.matches(')');
      assertEquals("org.jsoup.parser.CharacterReader", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("CkAV;o-'2:KSEj|d");
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matches(';');
      assertEquals(";o-'2:KSEj|d", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      char[] charArray0 = new char[5];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals("org.jsoup.parser.CharacterReader", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("P~c*Q;Y}*G");
      assertEquals("P~c*Q;Y}*G", characterReader0.toString());
      
      char[] charArray0 = new char[1];
      characterReader0.consumeToEnd();
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.consumeLetterSequence();
      char[] charArray0 = new char[5];
      charArray0[3] = '.';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(".jsoup.parser.CharacterReader", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals("", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("CkAV;o-'2:KSEj|d");
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(";o-'2:KSEj|d", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("CmVVz! 9");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("~{j1O]|MHyA+");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
      assertEquals("~{j1O]|MHyA+", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("P~c*Q;Y}*G");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
      assertEquals("P~c*Q;Y}*G", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("P~c*Q;Y}*G");
      assertEquals("P~c*Q;Y}*G", characterReader0.toString());
      
      characterReader0.consumeToEnd();
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Z/hPNxunJShkS");
      characterReader0.consumeTo('/');
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals("/hPNxunJShkS", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("w4]|G+=wD");
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals("4]|G+=wD", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("\r\n?");
      boolean boolean0 = characterReader0.matchConsume("Array must not contain any null objects");
      assertFalse(boolean0);
      assertEquals("\n?", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("P~c*Q;Y}*G");
      boolean boolean0 = characterReader0.matchConsume("");
      assertEquals("P~c*Q;Y}*G", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("?^u t");
      boolean boolean0 = characterReader0.containsIgnoreCase("?^u t");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("CmVVz! 9");
      boolean boolean0 = characterReader0.containsIgnoreCase("?Uso$~yd");
      assertFalse(boolean0);
      assertEquals("CmVVz! 9", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("?T1)?=!I");
      boolean boolean0 = characterReader0.containsIgnoreCase("?T1)?=!I");
      assertTrue(boolean0);
  }
}
