/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 21:50:23 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<OTsh\"Yo<3c", "<OTsh\"Yo<3c");
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<!S--", "<!S--");
      assertEquals("#document", document0.nodeName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<![CDATA[", "<![CDATA[");
      assertEquals("<![CDATA[", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Document document0 = Parser.parse("W^$<OI</A)[4l", "W^$<OI</A)[4l");
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Document document0 = Parser.parse("<!--%s-->", "<!--%s-->");
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Document document0 = Parser.parse("<?", "<?");
      assertEquals("#document", document0.nodeName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Document document0 = Parser.parse("<!--", "<!--");
      assertFalse(document0.isBlock());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("</", "</");
      assertEquals("#document", document0.nodeName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Document document0 = Parser.parse("T<rrvC!1SN?<#mUi", "T<rrvC!1SN?<#mUi");
      assertEquals("T<rrvC!1SN?<#mUi", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Document document0 = Parser.parse("<2USsP7;uYo3=RI", "<2USsP7;uYo3=RI");
      assertEquals("<2USsP7;uYo3=RI", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Document document0 = Parser.parse("<bjTd_.eQN{LZ7N=\"", "<bjTd_.eQN{LZ7N=\"");
      assertEquals("<bjTd_.eQN{LZ7N=\"", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("gz8?</vA. _5V*>mC,", "gz8?</vA. _5V*>mC,");
      assertEquals("#document", document0.nodeName());
  }
}
