/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 21:55:08 GMT 2023
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.XmlDeclaration;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LeafNode_ESTest extends LeafNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DataNode dataNode0 = new DataNode("");
      DataNode dataNode1 = dataNode0.setWholeData("Vp]1T\"Ldjd/9M");
      assertEquals(0, dataNode1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DataNode dataNode0 = new DataNode("");
      String string0 = dataNode0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Comment comment0 = new Comment("e$q8", "");
      Node node0 = comment0.removeAttr("F_-,{G4A");
      assertSame(node0, comment0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DataNode dataNode0 = new DataNode("");
      // Undeclared exception!
      try { 
        dataNode0.childNodesAsArray();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Leaf Nodes do not have child nodes.
         //
         verifyException("org.jsoup.nodes.LeafNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("", "", "SVwLj4pwwX1-8>(Y", "7vO,GQ`");
      String string0 = documentType0.absUrl("7vO,GQ`");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("", true);
      xmlDeclaration0.doSetBaseUri("");
      assertEquals("#declaration", xmlDeclaration0.nodeName());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DataNode dataNode0 = new DataNode("");
      String string0 = dataNode0.attr(";Y;lC");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DataNode dataNode0 = new DataNode("");
      DataNode dataNode1 = new DataNode("");
      dataNode1.parentNode = (Node) dataNode0;
      String string0 = dataNode1.baseUri();
      assertEquals("", string0);
  }
}
