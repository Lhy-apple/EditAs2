/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 12:58:23 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.jscomp.SyntacticScopeCreator;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SyntacticScopeCreator_ESTest extends SyntacticScopeCreator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "3F9.Mw+Oed?`d", "3F9.Mw+Oed?`d");
      Node node1 = new Node(118, node0, node0, node0, 33, 1);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
      // Undeclared exception!
      try { 
        syntacticScopeCreator0.createScope(node1, (Scope) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0, (SyntacticScopeCreator.RedeclarationHandler) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("");
      Node node1 = Node.newString(39, "");
      Node node2 = new Node(105, node1, node0, node0, 33, 1);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
      // Undeclared exception!
      try { 
        syntacticScopeCreator0.createScope(node2, (Scope) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode("K]=M", "K]=M");
      Node node1 = Node.newString(39, "K]=M");
      Node node2 = new Node(105, node1, node0, node0, 33, 1);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
      // Undeclared exception!
      try { 
        syntacticScopeCreator0.createScope(node2, (Scope) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "3mz.*K4+Oe`d", "3mz.*K4+Oe`d");
      Node node1 = new Node(35, node0, node0, node0, 23, 5);
      Scope scope0 = syntacticScopeCreator0.createScope(node1, (Scope) null);
      // Undeclared exception!
      try { 
        syntacticScopeCreator0.createScope(node0, scope0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "3F9.&Mw+Oe?`d", "3F9.&Mw+Oe?`d");
      Node node1 = new Node(120, node0, node0, node0, 33, 1);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
      // Undeclared exception!
      try { 
        syntacticScopeCreator0.createScope(node1, (Scope) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "com.google.javascript.jscomp.AnalyzePrototypeProperties$NameInfo", "com.google.javascript.jscomp.AnalyzePrototypeProperties$NameInfo");
      Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
      assertFalse(scope0.isLocal());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
      Normalize.parseAndNormalizeTestCode(compiler0, "3mNz.Mw4+Oe`d", "3mNz.Mw4+Oe`d");
      Node node0 = Node.newString(118, "3mNz.Mw4+Oe`d");
      Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
      assertFalse(scope0.isLocal());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "3F9.Mw+Oed?`d", "3F9.Mw+Oed?`d");
      Node node1 = Node.newString(39, "3F9.Mw+Oed?`d");
      Node node2 = new Node(120, node1, node0, node0, 33, 1);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
      // Undeclared exception!
      try { 
        syntacticScopeCreator0.createScope(node2, (Scope) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "3mz.*K4+Oe`d", "3mz.*K4+Oe`d");
      Node node1 = new Node(113, node0, node0, node0, 38, 29);
      Scope scope0 = syntacticScopeCreator0.createScope(node1, (Scope) null);
      assertEquals(0, scope0.getVarCount());
  }
}
