/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 13:42:03 GMT 2023
 */

package com.fasterxml.jackson.databind.node;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.node.BooleanNode;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;
import com.fasterxml.jackson.databind.node.LongNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.node.POJONode;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.util.RawValue;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class POJONode_ESTest extends POJONode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      boolean boolean0 = pOJONode0.isNumber();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      JsonToken jsonToken0 = pOJONode0.asToken();
      assertEquals(JsonToken.VALUE_EMBEDDED_OBJECT, jsonToken0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Short short0 = Short.valueOf((short)224);
      POJONode pOJONode0 = new POJONode(short0);
      Object object0 = pOJONode0.getPojo();
      assertEquals((short)224, object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(true);
      HashMap<String, JsonNode> hashMap0 = new HashMap<String, JsonNode>();
      ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0, hashMap0);
      POJONode pOJONode0 = new POJONode(objectNode0);
      pOJONode0.hashCode();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      byte[] byteArray0 = pOJONode0.binaryValue();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      String string0 = pOJONode0.asText();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      String string0 = pOJONode0.asText();
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LongNode longNode0 = new LongNode(1L);
      POJONode pOJONode0 = new POJONode(longNode0);
      String string0 = pOJONode0.asText("null");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      String string0 = pOJONode0.asText("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      boolean boolean0 = pOJONode0.asBoolean(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      boolean boolean0 = pOJONode0.asBoolean(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Boolean boolean0 = new Boolean(false);
      POJONode pOJONode0 = new POJONode(boolean0);
      boolean boolean1 = pOJONode0.asBoolean(false);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BooleanNode booleanNode0 = BooleanNode.getTrue();
      POJONode pOJONode0 = new POJONode(booleanNode0);
      int int0 = pOJONode0.asInt((-4232));
      assertEquals((-4232), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Short short0 = Short.valueOf((short)224);
      POJONode pOJONode0 = new POJONode(short0);
      int int0 = pOJONode0.asInt();
      assertEquals(224, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      long long0 = pOJONode0.asLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = new Long((-14L));
      POJONode pOJONode0 = new POJONode(long0);
      long long1 = pOJONode0.asLong();
      assertEquals((-14L), long1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LongNode longNode0 = new LongNode(169L);
      POJONode pOJONode0 = new POJONode(longNode0);
      double double0 = pOJONode0.asDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer(204);
      POJONode pOJONode0 = new POJONode(integer0);
      double double0 = pOJONode0.asDouble();
      assertEquals(204.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory();
      POJONode pOJONode0 = new POJONode(jsonNodeFactory0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        pOJONode0.serialize((JsonGenerator) null, defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.node.POJONode", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        pOJONode0.serialize((JsonGenerator) null, defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.SerializerProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BooleanNode booleanNode0 = BooleanNode.getTrue();
      POJONode pOJONode0 = new POJONode(booleanNode0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        pOJONode0.serialize((JsonGenerator) null, defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.node.BooleanNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TextNode textNode0 = TextNode.EMPTY_STRING_NODE;
      POJONode pOJONode0 = new POJONode(textNode0);
      POJONode pOJONode1 = new POJONode(pOJONode0);
      boolean boolean0 = pOJONode1.equals((Object) pOJONode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      boolean boolean0 = pOJONode0.equals((Object) pOJONode0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      boolean boolean0 = pOJONode0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      boolean boolean0 = pOJONode0._pojoEquals(pOJONode0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      POJONode pOJONode1 = new POJONode(pOJONode0);
      boolean boolean0 = pOJONode0._pojoEquals(pOJONode1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TextNode textNode0 = TextNode.EMPTY_STRING_NODE;
      POJONode pOJONode0 = new POJONode(textNode0);
      String string0 = pOJONode0.toString();
      assertEquals("\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RawValue rawValue0 = new RawValue("sMEGZ(");
      POJONode pOJONode0 = new POJONode(rawValue0);
      String string0 = pOJONode0.toString();
      assertEquals("(raw value '[RawValue of type `java.lang.String`]')", string0);
  }
}
