/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 12 12:22:53 GMT 2023
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Locale;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.PosixParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PosixParser_ESTest extends PosixParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PosixParser posixParser0 = new PosixParser();
      Options options0 = new Options();
      String[] stringArray0 = Locale.getISOCountries();
      String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
      String[] stringArray2 = posixParser0.flatten(options0, stringArray1, true);
      assertEquals(252, stringArray2.length);
      assertEquals(251, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-";
      String[] stringArray1 = posixParser0.flatten(options0, stringArray0, false);
      assertEquals(1, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--[H5s+dua%k9>8#=fm<z";
      String[] stringArray1 = posixParser0.flatten(options0, stringArray0, false);
      assertEquals(2, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-e(~w*";
      String[] stringArray1 = posixParser0.flatten(options0, stringArray0, false);
      String[] stringArray2 = posixParser0.flatten(options0, stringArray1, false);
      assertEquals(0, stringArray2.length);
      assertEquals(5, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PosixParser posixParser0 = new PosixParser();
      Options options0 = new Options();
      String[] stringArray0 = Locale.getISOCountries();
      String[] stringArray1 = posixParser0.flatten(options0, stringArray0, false);
      assertEquals(250, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PosixParser posixParser0 = new PosixParser();
      Options options0 = new Options();
      options0.addOption("", "", true, "");
      String[] stringArray0 = Locale.getISOCountries();
      posixParser0.flatten(options0, stringArray0, true);
      posixParser0.burstToken("-Y-", true);
      posixParser0.burstToken("-Y-", true);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PosixParser posixParser0 = new PosixParser();
      Options options0 = new Options();
      options0.addOption("", "", false, "");
      String[] stringArray0 = Locale.getISOCountries();
      posixParser0.flatten(options0, stringArray0, true);
      posixParser0.burstToken("jq'%-ERe@yo-", true);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-e(~w*d";
      String[] stringArray1 = posixParser0.flatten(options0, stringArray0, false);
      String[] stringArray2 = posixParser0.flatten(options0, stringArray1, true);
      assertEquals(5, stringArray2.length);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PosixParser posixParser0 = new PosixParser();
      Options options0 = new Options();
      Options options1 = options0.addOption("", true, "");
      String[] stringArray0 = Locale.getISOLanguages();
      posixParser0.flatten(options1, stringArray0, true);
      posixParser0.burstToken("o--", true);
  }
}
