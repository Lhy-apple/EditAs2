/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 17:02:16 GMT 2023
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.BasicStroke;
import java.awt.Color;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.ValueMarker;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValueMarker_ESTest extends ValueMarker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(75.0);
      double double0 = valueMarker0.getValue();
      assertEquals(75.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(75.0);
      valueMarker0.setValue(75.0);
      assertEquals(75.0, valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Color color0 = (Color)Plot.DEFAULT_OUTLINE_PAINT;
      BasicStroke basicStroke0 = (BasicStroke)FastScatterPlot.DEFAULT_GRIDLINE_STROKE;
      ValueMarker valueMarker0 = new ValueMarker(Double.NEGATIVE_INFINITY, color0, basicStroke0);
      assertEquals(Double.NEGATIVE_INFINITY, valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(75.0);
      ValueMarker valueMarker1 = new ValueMarker(75.0);
      boolean boolean0 = valueMarker1.equals(valueMarker0);
      assertTrue(boolean0);
      assertEquals(75.0, valueMarker1.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(75.0);
      boolean boolean0 = valueMarker0.equals(valueMarker0);
      assertEquals(75.0, valueMarker0.getValue(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(201.2808007820401);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      boolean boolean0 = valueMarker0.equals(integer0);
      assertFalse(boolean0);
      assertEquals(201.2808007820401, valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(Double.NaN);
      ValueMarker valueMarker1 = new ValueMarker(Double.NaN);
      boolean boolean0 = valueMarker0.equals(valueMarker1);
      assertFalse(boolean0);
  }
}
