/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 18:12:55 GMT 2023
 */

package org.apache.commons.math.stat.inference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.distribution.ChiSquaredDistributionImpl;
import org.apache.commons.math.distribution.DistributionFactory;
import org.apache.commons.math.stat.inference.ChiSquareTestImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ChiSquareTestImpl_ESTest extends ChiSquareTestImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[][] longArray0 = new long[3][8];
      double[] doubleArray0 = new double[8];
      try { 
        chiSquareTestImpl0.chiSquareTest(doubleArray0, longArray0[0], Double.NaN);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // observed counts must be non-negative and expected counts must be postive
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[][] longArray0 = new long[17][2];
      boolean boolean0 = chiSquareTestImpl0.chiSquareTest(longArray0, 1.0E-6);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[] longArray0 = new long[6];
      try { 
        chiSquareTestImpl0.chiSquareTestDataSetsComparison(longArray0, longArray0, 0.5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // observed counts cannot all be 0
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      DistributionFactory distributionFactory0 = chiSquareTestImpl0.getDistributionFactory();
      assertNotNull(distributionFactory0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      double[] doubleArray0 = new double[0];
      long[] longArray0 = new long[0];
      try { 
        chiSquareTestImpl0.chiSquare(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // observed, expected array lengths incorrect
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[] longArray0 = new long[7];
      double[] doubleArray0 = new double[4];
      try { 
        chiSquareTestImpl0.chiSquareTest(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // observed, expected array lengths incorrect
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[][] longArray0 = new long[3][8];
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = Double.NaN;
      doubleArray0[1] = Double.NaN;
      doubleArray0[2] = Double.NaN;
      doubleArray0[3] = Double.NaN;
      doubleArray0[4] = Double.NaN;
      doubleArray0[5] = 0.9999999999999971;
      doubleArray0[6] = Double.NaN;
      doubleArray0[7] = Double.NaN;
      boolean boolean0 = chiSquareTestImpl0.chiSquareTest(doubleArray0, longArray0[0], Double.NaN);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 531.6768456510681;
      doubleArray0[1] = 1786.8087084472454;
      long[] longArray0 = new long[2];
      longArray0[1] = (-430L);
      try { 
        chiSquareTestImpl0.chiSquare(doubleArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // observed counts must be non-negative and expected counts must be postive
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[] longArray0 = new long[10];
      double[] doubleArray0 = new double[6];
      try { 
        chiSquareTestImpl0.chiSquareTest(doubleArray0, longArray0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad significance level: 0.0
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      double[] doubleArray0 = new double[0];
      long[] longArray0 = new long[0];
      try { 
        chiSquareTestImpl0.chiSquareTest(doubleArray0, longArray0, 1222.6220714597898);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad significance level: 1222.6220714597898
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChiSquaredDistributionImpl chiSquaredDistributionImpl0 = new ChiSquaredDistributionImpl(0.5);
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl(chiSquaredDistributionImpl0);
      long[] longArray0 = new long[5];
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.5;
      doubleArray0[1] = 1.0E-14;
      doubleArray0[2] = 1.0E-14;
      doubleArray0[3] = (double) 2056L;
      doubleArray0[4] = 1.0E-14;
      boolean boolean0 = chiSquareTestImpl0.chiSquareTest(doubleArray0, longArray0, 1.0E-14);
      assertEquals(4.0, chiSquaredDistributionImpl0.getDegreesOfFreedom(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      try { 
        chiSquareTestImpl0.chiSquareTest((long[][]) null, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad significance level: 0.0
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[][] longArray0 = new long[0][9];
      try { 
        chiSquareTestImpl0.chiSquareTest(longArray0, 57.15623566586292);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad significance level: 57.15623566586292
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[] longArray0 = new long[0];
      try { 
        chiSquareTestImpl0.chiSquareDataSetsComparison(longArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // oberved1, observed2 array lengths incorrect
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long[] longArray0 = new long[10];
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[] longArray1 = new long[1];
      try { 
        chiSquareTestImpl0.chiSquareDataSetsComparison(longArray0, longArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // oberved1, observed2 array lengths incorrect
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[5];
      longArray0[3] = (-164L);
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      try { 
        chiSquareTestImpl0.chiSquareDataSetsComparison(longArray0, longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // observed counts must be non-negative
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[7];
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[] longArray1 = new long[7];
      longArray1[3] = (-486L);
      try { 
        chiSquareTestImpl0.chiSquareDataSetsComparison(longArray0, longArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // observed counts must be non-negative
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[] longArray0 = new long[6];
      longArray0[3] = 2052L;
      longArray0[1] = 2052L;
      longArray0[2] = 2052L;
      longArray0[4] = 2052L;
      longArray0[5] = 1275L;
      long[] longArray1 = new long[6];
      longArray1[0] = 1275L;
      boolean boolean0 = chiSquareTestImpl0.chiSquareTestDataSetsComparison(longArray0, longArray1, 0.5);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[] longArray0 = new long[2];
      longArray0[0] = 2061L;
      try { 
        chiSquareTestImpl0.chiSquareTestDataSetsComparison(longArray0, longArray0, 1.0E-14);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // observed counts must not both be zero
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[] longArray0 = new long[0];
      try { 
        chiSquareTestImpl0.chiSquareTestDataSetsComparison(longArray0, longArray0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad significance level: 0.0
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[] longArray0 = new long[0];
      try { 
        chiSquareTestImpl0.chiSquareTestDataSetsComparison(longArray0, longArray0, 1400.750206601317);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bad significance level: 1400.750206601317
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[] longArray0 = new long[2];
      longArray0[0] = 2061L;
      longArray0[1] = 2061L;
      boolean boolean0 = chiSquareTestImpl0.chiSquareTestDataSetsComparison(longArray0, longArray0, 1.0E-14);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[][] longArray0 = new long[1][8];
      try { 
        chiSquareTestImpl0.chiSquare(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Input table must have at least two rows
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[][] longArray0 = new long[17][2];
      long[] longArray1 = new long[0];
      longArray0[0] = longArray1;
      try { 
        chiSquareTestImpl0.chiSquareTest(longArray0, 1.0E-6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Input table must have at least two columns
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[] longArray0 = new long[7];
      long[][] longArray1 = new long[3][8];
      longArray1[0] = longArray0;
      try { 
        chiSquareTestImpl0.chiSquare(longArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Input table must be rectangular
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ChiSquareTestImpl chiSquareTestImpl0 = new ChiSquareTestImpl();
      long[][] longArray0 = new long[2][4];
      long[] longArray1 = new long[3];
      longArray1[0] = (-1863L);
      longArray0[0] = longArray1;
      longArray0[1] = longArray1;
      try { 
        chiSquareTestImpl0.chiSquare(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // All entries in input 2-way table must be non-negative
         //
         verifyException("org.apache.commons.math.stat.inference.ChiSquareTestImpl", e);
      }
  }
}
