/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 18:08:15 GMT 2023
 */

package org.apache.commons.math.optimization.direct;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.MultivariateFunction;
import org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatingFunction;
import org.apache.commons.math.optimization.GoalType;
import org.apache.commons.math.optimization.RealPointValuePair;
import org.apache.commons.math.optimization.direct.BOBYQAOptimizer;
import org.apache.commons.math.random.UnitSphereRandomVectorGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BOBYQAOptimizer_ESTest extends BOBYQAOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(0);
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 9, 0, unitSphereRandomVectorGenerator0);
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(9);
      double[] doubleArray2 = new double[4];
      GoalType goalType0 = GoalType.MAXIMIZE;
      // Undeclared exception!
      try { 
        bOBYQAOptimizer0.optimize(16, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray2, doubleArray2, (double[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.optimization.direct.BOBYQAOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(0);
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 9, 0, unitSphereRandomVectorGenerator0);
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(9, 0, 0);
      double[] doubleArray2 = new double[4];
      GoalType goalType0 = GoalType.MAXIMIZE;
      RealPointValuePair realPointValuePair0 = bOBYQAOptimizer0.optimize(680, microsphereInterpolatingFunction0, goalType0, doubleArray2);
      assertEquals(0.0, realPointValuePair0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(7);
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 7, 7, unitSphereRandomVectorGenerator0);
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(7);
      double[] doubleArray2 = new double[4];
      GoalType goalType0 = GoalType.MAXIMIZE;
      // Undeclared exception!
      try { 
        bOBYQAOptimizer0.optimize(7, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray2, (double[]) null, doubleArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.optimization.direct.BOBYQAOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(0);
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 9, 0, unitSphereRandomVectorGenerator0);
      double[] doubleArray2 = new double[4];
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(9, 1.0E-8, (-2655.123));
      GoalType goalType0 = GoalType.MINIMIZE;
      // Undeclared exception!
      bOBYQAOptimizer0.optimize(120, microsphereInterpolatingFunction0, goalType0, doubleArray2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(4);
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 9, 4, unitSphereRandomVectorGenerator0);
      double[] doubleArray2 = new double[4];
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(9, 1.0E-8, 1.0000000000000004E-13);
      GoalType goalType0 = GoalType.MINIMIZE;
      // Undeclared exception!
      bOBYQAOptimizer0.optimize(120, microsphereInterpolatingFunction0, goalType0, doubleArray2);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(0);
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 15, 0, unitSphereRandomVectorGenerator0);
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(15, 0, 15);
      GoalType goalType0 = GoalType.MINIMIZE;
      double[] doubleArray2 = new double[4];
      // Undeclared exception!
      try { 
        bOBYQAOptimizer0.optimize(15, microsphereInterpolatingFunction0, goalType0, doubleArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.optimization.direct.BOBYQAOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(0);
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 7, 0, unitSphereRandomVectorGenerator0);
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(7);
      double[] doubleArray2 = new double[4];
      GoalType goalType0 = GoalType.MAXIMIZE;
      // Undeclared exception!
      try { 
        bOBYQAOptimizer0.optimize(7, microsphereInterpolatingFunction0, goalType0, doubleArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.optimization.direct.BOBYQAOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(4);
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[1];
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(9, 4, 4);
      double[] doubleArray2 = new double[4];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 9, 2, unitSphereRandomVectorGenerator0);
      GoalType goalType0 = GoalType.MINIMIZE;
      RealPointValuePair realPointValuePair0 = bOBYQAOptimizer0.optimize(120, microsphereInterpolatingFunction0, goalType0, doubleArray2);
      assertEquals(0.0, realPointValuePair0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(0);
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[1][5];
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(0);
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray1, doubleArray0, 2, 0, unitSphereRandomVectorGenerator0);
      GoalType goalType0 = GoalType.MAXIMIZE;
      // Undeclared exception!
      try { 
        bOBYQAOptimizer0.optimize(0, microsphereInterpolatingFunction0, goalType0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 is smaller than the minimum (2)
         //
         verifyException("org.apache.commons.math.optimization.direct.BOBYQAOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(0);
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 0, 0, unitSphereRandomVectorGenerator0);
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(0);
      GoalType goalType0 = GoalType.MINIMIZE;
      double[] doubleArray2 = new double[4];
      // Undeclared exception!
      try { 
        bOBYQAOptimizer0.optimize(0, microsphereInterpolatingFunction0, goalType0, doubleArray2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of interpolation points (0)
         //
         verifyException("org.apache.commons.math.optimization.direct.BOBYQAOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(7);
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 7, 7, unitSphereRandomVectorGenerator0);
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(7, 7, 7);
      double[] doubleArray2 = new double[2];
      GoalType goalType0 = GoalType.MINIMIZE;
      // Undeclared exception!
      try { 
        bOBYQAOptimizer0.optimize(7, microsphereInterpolatingFunction0, goalType0, doubleArray2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // number of interpolation points (7)
         //
         verifyException("org.apache.commons.math.optimization.direct.BOBYQAOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UnitSphereRandomVectorGenerator unitSphereRandomVectorGenerator0 = new UnitSphereRandomVectorGenerator(7);
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[1];
      MicrosphereInterpolatingFunction microsphereInterpolatingFunction0 = new MicrosphereInterpolatingFunction(doubleArray0, doubleArray1, 7, 7, unitSphereRandomVectorGenerator0);
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(7);
      double[] doubleArray2 = new double[4];
      GoalType goalType0 = GoalType.MINIMIZE;
      // Undeclared exception!
      try { 
        bOBYQAOptimizer0.optimize(7, (MultivariateFunction) microsphereInterpolatingFunction0, goalType0, doubleArray2, doubleArray2, doubleArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math.optimization.direct.BOBYQAOptimizer", e);
      }
  }
}
