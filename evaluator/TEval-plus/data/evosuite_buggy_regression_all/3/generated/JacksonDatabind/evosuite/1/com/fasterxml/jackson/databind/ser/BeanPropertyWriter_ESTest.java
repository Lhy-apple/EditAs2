/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 17:35:43 GMT 2023
 */

package com.fasterxml.jackson.databind.ser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.io.SerializedString;
import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
import com.fasterxml.jackson.databind.AnnotationIntrospector;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonSerializer;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.SerializationConfig;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.introspect.AnnotatedField;
import com.fasterxml.jackson.databind.introspect.AnnotatedMember;
import com.fasterxml.jackson.databind.introspect.AnnotationMap;
import com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder;
import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor;
import com.fasterxml.jackson.databind.jsontype.NamedType;
import com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
import com.fasterxml.jackson.databind.jsontype.TypeSerializer;
import com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.ser.BeanPropertyWriter;
import com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
import com.fasterxml.jackson.databind.type.ArrayType;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.Annotations;
import com.fasterxml.jackson.databind.util.NameTransformer;
import java.io.IOException;
import java.lang.annotation.Annotation;
import java.lang.reflect.Field;
import java.time.DayOfWeek;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeanPropertyWriter_ESTest extends BeanPropertyWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("A", (AnnotationIntrospector) null, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, (String) null);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, annotationMap0);
      PropertyName propertyName0 = beanPropertyWriter0.getWrapperName();
      assertNull(propertyName0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("proper/n-", annotationIntrospector0, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "proper/n-");
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, (Object) null);
      Class<Annotation> class0 = Annotation.class;
      Annotation annotation0 = beanPropertyWriter0.getAnnotation(class0);
      assertNull(annotation0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("A", (AnnotationIntrospector) null, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "Hc!mBV");
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, annotationMap0);
      SerializedString serializedString0 = beanPropertyWriter0.getSerializedName();
      assertEquals("A", serializedString0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("A", (AnnotationIntrospector) null, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, (String) null);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, annotationMap0);
      boolean boolean0 = beanPropertyWriter0.isRequired((AnnotationIntrospector) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("(thryxgD{reernc chan:", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, (AnnotationMap) null);
      JavaType javaType0 = TypeFactory.unknownType();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, (Annotations) null, javaType0, (JsonSerializer<?>) null, (TypeSerializer) null, javaType0, false, (Object) null);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        beanPropertyWriter0.depositSchemaProperty((ObjectNode) null, (SerializerProvider) defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.SerializerProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("vX4IN]h|;?EHdY(AVX4IN]h|;{EH:vX4IN]h|;?EH:Y(AVd4IN]h|;{EH:vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, (AnnotationMap) null);
      JavaType javaType0 = TypeFactory.unknownType();
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, (Annotations) null, javaType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, (TypeSerializer) null, javaType0, false, (Object) null);
      // Undeclared exception!
      try { 
        beanPropertyWriter0.depositSchemaProperty((ObjectNode) null, (SerializerProvider) defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("Y", annotationIntrospector0, true);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      PropertySerializerMap propertySerializerMap0 = PropertySerializerMap.emptyMap();
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      ObjectMapper objectMapper0 = new ObjectMapper();
      SerializationConfig serializationConfig0 = objectMapper0.getSerializationConfig();
      BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl1 = defaultSerializerProvider_Impl0.createInstance(serializationConfig0, beanSerializerFactory0);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, (TypeSerializer) null, javaType0, true, annotationMap0);
      Class<Field> class0 = Field.class;
      beanPropertyWriter0._findAndAddDynamic(propertySerializerMap0, class0, defaultSerializerProvider_Impl1);
      assertFalse(beanPropertyWriter0.hasNullSerializer());
      assertTrue(beanPropertyWriter0.hasSerializer());
      assertTrue(beanPropertyWriter0.willSuppressNulls());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("Y(A", (AnnotationIntrospector) null, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, (String) null);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, annotationMap0);
      BeanPropertyWriter beanPropertyWriter1 = beanPropertyWriter0.unwrappingWriter((NameTransformer) null);
      assertFalse(beanPropertyWriter1.hasSerializer());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("propewrty", annotationIntrospector0, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "S#CJfjx]cN");
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, (Object) null);
      Class<Annotation> class0 = Annotation.class;
      Annotation annotation0 = beanPropertyWriter0.getContextAnnotation(class0);
      assertNull(annotation0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("BP]?[@", annotationIntrospector0, false);
      JavaType javaType0 = TypeFactory.unknownType();
      BeanPropertyWriter beanPropertyWriter0 = null;
      try {
        beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, (AnnotatedMember) null, (Annotations) null, javaType0, (JsonSerializer<?>) null, (TypeSerializer) null, javaType0, false, javaType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(", static serializer of type ", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, (AnnotationMap) null);
      JavaType javaType0 = TypeFactory.unknownType();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, (Annotations) null, javaType0, (JsonSerializer<?>) null, (TypeSerializer) null, javaType0, true, javaType0);
      beanPropertyWriter0.setInternalSetting((Object) null, (Object) null);
      BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0);
      assertTrue(beanPropertyWriter1.willSuppressNulls());
      assertFalse(beanPropertyWriter1.isRequired());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:", annotationIntrospector0, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:");
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, (Object) null);
      NameTransformer nameTransformer0 = NameTransformer.simpleTransformer("vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:", "vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:");
      BeanPropertyWriter beanPropertyWriter1 = beanPropertyWriter0.rename(nameTransformer0);
      assertEquals("vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:", beanPropertyWriter1.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("v8yIN]h|;?EH:Y(AMX_IN'h|;{EH:", annotationIntrospector0, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "v8yIN]h|;?EH:Y(AMX_IN'h|;{EH:");
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, "v8yIN]h|;?EH:Y(AMX_IN'h|;{EH:");
      NameTransformer nameTransformer0 = NameTransformer.NOP;
      BeanPropertyWriter beanPropertyWriter1 = beanPropertyWriter0.rename(nameTransformer0);
      assertSame(beanPropertyWriter1, beanPropertyWriter0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("vX4IN]h|;?EHdY(AVX4IN]h|;{EH:vX4IN]h|;?EH:Y(AVd4IN]h|;{EH:vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, (AnnotationMap) null);
      JavaType javaType0 = TypeFactory.unknownType();
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, (Annotations) null, javaType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, (TypeSerializer) null, javaType0, false, pOJOPropertyBuilder0);
      beanPropertyWriter0.assignSerializer(defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);
      assertTrue(beanPropertyWriter0.hasSerializer());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("property", annotationIntrospector0, true);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "property");
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, true, asExternalTypeSerializer0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      beanPropertyWriter0.assignNullSerializer(defaultSerializerProvider_Impl0.DEFAULT_UNKNOWN_SERIALIZER);
      // Undeclared exception!
      try { 
        beanPropertyWriter0.assignNullSerializer(defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can not override null serializer
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("vX4IN]h|;?EHdY(AVX4INh|;{EH:vX4I]h|;?EH:Y(AVd4IN]h|;{EH:vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:", annotationIntrospector0, true);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, (AnnotationMap) null);
      JavaType javaType0 = TypeFactory.unknownType();
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, (Annotations) null, javaType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, (TypeSerializer) null, javaType0, true, pOJOPropertyBuilder0);
      beanPropertyWriter0.depositSchemaProperty((JsonObjectFormatVisitor) null);
      assertTrue(beanPropertyWriter0.hasSerializer());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("vX4IN]h|;?EHdY(AVX4IN]h|;{EH:vX4IN]h|;?EH:Y(AVd4IN]h|;{EH:vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, (AnnotationMap) null);
      JavaType javaType0 = TypeFactory.unknownType();
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, (Annotations) null, javaType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, (TypeSerializer) null, javaType0, false, pOJOPropertyBuilder0);
      JsonObjectFormatVisitor.Base jsonObjectFormatVisitor_Base0 = new JsonObjectFormatVisitor.Base(defaultSerializerProvider_Impl0);
      beanPropertyWriter0.depositSchemaProperty((JsonObjectFormatVisitor) jsonObjectFormatVisitor_Base0);
      assertTrue(beanPropertyWriter0.hasSerializer());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("Y(A", (AnnotationIntrospector) null, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, (String) null);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, annotationMap0);
      Class<DayOfWeek> class0 = DayOfWeek.class;
      beanPropertyWriter0.setInternalSetting(annotationMap0, class0);
      Object object0 = beanPropertyWriter0.getInternalSetting(class0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("property", annotationIntrospector0, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "property");
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, (Object) null);
      Object object0 = beanPropertyWriter0.getInternalSetting((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("property", annotationIntrospector0, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "property");
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, (Object) null);
      SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
      beanPropertyWriter0.setInternalSetting(serializedString0, pOJOPropertyBuilder0);
      Object object0 = beanPropertyWriter0.setInternalSetting((Object) null, annotationIntrospector0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:", annotationIntrospector0, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:");
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, (Object) null);
      Object object0 = beanPropertyWriter0.removeInternalSetting((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("Y(A", (AnnotationIntrospector) null, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, (String) null);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, annotationMap0);
      Class<DayOfWeek> class0 = DayOfWeek.class;
      beanPropertyWriter0.setInternalSetting(annotationMap0, class0);
      Object object0 = beanPropertyWriter0.removeInternalSetting((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("Hc!mBV", (AnnotationIntrospector) null, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, (String) null);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, annotationMap0);
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<DayOfWeek> class0 = DayOfWeek.class;
      ArrayType arrayType0 = typeFactory0.constructArrayType(class0);
      beanPropertyWriter0.setInternalSetting((Object) null, arrayType0);
      ArrayType arrayType1 = (ArrayType)beanPropertyWriter0.removeInternalSetting((Object) null);
      assertFalse(arrayType1.isCollectionLikeType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("Hc!mBV", (AnnotationIntrospector) null, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "XYL)c");
      Class<ArrayType> class0 = ArrayType.class;
      SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
      JsonSerializer<TypeIdResolver> jsonSerializer0 = (JsonSerializer<TypeIdResolver>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, simpleType0, jsonSerializer0, asExternalTypeSerializer0, simpleType0, true, simpleType0);
      boolean boolean0 = beanPropertyWriter0.hasSerializer();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("Y(A", (AnnotationIntrospector) null, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, (String) null);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, annotationMap0);
      JsonSerializer<Object> jsonSerializer0 = SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
      beanPropertyWriter0.assignNullSerializer(jsonSerializer0);
      boolean boolean0 = beanPropertyWriter0.hasNullSerializer();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("property", annotationIntrospector0, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "Q,>#6icJ,3");
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, (JavaType) null, false, (Object) null);
      Class<?> class0 = beanPropertyWriter0.getRawSerializationType();
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("BP]?[@", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, (AnnotationMap) null);
      JavaType javaType0 = TypeFactory.unknownType();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, (Annotations) null, javaType0, (JsonSerializer<?>) null, (TypeSerializer) null, javaType0, false, javaType0);
      // Undeclared exception!
      try { 
        beanPropertyWriter0.getPropertyType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("bQ|zwE`I}y4B%a", annotationIntrospector0, true);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "bQ|zwE`I}y4B%a");
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, (JavaType) null, defaultSerializerProvider_Impl0.DEFAULT_UNKNOWN_SERIALIZER, asExternalTypeSerializer0, (JavaType) null, true, annotationMap0);
      // Undeclared exception!
      try { 
        beanPropertyWriter0.depositSchemaProperty((ObjectNode) null, (SerializerProvider) defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(", static serializer of type ", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, (AnnotationMap) null);
      JavaType javaType0 = TypeFactory.unknownType();
      JsonSerializer<String> jsonSerializer0 = (JsonSerializer<String>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(jsonSerializer0).toString();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, (Annotations) null, javaType0, jsonSerializer0, (TypeSerializer) null, javaType0, false, pOJOPropertyBuilder0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        beanPropertyWriter0.depositSchemaProperty((ObjectNode) null, (SerializerProvider) defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      // Undeclared exception!
      try { 
        objectMapper0.valueToTree((Object) objectMapper0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/fasterxml/jackson/databind/JsonMappingException$Reference
         //
         verifyException("com.fasterxml.jackson.databind.ser.std.BeanSerializerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;
      ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_CONCRETE_AND_ARRAYS;
      objectMapper0.enableDefaultTyping(objectMapper_DefaultTyping0);
      try { 
        objectMapper0.valueToTree((Object) beanSerializerFactory0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No serializer found for class com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) ) (through reference chain: com.fasterxml.jackson.databind.ser.BeanSerializerFactory[\"factoryConfig\"])
         //
         verifyException("com.fasterxml.jackson.databind.ObjectMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("Y(OA", (AnnotationIntrospector) null, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, "Hc!mBV");
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, (Object) null);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      try { 
        beanPropertyWriter0.serializeAsPlaceholder((Object) null, (JsonGenerator) null, defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("pp3", (AnnotationIntrospector) null, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, (String) null);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, annotationMap0);
      JsonSerializer<Object> jsonSerializer0 = SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
      beanPropertyWriter0.assignNullSerializer(jsonSerializer0);
      ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);
      SerializerProvider serializerProvider0 = objectMapper0.getSerializerProvider();
      try { 
        beanPropertyWriter0.serializeAsPlaceholder((Object) null, (JsonGenerator) null, serializerProvider0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Null key for a Map not allowed in JSON (use a converting NullKeySerializer?)
         //
         verifyException("com.fasterxml.jackson.databind.ser.impl.FailingSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(", static serializer of type ", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, (AnnotationMap) null);
      JavaType javaType0 = TypeFactory.unknownType();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, (Annotations) null, javaType0, (JsonSerializer<?>) null, (TypeSerializer) null, javaType0, false, (Object) null);
      try { 
        beanPropertyWriter0.get(", static serializer of type ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("vX4IN]h|;?EHdY(AVX4IN]h|;{EH:vX4IN]h|;?EH:Y(AVd4IN]h|;{EH:vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, (AnnotationMap) null);
      JavaType javaType0 = TypeFactory.unknownType();
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, (Annotations) null, javaType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, (TypeSerializer) null, javaType0, false, pOJOPropertyBuilder0);
      try { 
        beanPropertyWriter0._handleSelfReference(pOJOPropertyBuilder0, defaultSerializerProvider_Impl0.DEFAULT_UNKNOWN_SERIALIZER);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Direct self-reference leading to cycle
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("Y(A", (AnnotationIntrospector) null, false);
      AnnotationMap annotationMap0 = new AnnotationMap();
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, annotationMap0);
      JavaType javaType0 = TypeFactory.unknownType();
      AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer((TypeIdResolver) null, (BeanProperty) null, (String) null);
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, annotationMap0, javaType0, (JsonSerializer<?>) null, asExternalTypeSerializer0, javaType0, false, annotationMap0);
      Object object0 = new Object();
      JsonSerializer<NamedType> jsonSerializer0 = (JsonSerializer<NamedType>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(jsonSerializer0).usesObjectId();
      beanPropertyWriter0._handleSelfReference(object0, jsonSerializer0);
      assertEquals("Y(A", beanPropertyWriter0.getName());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder("vX4IN]h|;?EHdY(AVX4IN]h|;{EH:vX4IN]h|;?EH:Y(AVd4IN]h|;{EH:vX4IN]h|;?EH:Y(AVX4IN]h|;{EH:", annotationIntrospector0, false);
      AnnotatedField annotatedField0 = new AnnotatedField((Field) null, (AnnotationMap) null);
      JavaType javaType0 = TypeFactory.unknownType();
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, annotatedField0, (Annotations) null, javaType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, (TypeSerializer) null, javaType0, false, pOJOPropertyBuilder0);
      // Undeclared exception!
      try { 
        beanPropertyWriter0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.ser.BeanPropertyWriter", e);
      }
  }
}
