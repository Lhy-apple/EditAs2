/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 17:45:36 GMT 2023
 */

package com.fasterxml.jackson.databind.node;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.json.UTF8JsonGenerator;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.ByteArrayBuilder;
import com.fasterxml.jackson.databind.node.DecimalNode;
import com.fasterxml.jackson.databind.node.IntNode;
import com.fasterxml.jackson.databind.node.NullNode;
import com.fasterxml.jackson.databind.node.POJONode;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.util.RawValue;
import java.io.OutputStream;
import java.net.Proxy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class POJONode_ESTest extends POJONode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      Object object0 = pOJONode0.getPojo();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = new Double((-5.905548288262448));
      POJONode pOJONode0 = new POJONode(double0);
      JsonToken jsonToken0 = pOJONode0.asToken();
      assertFalse(jsonToken0.isStructStart());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Proxy.Type proxy_Type0 = Proxy.Type.DIRECT;
      POJONode pOJONode0 = new POJONode(proxy_Type0);
      pOJONode0.hashCode();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      boolean boolean0 = pOJONode0.isBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      byte[] byteArray0 = pOJONode0.binaryValue();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      String string0 = pOJONode0.asText();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      String string0 = pOJONode0.asText();
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IntNode intNode0 = IntNode.valueOf(90);
      POJONode pOJONode0 = new POJONode(intNode0);
      String string0 = pOJONode0.asText("/IAmCC)!(");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      String string0 = pOJONode0.asText("null");
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      boolean boolean0 = pOJONode0.asBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      POJONode pOJONode0 = new POJONode(boolean0);
      boolean boolean1 = pOJONode0.asBoolean(false);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      boolean boolean0 = pOJONode0.asBoolean(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      int int0 = pOJONode0.asInt((-1175));
      assertEquals((-1175), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Float float0 = new Float(766.722737134);
      POJONode pOJONode0 = new POJONode(float0);
      int int0 = pOJONode0.asInt(0);
      assertEquals(766, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      long long0 = pOJONode0.asLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer(70);
      POJONode pOJONode0 = new POJONode(integer0);
      long long0 = pOJONode0.asLong((long) 70);
      assertEquals(70L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      double double0 = pOJONode0.asDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Double double0 = new Double(1.0);
      POJONode pOJONode0 = new POJONode(double0);
      double double1 = pOJONode0.asDouble((-1236.5));
      assertEquals(1.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NullNode nullNode0 = NullNode.instance;
      POJONode pOJONode0 = new POJONode(nullNode0);
      JsonFactory jsonFactory0 = new JsonFactory();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("JSON", true);
      JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((OutputStream) mockFileOutputStream0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      pOJONode0.serialize(jsonGenerator0, defaultSerializerProvider_Impl0);
      assertTrue(jsonGenerator0.canOmitFields());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
      ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
      UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-1969), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 1, true);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        pOJONode0.serialize(uTF8JsonGenerator0, defaultSerializerProvider_Impl0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      // Undeclared exception!
      try { 
        pOJONode0.serialize((JsonGenerator) null, defaultSerializerProvider_Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.databind.node.POJONode", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      boolean boolean0 = pOJONode0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NullNode nullNode0 = NullNode.instance;
      POJONode pOJONode0 = new POJONode(nullNode0);
      boolean boolean0 = pOJONode0.equals((Object) pOJONode0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object object0 = new Object();
      POJONode pOJONode0 = new POJONode(object0);
      boolean boolean0 = pOJONode0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DecimalNode decimalNode0 = DecimalNode.ZERO;
      POJONode pOJONode0 = new POJONode(decimalNode0);
      Float float0 = new Float((-1.0));
      POJONode pOJONode1 = new POJONode(float0);
      boolean boolean0 = pOJONode0.equals((Object) pOJONode1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      boolean boolean0 = pOJONode0._pojoEquals(pOJONode0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      POJONode pOJONode0 = new POJONode((Object) null);
      Long long0 = new Long(471L);
      POJONode pOJONode1 = new POJONode(long0);
      boolean boolean0 = pOJONode0._pojoEquals(pOJONode1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NullNode nullNode0 = NullNode.instance;
      POJONode pOJONode0 = new POJONode(nullNode0);
      String string0 = pOJONode0.toString();
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RawValue rawValue0 = new RawValue("gQ)HE>[YRq|");
      POJONode pOJONode0 = new POJONode(rawValue0);
      String string0 = pOJONode0.toString();
      assertEquals("(raw value '[RawValue of type `java.lang.String`]')", string0);
  }
}
