/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 17:49:12 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      parser0.getTreeBuilder();
      assertFalse(parser0.isTrackErrors());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("M|2", "_HGnv]:F`Zh5;)}-");
      assertEquals("_HGnv]:F`Zh5;)}-", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      assertFalse(parser0.isTrackErrors());
      
      parser0.setTrackErrors(3433);
      parser0.parseInput("<6HqIFIn", "<6HqIFIn");
      assertTrue(parser0.isTrackErrors());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("O.PrK`", "");
      assertEquals("", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser1 = parser0.setTreeBuilder(htmlTreeBuilder0);
      assertFalse(parser1.isTrackErrors());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      parser0.getErrors();
      assertFalse(parser0.isTrackErrors());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      parser0.parseInput("", "");
      assertFalse(parser0.isTrackErrors());
  }
}
