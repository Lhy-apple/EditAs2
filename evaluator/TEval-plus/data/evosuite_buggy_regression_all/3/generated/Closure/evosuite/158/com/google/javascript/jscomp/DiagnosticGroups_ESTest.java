/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 17:23:05 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.DiagnosticGroup;
import com.google.javascript.jscomp.DiagnosticGroups;
import com.google.javascript.jscomp.DiagnosticType;
import com.google.javascript.jscomp.PhaseOptimizer;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DiagnosticGroups_ESTest extends DiagnosticGroups_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DiagnosticType[] diagnosticTypeArray0 = new DiagnosticType[2];
      DiagnosticGroup diagnosticGroup0 = DiagnosticGroups.registerGroup("<^k,_RJH", diagnosticTypeArray0);
      assertNotNull(diagnosticGroup0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DiagnosticGroups diagnosticGroups0 = new DiagnosticGroups();
      Map<String, DiagnosticGroup> map0 = diagnosticGroups0.getRegisteredGroups();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DiagnosticGroups diagnosticGroups0 = new DiagnosticGroups();
      DiagnosticGroup diagnosticGroup0 = DiagnosticGroups.registerGroup("unknownDefines", diagnosticGroups0.GLOBAL_THIS);
      assertNotNull(diagnosticGroup0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        DiagnosticGroups.registerGroup("typeInvalidation", (DiagnosticGroup[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DiagnosticGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DiagnosticGroups diagnosticGroups0 = new DiagnosticGroups();
      CompilerOptions compilerOptions0 = new CompilerOptions();
      Stack<String> stack0 = new Stack<String>();
      diagnosticGroups0.setWarningLevels(compilerOptions0, stack0, compilerOptions0.checkProvides);
      assertFalse(compilerOptions0.decomposeExpressions);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DiagnosticGroups diagnosticGroups0 = new DiagnosticGroups();
      CompilerOptions compilerOptions0 = new CompilerOptions();
      List<String> list0 = PhaseOptimizer.OPTIMAL_ORDER;
      // Undeclared exception!
      try { 
        diagnosticGroups0.setWarningLevels(compilerOptions0, list0, compilerOptions0.reportMissingOverride);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // No warning class for name: removeUnreachableCode
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
