/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 17:18:52 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableBiMap;
import com.google.common.collect.ImmutableSortedMap;
import com.google.common.collect.Multimap;
import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.ConcreteType;
import com.google.javascript.jscomp.DisambiguateProperties;
import com.google.javascript.jscomp.TightenTypes;
import com.google.javascript.rhino.Node;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DisambiguateProperties_ESTest extends DisambiguateProperties_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      CheckLevel checkLevel0 = CheckLevel.WARNING;
      ImmutableSortedMap<String, CheckLevel> immutableSortedMap0 = ImmutableSortedMap.of("com.google.javascript.rhino.jstype.FunctionParamBuilder", checkLevel0, "prototype", checkLevel0, " instances of ", checkLevel0);
      // Undeclared exception!
      try { 
        DisambiguateProperties.forJSTypeSystem(compiler0, immutableSortedMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      CheckLevel checkLevel0 = CheckLevel.WARNING;
      compiler0.initCompilerOptionsIfTesting();
      TightenTypes tightenTypes0 = new TightenTypes(compiler0);
      ImmutableSortedMap<String, CheckLevel> immutableSortedMap0 = ImmutableSortedMap.of("com.google.javascript.rhino.jstype.FunctionParamBuilder", checkLevel0, "prototype", checkLevel0, " instances of ", checkLevel0);
      DisambiguateProperties<ConcreteType> disambiguateProperties0 = DisambiguateProperties.forConcreteTypeSystem(compiler0, tightenTypes0, immutableSortedMap0);
      disambiguateProperties0.renameProperties();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DisambiguateProperties.Warnings disambiguateProperties_Warnings0 = new DisambiguateProperties.Warnings();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      CheckLevel checkLevel0 = CheckLevel.WARNING;
      compiler0.initCompilerOptionsIfTesting();
      TightenTypes tightenTypes0 = new TightenTypes(compiler0);
      ImmutableSortedMap<String, CheckLevel> immutableSortedMap0 = ImmutableSortedMap.of("com.google.javascript.rhino.jstype.FunctionParamBuilder", checkLevel0, "prototype", checkLevel0, " instances of ", checkLevel0);
      ImmutableSortedMap<String, CheckLevel> immutableSortedMap1 = immutableSortedMap0.tailMap("prototype", false);
      DisambiguateProperties<ConcreteType> disambiguateProperties0 = DisambiguateProperties.forConcreteTypeSystem(compiler0, tightenTypes0, immutableSortedMap1);
      assertNotNull(disambiguateProperties0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      TightenTypes tightenTypes0 = new TightenTypes(compiler0);
      CheckLevel checkLevel0 = CheckLevel.WARNING;
      compiler0.initCompilerOptionsIfTesting();
      ImmutableBiMap<String, CheckLevel> immutableBiMap0 = ImmutableBiMap.of("TightenTypes pass appears to be stuck in an infinite loop.", checkLevel0);
      DisambiguateProperties<ConcreteType> disambiguateProperties0 = DisambiguateProperties.forConcreteTypeSystem(compiler0, tightenTypes0, immutableBiMap0);
      // Undeclared exception!
      try { 
        disambiguateProperties0.process((Node) null, (Node) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      TightenTypes tightenTypes0 = new TightenTypes(compiler0);
      CheckLevel checkLevel0 = CheckLevel.WARNING;
      compiler0.initCompilerOptionsIfTesting();
      ImmutableBiMap<String, CheckLevel> immutableBiMap0 = ImmutableBiMap.of("TightenTypes pass appears to be stuck in an infinite loop.", checkLevel0);
      DisambiguateProperties<ConcreteType> disambiguateProperties0 = DisambiguateProperties.forConcreteTypeSystem(compiler0, tightenTypes0, immutableBiMap0);
      Multimap<String, Collection<ConcreteType>> multimap0 = disambiguateProperties0.getRenamedTypesForTesting();
      assertNotNull(multimap0);
  }
}
