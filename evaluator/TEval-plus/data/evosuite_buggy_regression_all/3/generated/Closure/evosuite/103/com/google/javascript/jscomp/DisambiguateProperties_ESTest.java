/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 17:17:30 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.Multimap;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.ConcreteType;
import com.google.javascript.jscomp.DisambiguateProperties;
import com.google.javascript.jscomp.LinkedFlowScope;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.jscomp.TightenTypes;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.UnknownType;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DisambiguateProperties_ESTest extends DisambiguateProperties_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);
      Node node0 = new Node((-2035458213));
      Node node1 = compiler0.parseTestCode("com.google.javascript.jscomp.DisambiguateProperties$ConcreteTypeSystem");
      disambiguateProperties0.process(node0, node1);
      Multimap<String, Collection<JSType>> multimap0 = disambiguateProperties0.getRenamedTypesForTesting();
      assertNotNull(multimap0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      DisambiguateProperties<ConcreteType> disambiguateProperties0 = DisambiguateProperties.forConcreteTypeSystem(compiler0, (TightenTypes) null);
      Node node0 = Node.newString("", 455, 455);
      Node node1 = compiler0.parseTestCode("com.google.common.collect.ImmutableSet$ArrayImmutableSet");
      // Undeclared exception!
      try { 
        disambiguateProperties0.process(node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DisambiguateProperties$ConcreteTypeSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("nj=}cTD&7!fW#/M");
      DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);
      Scope scope0 = new Scope(node0, compiler0);
      LinkedFlowScope linkedFlowScope0 = LinkedFlowScope.createEntryLattice(scope0);
      JSType jSType0 = linkedFlowScope0.getTypeOfThis();
      UnknownType unknownType0 = (UnknownType)disambiguateProperties0.getTypeWithProperty("nj=}cTD&7!fW#/M", jSType0);
      assertFalse(unknownType0.isOrdinaryFunction());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);
      Node node0 = new Node(1);
      Node node1 = compiler0.parseTestCode("com.google.javascript.jscomp.DisambiguateProperties$ConcreteTypeSystem");
      node0.addChildToFront(node1);
      disambiguateProperties0.process(node1, node0);
      assertEquals(1, Node.SPECIALCALL_EVAL);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);
      Multimap<String, Collection<JSType>> multimap0 = disambiguateProperties0.getRenamedTypesForTesting();
      assertNotNull(multimap0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
      DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);
      Node node0 = new Node((-1743943139));
      Node node1 = compiler0.parseTestCode("com.google.javascript.jscomp.TypedScopeCreator");
      jSTypeRegistry0.resetForTypeCheck();
      disambiguateProperties0.process(node1, node0);
      assertEquals(1, Node.SPECIALCALL_EVAL);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_NUMBER_STRING;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);
      JSType jSType1 = disambiguateProperties0.getTypeWithProperty("Not declared as a constructor", jSType0);
      assertNull(jSType1);
  }
}
