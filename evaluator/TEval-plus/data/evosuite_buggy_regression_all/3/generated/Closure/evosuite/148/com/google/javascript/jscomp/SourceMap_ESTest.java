/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 17:21:59 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Position;
import com.google.javascript.jscomp.SourceMap;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SourceMap_ESTest extends SourceMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SourceMap.Mapping sourceMap_Mapping0 = new SourceMap.Mapping();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SourceMap sourceMap0 = new SourceMap();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("com.google.javascript.rhino.SimpleErrorReporter");
      // Undeclared exception!
      try { 
        sourceMap0.appendTo(mockPrintWriter0, "com.google.javascript.rhino.SimpleErrorReporter");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SourceMap sourceMap0 = new SourceMap();
      sourceMap0.setStartingPosition(1030, 2868);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SourceMap sourceMap0 = new SourceMap();
      sourceMap0.reset();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SourceMap sourceMap0 = new SourceMap();
      Node node0 = Node.newNumber(1893.0991977044);
      sourceMap0.addMapping(node0, (Position) null, (Position) null);
      assertFalse(node0.hasMoreThanOneChild());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SourceMap sourceMap0 = new SourceMap();
      sourceMap0.setWrapperPrefix("[]\n");
  }
}
