/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 17:14:00 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.RenameLabels;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RenameLabels_ESTest extends RenameLabels_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Node node0 = Node.newString("a");
      Node node1 = new Node(126, node0, 3644, 43);
      node0.addChildrenToFront(node1);
      Compiler compiler0 = new Compiler();
      RenameLabels renameLabels0 = new RenameLabels(compiler0);
      // Undeclared exception!
      try { 
        renameLabels0.process(node0, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // null
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);
      Node node0 = Node.newString("a");
      Node node1 = new Node(116, node0, 28, 0);
      renameLabels0.process(node0, node1);
      assertEquals(22, Node.TARGETBLOCK_PROP);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);
      Node node0 = Node.newString((-2526), "", 125, (-3098));
      Node node1 = new Node(117, node0, 19, 50);
      // Undeclared exception!
      try { 
        renameLabels0.process(node0, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);
      Node node0 = Node.newString(117, "a", (-259), (-4734));
      renameLabels0.process(node0, node0);
      assertEquals(4, Node.DESCENDANTS_FLAG);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Node node0 = Node.newString("a");
      Node node1 = new Node(126, node0, 116, 21);
      Compiler compiler0 = new Compiler();
      RenameLabels renameLabels0 = new RenameLabels(compiler0);
      Node node2 = new Node(31, node1, 4, 16);
      renameLabels0.process(node0, node2);
      assertEquals(0, node1.getChildCount());
      assertEquals(21, node0.getCharno());
  }
}
