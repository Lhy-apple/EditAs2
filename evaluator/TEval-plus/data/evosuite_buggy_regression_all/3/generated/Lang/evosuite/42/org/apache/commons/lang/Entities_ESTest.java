/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 18:01:43 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities entities0 = new Entities();
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      entities0.map = (Entities.EntityMap) entities_HashEntityMap0;
      String string0 = entities0.escape("uic[yl]kVTQn8rNyP");
      assertEquals("uic[yl]kVTQn8rNyP", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.escape("gd?Y'X>&so ");
      assertEquals("gd?Y&apos;X&gt;&amp;so ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.size = 2162;
      // Undeclared exception!
      try { 
        entities_ArrayEntityMap0.name(2162);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 100
         //
         verifyException("org.apache.commons.lang.Entities$ArrayEntityMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      Entities.fillWithHtml40Entities(entities0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      entities_TreeEntityMap0.add("uic[ylVTQn8NyP", 103);
      int int0 = entities_TreeEntityMap0.value("uic[ylVTQn8NyP");
      assertEquals(103, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("g&gd?YX>&so ;?YX&gt;&amp;so ");
      assertEquals("g&gd?YX>&so ;?YX>&so ", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      int int0 = entities_TreeEntityMap0.value("uic[yl]VTQn8rNyP");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities.LookupEntityMap entities_LookupEntityMap0 = new Entities.LookupEntityMap();
      String string0 = entities_LookupEntityMap0.name(817);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(148);
      String string0 = entities_ArrayEntityMap0.name(148);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("1_hX2slX!,/ZUwc>k", 254);
      String string0 = entities_ArrayEntityMap0.name(254);
      assertEquals("1_hX2slX!,/ZUwc>k", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(148);
      int int0 = entities_ArrayEntityMap0.value((String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Entities entities0 = Entities.XML;
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities0.XML.map = (Entities.EntityMap) entities_ArrayEntityMap0;
      Entities.fillWithHtml40Entities(entities0);
      String string0 = entities0.unescape("gd?YX&gt;&amp;so ");
      assertEquals("gd?YX>&so ", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(2);
      entities_BinaryEntityMap0.add("uic[yl]VTQn8rNyP", 2);
      String string0 = entities_BinaryEntityMap0.name((-21));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(129);
      entities_BinaryEntityMap0.add("", (-1486));
      entities_BinaryEntityMap0.add("", 129);
      entities_BinaryEntityMap0.add("376", 129);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(2);
      entities_BinaryEntityMap0.add("uic[yl]VTQn8rNP", 2);
      String string0 = entities_BinaryEntityMap0.name(2);
      assertEquals("uic[yl]VTQn8rNP", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("uic[yl]VTQn8rNyP");
      assertEquals("uic[yl]VTQn8rNyP", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.XML.unescape((Writer) stringWriter0, "ic[yl]a&TQn8rNyP");
      assertEquals("ic[yl]a&TQn8rNyP", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter();
      entities0.HTML32.unescape((Writer) stringWriter0, "2_<e:y>6./E1t=G'");
      assertEquals("2_<e:y>6./E1t=G'", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("T_Hu-KRZ(&;qy_,Qd");
      assertEquals("T_Hu-KRZ(&;qy_,Qd", string0);
  }
}
