/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 18:14:59 GMT 2023
 */

package org.mockito.internal.matchers;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.hamcrest.Description;
import org.hamcrest.text.IsEmptyString;
import org.junit.runner.RunWith;
import org.mockito.internal.matchers.Same;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Same_ESTest extends Same_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Same same0 = new Same("org.hamcrest.number.BigDecimalCloseTo");
      IsEmptyString isEmptyString0 = new IsEmptyString();
      boolean boolean0 = same0.matches(isEmptyString0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Same same0 = new Same(locale_Category0);
      boolean boolean0 = same0.matches(locale_Category0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Character character0 = Character.valueOf(':');
      Same same0 = new Same(character0);
      String string0 = same0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Same same0 = new Same("CL5<]|IE");
      Description.NullDescription description_NullDescription0 = new Description.NullDescription();
      same0.describeTo(description_NullDescription0);
      assertEquals("", description_NullDescription0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Same same0 = new Same(locale_Category0);
      String string0 = same0.toString();
      assertNotNull(string0);
  }
}
