/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 17:28:42 GMT 2023
 */

package org.apache.commons.compress.archivers.sevenz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import org.apache.commons.compress.archivers.ArchiveEntry;
import org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry;
import org.apache.commons.compress.archivers.sevenz.SevenZMethod;
import org.apache.commons.compress.archivers.sevenz.SevenZOutputFile;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SevenZOutputFile_ESTest extends SevenZOutputFile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.compress.archiver1.sevenz.Seve@ZOutpitFile$1");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        sevenZOutputFile0.write(byteArray0, (int) (byte)60, 15);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.tukaani.xz.LZMA2OutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("BKTS", "BKTS");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      SevenZMethod sevenZMethod0 = SevenZMethod.AES256SHA256;
      sevenZOutputFile0.setContentCompression(sevenZMethod0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("B?oU)Co4]S_EsG");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      // Undeclared exception!
      try { 
        sevenZOutputFile0.write((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZOutputFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      File file0 = MockFile.createTempFile("ZZ.K$|u4", "ZZ.K$|u4");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(file0);
      sevenZOutputFile0.close();
      sevenZOutputFile0.close();
      assertEquals(44L, file0.length());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("B7$o5)CoS_~sG", "B7$o5)CoS_~sG");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      sevenZOutputFile0.putArchiveEntry((ArchiveEntry) null);
      // Undeclared exception!
      try { 
        sevenZOutputFile0.closeArchiveEntry();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZOutputFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("B7$o5)CoS_~sG", "B7$o5)CoS_~sG");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      sevenZOutputFile0.write((-880));
      sevenZOutputFile0.putArchiveEntry((ArchiveEntry) null);
      // Undeclared exception!
      try { 
        sevenZOutputFile0.closeArchiveEntry();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZOutputFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      File file0 = MockFile.createTempFile("ZZ.$|u4", "ZZ.$|u4");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(file0);
      byte[] byteArray0 = new byte[1];
      sevenZOutputFile0.write(byteArray0, (int) (byte) (-3), (int) (byte) (-3));
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("B7?o)CoS_EsG");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      sevenZOutputFile0.finish();
      try { 
        sevenZOutputFile0.finish();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // This archive has already been finished
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZOutputFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("ZZ.$|u4", "ZZ.$|u4");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      sevenZOutputFile0.write((-2130836486));
      sevenZOutputFile0.write((-2178));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.compress.archiver1.sevenz.Seve@ZOutpitFile$1", "org.apache.commons.compress.archiver1.sevenz.Seve@ZOutpitFile$1");
      SevenZArchiveEntry sevenZArchiveEntry0 = new SevenZArchiveEntry();
      sevenZArchiveEntry0.setHasStream(true);
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      // Undeclared exception!
      try { 
        sevenZOutputFile0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZOutputFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      SevenZArchiveEntry sevenZArchiveEntry0 = sevenZOutputFile0.createArchiveEntry(mockFile0, "");
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      try { 
        sevenZOutputFile0.close();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      SevenZArchiveEntry sevenZArchiveEntry0 = new SevenZArchiveEntry();
      sevenZArchiveEntry0.setAntiItem(true);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      // Undeclared exception!
      try { 
        sevenZOutputFile0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZOutputFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("@gxiy%%g4/9b?dv}");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      SevenZArchiveEntry sevenZArchiveEntry0 = new SevenZArchiveEntry();
      sevenZArchiveEntry0.setHasCreationDate(true);
      sevenZArchiveEntry0.setName("@gxiy%%g4/9b?dv}");
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.close();
      assertEquals(96L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("@gxiy%%g4/9b?dv}");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      SevenZArchiveEntry sevenZArchiveEntry0 = new SevenZArchiveEntry();
      sevenZArchiveEntry0.setHasCreationDate(true);
      sevenZArchiveEntry0.setName("@gxiy%%g4/9b?dv}");
      SevenZArchiveEntry sevenZArchiveEntry1 = sevenZOutputFile0.createArchiveEntry(mockFile0, "");
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry1);
      sevenZOutputFile0.close();
      assertEquals(112L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("!#YY/D{rI_<RXV*M>D", "!#YY/D{rI_<RXV*M>D");
      SevenZArchiveEntry sevenZArchiveEntry0 = new SevenZArchiveEntry();
      sevenZArchiveEntry0.setName("!#YY/D{rI_<RXV*M>D");
      MockDate mockDate0 = new MockDate((-3103L));
      sevenZArchiveEntry0.setAccessDate((Date) mockDate0);
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.close();
      assertEquals(100L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("@gxiy%%g4/9b?dv}");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      SevenZArchiveEntry sevenZArchiveEntry0 = new SevenZArchiveEntry();
      sevenZArchiveEntry0.setName("@gxiy%%g4/9b?dv}");
      sevenZArchiveEntry0.setHasAccessDate(true);
      SevenZArchiveEntry sevenZArchiveEntry1 = sevenZOutputFile0.createArchiveEntry(mockFile0, "");
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry1);
      sevenZOutputFile0.close();
      assertEquals(112L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.compress.archiver1.sevenz.Seve@ZOutpi<File$1");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      SevenZArchiveEntry sevenZArchiveEntry0 = sevenZOutputFile0.createArchiveEntry(mockFile0, "org.apache.commons.compress.archiver1.sevenz.Seve@ZOutpi<File$1");
      sevenZArchiveEntry0.setHasWindowsAttributes(true);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.close();
      assertEquals(199L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      File file0 = MockFile.createTempFile("ZZ.K$|u4", "ZZ.K$|u4");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(file0);
      SevenZArchiveEntry sevenZArchiveEntry0 = sevenZOutputFile0.createArchiveEntry(file0, "ZZ.K$|u4");
      SevenZArchiveEntry sevenZArchiveEntry1 = sevenZOutputFile0.createArchiveEntry(file0, "LZO");
      sevenZArchiveEntry1.setHasWindowsAttributes(true);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry1);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.close();
      assertEquals(105L, file0.length());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile("B?oU)Co4]S_EsG");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      SevenZArchiveEntry sevenZArchiveEntry0 = new SevenZArchiveEntry();
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      // Undeclared exception!
      try { 
        sevenZOutputFile0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZOutputFile", e);
      }
  }
}
