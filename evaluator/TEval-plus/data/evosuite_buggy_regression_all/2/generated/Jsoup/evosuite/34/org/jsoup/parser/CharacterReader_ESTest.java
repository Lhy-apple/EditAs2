/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 15:09:19 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("W");
      characterReader0.rewindToMark();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("W");
      characterReader0.mark();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("AR-fojl@ke/@jBp");
      String string0 = characterReader0.toString();
      assertEquals("AR-fojl@ke/@jBp", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("40Uznx_yM_x");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("W");
      char char0 = characterReader0.consume();
      assertEquals('W', char0);
      
      characterReader0.unconsume();
      boolean boolean0 = characterReader0.containsIgnoreCase("W");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("W");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("W", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("`@fK)S");
      char char0 = characterReader0.current();
      assertEquals('`', char0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("~NvU7$>DE|,*hLM");
      String string0 = characterReader0.consumeTo('.');
      assertEquals("~NvU7$>DE|,*hLM", string0);
      
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("T");
      characterReader0.advance();
      char char0 = characterReader0.consume();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      String string0 = characterReader0.consumeTo('.');
      assertEquals("org", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("n2B>6n2RM6ZkP");
      boolean boolean0 = characterReader0.containsIgnoreCase("n2B>6n2RM6ZkP");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("/q)QO6gX$hZ'CNG");
      String string0 = characterReader0.consumeTo("/q)QO6gX$hZ'CNG");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("~NvU7$>DE|,*hLM");
      char[] charArray0 = new char[7];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("~NvU7$>DE|,*hLM", string0);
      
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("WlhW3jV");
      char[] charArray0 = new char[3];
      charArray0[2] = 'j';
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("WlhW3", string0);
      
      characterReader0.unconsume();
      String string1 = characterReader0.consumeHexSequence();
      assertEquals("3", string1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F|h7P");
      char[] charArray0 = new char[9];
      charArray0[1] = 'F';
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("~NvU7$>DE|,*hLM");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("WlhW3jV");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("WlhW", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("org", string0);
      
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F|h7P");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("F", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("40Uznx_yM_x");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("40", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("/q)QO6gX$hZ'CNG");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ay");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("eYYg^]S");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("e", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("/q)QO6gX$hZ'CNG");
      String string0 = characterReader0.consumeTo("V`GrhU");
      assertEquals("/q)QO6gX$hZ'CNG", string0);
      
      String string1 = characterReader0.consumeDigitSequence();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("W");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("7\"\"F)");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("7", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("/q)QO6gX$hZ'CNG");
      String string0 = characterReader0.consumeTo("V`GrhU");
      assertEquals("/q)QO6gX$hZ'CNG", string0);
      
      boolean boolean0 = characterReader0.matches('');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F|h7P");
      boolean boolean0 = characterReader0.matches('F');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F|h7P");
      char char0 = characterReader0.consume();
      assertEquals('F', char0);
      
      boolean boolean0 = characterReader0.matches('F');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ay");
      boolean boolean0 = characterReader0.matchConsume("org.jsoup.helper.Validate");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F|h7P");
      boolean boolean0 = characterReader0.matchConsume("|h7P");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("`@fK)S");
      boolean boolean0 = characterReader0.matchConsume("`@fK)S");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F|h7P");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("F");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("W");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("%S`ZMQecqFM:~");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F|h7P");
      char char0 = characterReader0.consume();
      assertEquals('F', char0);
      
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F|h7P");
      char[] charArray0 = new char[9];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("MH'3#eB((CBk@yVp1&%");
      char[] charArray0 = new char[2];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("MH'3#eB((CBk@yVp1&%", string0);
      
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F|h7P");
      char[] charArray0 = new char[9];
      charArray0[1] = 'F';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F|h7P");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("AR-fojl@ke/@jBp");
      String string0 = characterReader0.consumeTo('.');
      assertEquals("AR-fojl@ke/@jBp", string0);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(";gh^]*R8e_6\"+");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F|h7P");
      char char0 = characterReader0.consume();
      assertEquals('F', char0);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("40Uznx_yM_x");
      char char0 = characterReader0.consume();
      assertEquals('4', char0);
      
      characterReader0.advance();
      String string0 = characterReader0.consumeAsString();
      assertEquals("U", string0);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ay");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("40Uznx_yM_x");
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      boolean boolean0 = characterReader0.containsIgnoreCase("org");
      assertTrue(boolean0);
  }
}
