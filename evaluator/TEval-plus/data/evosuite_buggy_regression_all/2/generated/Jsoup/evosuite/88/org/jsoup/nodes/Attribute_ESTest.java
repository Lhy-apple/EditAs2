/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 15:15:13 GMT 2023
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.CharArrayWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attribute_ESTest extends Attribute_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attribute attribute0 = new Attribute("C(d5l", "");
      String string0 = attribute0.toString();
      assertEquals("C(d5l=\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("&=J", "&=J");
      Attribute attribute1 = new Attribute("&=J", (String) null);
      boolean boolean0 = attribute1.equals(attribute0);
      assertFalse(boolean0);
      assertTrue(attribute0.equals((Object)attribute1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attribute attribute0 = new Attribute("3H}fH[s7<*9P3Gyp90", "3H}fH[s7<*9P3Gyp90");
      Attributes attributes0 = new Attributes();
      attributes0.put(attribute0);
      attribute0.setKey("3H}fH[s7<*9P3Gyp90");
      assertEquals("3H}fH[s7<*9P3Gyp90", attribute0.getKey());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attribute attribute0 = new Attribute("(=mg4v=S_", "(=mg4v=S_");
      boolean boolean0 = attribute0.isDataAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attribute attribute0 = new Attribute("&_t62[7t", (String) null);
      Attribute attribute1 = attribute0.clone();
      boolean boolean0 = attribute1.equals(attribute0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attribute attribute0 = new Attribute("E)OO8&Y", "E)OO8&Y");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      boolean boolean0 = attribute0.shouldCollapseAttribute(document_OutputSettings0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attribute attribute0 = new Attribute("V m", "V m");
      attribute0.setKey("V m");
      assertEquals("V m", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("BJh-PM:F`4}sN", "BJh-PM:F`4}sN", attributes0);
      attribute0.setKey("BJh-PM:F`4}sN");
      assertEquals("BJh-PM:F`4}sN", attribute0.getKey());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute(";Y J=AuT*e3", ";Y J=AuT*e3", attributes0);
      String string0 = attribute0.setValue(";Y J=AuT*e3");
      assertEquals(";Y J=AuT*e3", attribute0.getValue());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase(";Y J=AuT*e3", ";Y J=AuT*e3");
      Attribute attribute0 = new Attribute(";Y J=AuT*e3", ";Y J=AuT*e3", attributes0);
      String string0 = attribute0.setValue(";Y J=AuT*e3");
      assertEquals(";Y J=AuT*e3", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attribute attribute0 = new Attribute("seamless", "seamless");
      String string0 = attribute0.toString();
      assertEquals("seamless", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = Attribute.isDataAttribute("data-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = Attribute.isDataAttribute("data-25j1kS?d,}Q;V 3{=");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Attribute attribute0 = new Attribute("c1S1%;!oUTj]", "c1S1%;!oUTj]");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(29);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      attribute0.html((Appendable) charArrayWriter0, document_OutputSettings1);
      assertEquals(29, charArrayWriter0.size());
      assertEquals("c1S1%;!oUTj]=\"c1S1%;!oUTj]\"", charArrayWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attribute attribute0 = new Attribute("3H}fH[s7<*9P3Gyp90", (String) null);
      String string0 = attribute0.toString();
      assertEquals("3H}fH[s7<*9P3Gyp90", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("*\"kLGCH", "muted");
      String string0 = attribute0.toString();
      assertEquals("*\"kLGCH=\"muted\"", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attribute attribute0 = new Attribute("compact", "compact");
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attribute attribute0 = new Attribute("*PAz=rq~Fp~\"np/upJP", (String) null);
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attribute attribute0 = new Attribute("3H}fH[s7<*9P3Gyp90", "3H}fH[s7<*9P3Gyp90");
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attribute attribute0 = new Attribute("(=mgv=S_", "(=mgv=S_");
      boolean boolean0 = attribute0.equals(attribute0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attribute attribute0 = new Attribute("6Z!B", "6Z!B");
      boolean boolean0 = attribute0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attribute attribute0 = new Attribute("E)OO8&Y", "E)OO8&Y");
      boolean boolean0 = attribute0.equals("E)OO8&Y");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("(=mgv=S_", "(=mgv=S_");
      Attribute attribute1 = new Attribute("MBqbipPM\"x4;#t(.B-L", "MBqbipPM\"x4;#t(.B-L");
      boolean boolean0 = attribute0.equals(attribute1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("c1S1%;!oUTj]", "c1S1%;!oUTj]");
      Attribute attribute1 = attribute0.clone();
      boolean boolean0 = attribute0.equals(attribute1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attribute attribute0 = new Attribute("C(d5l", "");
      attribute0.hashCode();
      assertEquals("", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attribute attribute0 = new Attribute("HO'5", (String) null);
      attribute0.hashCode();
  }
}
