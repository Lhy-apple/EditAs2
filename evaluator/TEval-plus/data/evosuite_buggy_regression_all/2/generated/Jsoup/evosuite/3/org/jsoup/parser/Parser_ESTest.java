/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 15:08:13 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<?", "<?");
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<![CDATA[", "<![CDATA[");
      assertEquals("#document", document0.nodeName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Document document0 = Parser.parse("<<!--%s-->>\n</<!--%s-->>\n<html>\n<head>\n <title>hG?_&lt;t &gt;=D 2</title>\n</head>\n<body>\n hG?_<t>\n </t>\n</body>\n</html>", "hG?_<t >=D 2");
      assertEquals("hG?_<t >=D 2", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Document document0 = Parser.parse("<!", "<!");
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<!--", "<!--");
      assertFalse(document0.isBlock());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("]x<e/>", "]x<e/>");
      assertFalse(document0.isBlock());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("hG?_<t >=D 2", "hG?_<t >=D 2");
      assertFalse(document0.isBlock());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<html>\n<head>\n</head>\n<body>\n 5<ofqf g-3s=\"\">\n </ofqf>\n</body>\n</html>", "<html>\n<head>\n</head>\n<body>\n 5<ofqf g-3s=\"\">\n </ofqf>\n</body>\n</html>");
      assertEquals("#document", document0.nodeName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Document document0 = Parser.parse("h$G?<t >=> 2", "h$G?<t >=> 2");
      assertFalse(document0.isBlock());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Document document0 = Parser.parse("7hG?<t 7=$Dro", "7hG?<t 7=$Dro");
      assertEquals("#document", document0.nodeName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6Q</m-&", "6Q</m-&");
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<5<ofqf?g-3s>\n</5<ofqf?g-3s>\n<html>\n<head>\n</head>\n<body>\n</body>\n</html>", "<5<ofqf?g-3s>\n</5<ofqf?g-3s>\n<html>\n<head>\n</head>\n<body>\n</body>\n</html>");
      assertEquals("#document", document0.nodeName());
  }
}
