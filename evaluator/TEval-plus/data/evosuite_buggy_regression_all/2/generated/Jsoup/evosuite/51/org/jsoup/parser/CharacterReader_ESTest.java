/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 15:11:52 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8wC8#75;YDxf");
      characterReader0.mark();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("|  ");
      characterReader0.advance();
      String string0 = characterReader0.consumeTagName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("mYpd&g%\r<C");
      String string0 = characterReader0.toString();
      assertEquals("mYpd&g%\r<C", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("!");
      String string0 = characterReader0.consumeData();
      assertEquals("!", string0);
      
      String string1 = characterReader0.consumeTo("!");
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("a?c.:_>w;8XM#3q");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("|  ");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.advance();
      String string0 = characterReader0.consumeData();
      assertEquals("  ", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("K80`");
      characterReader0.consumeTagName();
      boolean boolean0 = characterReader0.matches('t');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("K80`");
      char char0 = characterReader0.current();
      assertEquals('K', char0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char char0 = characterReader0.consume();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("rJ#Y-.OR@#,mHTy_");
      String string0 = characterReader0.consumeTo(';');
      assertEquals("rJ#Y-.OR@#,mHTy_", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      String string0 = characterReader0.consumeTo('o');
      assertEquals("Object must n", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("!");
      boolean boolean0 = characterReader0.containsIgnoreCase("!");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("YR!");
      boolean boolean0 = characterReader0.containsIgnoreCase("YR!");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8wC8#75;YDxf");
      boolean boolean0 = characterReader0.containsIgnoreCase("8wC8#75;YDxf");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must be false");
      String string0 = characterReader0.consumeTo("Must be false");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char[] charArray0 = new char[0];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      char[] charArray0 = new char[1];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("Array must not contain any null objects", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      char[] charArray0 = new char[1];
      charArray0[0] = 's';
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("Array mu", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char[] charArray0 = new char[0];
      String string0 = characterReader0.consumeToAnySorted(charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(":W4(boT!0;>>*[9");
      char[] charArray0 = new char[1];
      String string0 = characterReader0.consumeToAnySorted(charArray0);
      assertEquals(":W4(boT!0;>>*[9", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(":W4(boT!0;>>*[9");
      char[] charArray0 = new char[1];
      charArray0[0] = '*';
      String string0 = characterReader0.consumeToAnySorted(charArray0);
      assertEquals(":W4(boT!0;>>", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("&9#9+{:nS,Zr");
      String string0 = characterReader0.consumeData();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<q");
      String string0 = characterReader0.consumeData();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("|  ");
      String string0 = characterReader0.consumeTagName();
      assertEquals("|", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("A/vi3j&ctzivs,");
      String string0 = characterReader0.consumeTagName();
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("6>Fx&IJa`=gZ");
      String string0 = characterReader0.consumeTagName();
      assertEquals("6", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("Object", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("}nm9AC9c");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must b9 true");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("Must", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("a9RYYK~");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("a9", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("K80`");
      String string0 = characterReader0.consumeTagName();
      assertEquals("K80`", string0);
      
      String string1 = characterReader0.consumeHexSequence();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("org", string0);
      
      String string1 = characterReader0.consumeHexSequence();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("6beZ{st noE enull");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("6be", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("6bjeZ ust noE enull");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("6", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("!");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("mYpd&g%`rAPC");
      boolean boolean0 = characterReader0.matches('m');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("rJ#Y-.OR@#,mHTy_");
      boolean boolean0 = characterReader0.matches(';');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("K80`");
      String string0 = characterReader0.consumeTagName();
      assertEquals("K80`", string0);
      
      boolean boolean0 = characterReader0.matches("K80`");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must.b3 true");
      boolean boolean0 = characterReader0.matchConsume("|2!A");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("V7UD#KcoboI");
      boolean boolean0 = characterReader0.matchConsume("V7UD#KcoboI");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9h!va%'v+(.7!iq6j");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("(>");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("K80`");
      String string0 = characterReader0.consumeTagName();
      assertEquals("K80`", string0);
      
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("K80`");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8wC8#75;YDxf");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("8wC8#75;YDxf");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("G$?BDiRpF-]o");
      char[] charArray0 = new char[9];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char[] charArray0 = new char[2];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("G$?BDiRpF-]o");
      String string0 = characterReader0.consumeAsString();
      assertEquals("G", string0);
      
      char[] charArray0 = new char[9];
      charArray0[8] = '$';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("K80`");
      characterReader0.consumeTagName();
      char[] charArray0 = new char[2];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("mYpd&g%`rAPC");
      char[] charArray0 = new char[5];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("mYpd&g%`rAPC");
      char char0 = characterReader0.consume();
      assertEquals('m', char0);
      
      characterReader0.unconsume();
      char[] charArray0 = new char[5];
      charArray0[2] = 'm';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("K80`");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("K80`");
      String string0 = characterReader0.consumeTagName();
      assertEquals("K80`", string0);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8wC8#75;YDxf");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("r=`IiG\"H1Xh");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("p");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(";77D#VKcoboI");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("\"(]l");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(";77D#VKcoboI");
      String string0 = characterReader0.consumeAsString();
      assertEquals(";", string0);
      
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HlFQ`0K#");
      String string0 = characterReader0.consumeTagName();
      assertEquals("HlFQ`0K#", string0);
      
      characterReader0.rewindToMark();
      String string1 = characterReader0.consumeData();
      assertEquals("HlFQ`0K#", string1);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("YR!");
      boolean boolean0 = characterReader0.rangeEquals(1, 4, "Q.bl");
      assertFalse(boolean0);
  }
}
