/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 14:41:34 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JsAst;
import com.google.javascript.jscomp.SourceFile;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JsAst_ESTest extends JsAst_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SourceFile sourceFile0 = SourceFile.fromFile("#oy1E1C6]*.Ht)W");
      JsAst jsAst0 = new JsAst(sourceFile0);
      jsAst0.clearAst();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SourceFile sourceFile0 = SourceFile.fromFile("#oy1E1C6]*.Ht)W");
      JsAst jsAst0 = new JsAst(sourceFile0);
      jsAst0.setSourceFile(sourceFile0);
      assertFalse(sourceFile0.isExtern());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SourceFile sourceFile0 = SourceFile.fromFile("#o~mE1~6]*.HtW");
      JsAst jsAst0 = new JsAst(sourceFile0);
      JsAst jsAst1 = new JsAst(sourceFile0);
      Compiler compiler0 = new Compiler();
      compiler0.parseTestCode("jDBdW");
      jsAst1.getAstRoot(compiler0);
      jsAst1.getAstRoot(compiler0);
      assertTrue(compiler0.hasErrors());
      assertEquals(1, compiler0.getErrorCount());
  }
}
