/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 14:32:30 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.CodeConsumer;
import com.google.javascript.jscomp.CodeGenerator;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.PrintStreamErrorManager;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import java.io.ByteArrayOutputStream;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CodeGenerator_ESTest extends CodeGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.jscomp.ObjectPropertyStringPreprocess");
      Compiler compiler0 = new Compiler();
      Node node1 = new Node(30, node0, node0, node0, node0);
      String string0 = compiler0.toSource(node1);
      assertEquals("new \"com.google.javascript.jscomp.ObjectPropertyStringPreprocess\"", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = Node.newString("\t=\u000Bl\r \u0085w\u1680\u2028\u2029\u205FO");
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node0);
      assertEquals("\"\\t=\\u000bl\\r \\u0085w\\u1680\\u2028\\u2029\\u205fO\"", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.jscomp.ObjectPropertyStringPreprocess");
      Compiler compiler0 = new Compiler();
      Node node1 = new Node(30, node0, node0, node0, node0);
      node1.addChildrenToBack(node1);
      // Undeclared exception!
      compiler0.toSource(node1);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      // Undeclared exception!
      try { 
        codeGenerator0.tagAsStrict();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("usd=oey");
      String string0 = compiler0.toSource(node0);
      assertEquals("usd=oey", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = CodeGenerator.escapeToDoubleQuotedJsString("");
      assertEquals("\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = Node.newString(111, "+ML;c'(T1-L#p");
      Node node1 = new Node(112, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      Node node0 = Node.newString("goog");
      // Undeclared exception!
      try { 
        codeGenerator0.addList(node0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("com.google.javascript.jscomp.InlineSimpleMethods$1");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node2 = new Node(46, node0, node0, node0, node1);
      // Undeclared exception!
      try { 
        compiler0.toSource(node2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown precedence for lp (type 83)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode("+ML;c'(T1-L#p", "@N9JYBIpy|");
      Node node1 = new Node(4, node0);
      String string0 = compiler0.toSource(node1);
      assertEquals("return", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(41, 41, 41);
      Node node1 = new Node(5, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 5
         // GOTO
         //     NULL 41
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newString("switch(");
      Node node1 = new Node(6, node0, node0, node0, 26, 44);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 6
         // IFEQ 26
         //     STRING switch(
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = new Node(7, 11, 36);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 7
         // IFNE 11
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = new Node(41, 41, 41);
      Node node1 = new Node(8, node0);
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(41, 41, 41);
      Node node1 = new Node(9, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 9
         // BITOR
         //     NULL 41
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = Node.newString(10, "com.google.javascript.jscomp.CompilerInput");
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 10
         // BITXOR com.google.javascript.jscomp.CompilerInput
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newString("n<sciptl$Xol&Cl");
      Compiler compiler0 = new Compiler();
      Node node1 = new Node(11, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 11
         // BITAND
         //     STRING n<sciptl$Xol&Cl
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("com.google.javascript.jscomp.I'lineSUmpleMethd$1");
      Node node1 = new Node(12, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 12
         // EQ
         //     STRING com.google.javascript.jscomp.I'lineSUmpleMethd$1
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newString("g^Sm");
      Node node1 = new Node(13, node0, node0, node0, 1596, 2);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 13
         // NE 1596
         //     STRING g^Sm
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newNumber((-2289.774804428816));
      Node node1 = new Node(14, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 14
         // LT
         //     NUMBER -2289.774804428816
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      Node node1 = new Node(15, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = Node.newString(17, ";`xe0dR7M4", 17, 140);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 17
         // GE ;`xe0dR7M4 17
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Compiler compiler0 = new Compiler();
      Node node1 = new Node(18, node0, node0, node0, node0, 13, 3);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 18
         // LSH 13
         //     LP
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.jscomp.InlineSimpleMethods$1");
      Node node1 = new Node(19, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 19
         // RSH
         //     STRING com.google.javascript.jscomp.InlineSimpleMethods$1
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node(20, 20, 39);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 20
         // URSH 20
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newString(31, "f(G_~B<!--hCy)&>u", 31, 31);
      Compiler compiler0 = new Compiler();
      Node node1 = new Node(21, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 21
         // ADD
         //     DELPROP f(G_~B<!--hCy)&>u 31
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newString(22, "n<scipt$Xol&Cl", 38, 111);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 22
         // SUB n<scipt$Xol&Cl 38
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newString(23, "&iL~'JWAD", 16, 16);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 23
         // MUL &iL~'JWAD 16
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(24);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 24
         // DIV
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("com.google.javascript.jscomp.I'lineSUmpleMethd$1");
      Node node1 = new Node(25, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 25
         // MOD
         //     STRING com.google.javascript.jscomp.I'lineSUmpleMethd$1
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = new Node(2615, 2615, 609);
      Node node1 = new Node(26, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown precedence for <unknown=2615> (type 2615)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(27);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newString("n</script/script");
      Node node1 = new Node(28, node0);
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node1);
      assertEquals("+\"n<\\/script/script\"", string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newString("K3@K~%");
      Compiler compiler0 = new Compiler();
      Node node1 = new Node(31, node0, node0, node0, node0, 2, 42);
      String string0 = compiler0.toSource(node1);
      assertEquals("delete \"K3@K~%\"", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(65);
      Node node1 = new Node(32, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown precedence for get_ref (type 65)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(78);
      Node node1 = new Node(33, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Bad GETPROP: expected 2 children, but got 1
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newString("n<scipt$Xol&Cl");
      Node node1 = new Node(34, node0, node0, node0, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 34
         // SETPROP
         //     STRING n<scipt$Xol&Cl
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(35);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Bad GETELEM: expected 2 children but got 0
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = Node.newString("K3@K~%");
      Compiler compiler0 = new Compiler();
      Node node1 = new Node(36, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 36
         // SETELEM
         //     STRING K3@K~%
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Compiler compiler0 = new Compiler();
      Node node1 = new Node(37, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown precedence for lp (type 83)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(41);
      String string0 = compiler0.toSource(node0);
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString((-28), "ieZ\"pM!UO?@d?%/@g[", (-28), (-28));
      Node node1 = new Node(42, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = new Node(68);
      Node node1 = new Node(43, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node(44);
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node0);
      assertEquals("true", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = Node.newString(45, "V,>rmDQ", 45, 45);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 45
         // SHEQ V,>rmDQ 45
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = Node.newString("--");
      Node node1 = new Node(46, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 46
         // SHNE
         //     STRING --
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newString("n<scipt$Xol&Cl");
      Node node1 = new Node(47, node0);
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node1);
      assertEquals("/n<scipt$Xol&Cl/", string0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newString(48, "U9H");
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 48
         // BINDNAME U9H
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      String string0 = "GnJ*yD{Rt@=$G?{\\u`";
      Node node0 = Node.newString(string0);
      Node node1 = new Node(49, node0);
      String string1 = compiler0.toSource(node1);
      assertEquals("throw\"GnJ*yD{Rt@=$G?{\\\\u`\";", string1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newString(50, "g3.", 684, 145);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 50
         // RETHROW g3. 684
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString(116, "f(G_~B<!--hCy)&>u", 116, 120);
      Node node1 = new Node(51, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 51
         // IN
         //     BREAK f(G_~B<!--hCy)&>u 116
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(52);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 52
         // INSTANCEOF
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(53, 53, 53);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 53
         // LOCAL_LOAD 53
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(54);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 54
         // GETVAR
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("com.google.javascript.jscomp.InlineSimpleMethods$1");
      Node node1 = new Node(55, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 55
         // SETVAR
         //     STRING com.google.javascript.jscomp.InlineSimpleMethods$1
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newString(56, "/sc", 763, 763);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 56
         // CATCH_SCOPE /sc 763
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = new Node(57);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 57
         // ENUM_INIT_KEYS
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newString(58, "!--", 58, 58);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 58
         // ENUM_INIT_VALUES !-- 58
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newString(59, "(cc", 59, 59);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 59
         // ENUM_NEXT (cc 59
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = new Node(60, 113, 105);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 60
         // ENUM_ID 113
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(62);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 62
         // RETURN_RESULT
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(63, "/scriph", 111, 111);
      String string0 = compiler0.toSource(node0);
      assertEquals("[]", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(64);
      String string0 = compiler0.toSource(node0);
      assertEquals("{}", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(65);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = new Node(66, 66, 100);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 66
         // SET_REF 66
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(68);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 68
         // REF_CALL
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      SyntheticAst syntheticAst0 = new SyntheticAst("!--");
      Node node0 = syntheticAst0.getAstRoot(compiler0);
      Node node1 = new Node(69, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(70);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 70
         // DEFAULTNAMESPACE
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newString(71, "(cc", 71, 71);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 71
         // ESCXMLATTR (cc 71
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(73, "!--", 2748, 2748);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 73
         // REF_MEMBER !-- 2748
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newString(74, "rH,I#9+oh1H&b1s`i", 105, 82);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 74
         // REF_NS_MEMBER rH,I#9+oh1H&b1s`i 105
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(75, 75, 75);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 75
         // REF_NAME 75
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newString(76, "(cc", 76, 76);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 76
         // REF_NS_NAME (cc 76
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = new Node(77, 77, 77);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(78, 78, 78);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 78
         // SEMI 78
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = new Node(79, 79, 79);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 79
         // LB 79
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newString(80, "!--", 80, 80);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 80
         // RB !-- 80
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newString(81, "QCSXR aqm#R?FnR", (-205), 2959);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 81
         // LC QCSXR aqm#R?FnR
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newString(82, "]", (-2221), 82);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 82
         // RC ]
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Compiler compiler0 = new Compiler();
      JSType[] jSTypeArray0 = new JSType[3];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      String string0 = compiler0.toSource(node0);
      assertEquals("(,,)", string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = new Node(84);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 84
         // RP
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = Node.newString(31, "f(G_~B<!--hCy)&>u", 31, 31);
      Node node1 = new Node(85, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(86, "2qaNla(R^>,N0y4r:c{");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 86
         // ASSIGN 2qaNla(R^>,N0y4r:c{
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newString(54, "f(G_~B<!--hCy)&>u", 54, 54);
      Node node1 = new Node(87, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 87
         // ASSIGN_BITOR
         //     GETVAR f(G_~B<!--hCy)&>u 54
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newString(88, "20vG&J~9");
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 88
         // ASSIGN_BITXOR 20vG&J~9
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(89);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 89
         // ASSIGN_BITAND
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node(90);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 90
         // ASSIGN_LSH
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(91, "v", 2700, 78);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 91
         // ASSIGN_RSH v 2700
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = new Node(92);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 92
         // ASSIGN_URSH
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(150, "(vt:ds<!--q[Z(|s>t", 150, 150);
      Node node1 = new Node(93, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 93
         // ASSIGN_ADD
         //     SETCONST (vt:ds<!--q[Z(|s>t 150
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = Node.newString(94, "com.google.javascript.jscomp.SpecializeModule$OriginalFunctionInformation", 119, 94);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 94
         // ASSIGN_SUB com.google.javascript.jscomp.SpecializeModule$OriginalFunctionInformation 119
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newNumber((-2289.774804428816));
      Node node1 = new Node(95, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 95
         // ASSIGN_MUL
         //     NUMBER -2289.774804428816
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(97, 97, 97);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 97
         // ASSIGN_MOD 97
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode("\"com.google.javascript.jscomp.ObjectPropertyStringPreprocess\"", "Af?R:2");
      String string0 = compiler0.toSource(node0);
      assertEquals("Af?R:2", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(99);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 99
         // COLON
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString(100, "FVB[=p", 100, 100);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 100
         // OR FVB[=p 100
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode("T;g0R=P^+8TY\"1=)9", "@N9JYBIpy|");
      Node node1 = new Node(101, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 101
         // AND
         //     BLOCK [sourcename: java.lang.String@0000000455]
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString(103, "f(G_~B<!--hCy)&>u", 103, 120);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newString(105, "/f(g_~b</script)&>u/", 105, 71);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected Node subclass.
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(106);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 106
         // EXPORT
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newString(107, "^t2", 107, 64);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 107
         // IMPORT ^t2 107
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(108, 108, 108);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newNumber((-2280.316360709577));
      Node node1 = new Node(109, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 109
         // ELSE
         //     NUMBER -2280.316360709577
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newNumber((-2289.774804428816));
      Node node1 = new Node(110, node0);
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node1);
      assertEquals("switch(-2289.774804428816){}", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = new Node(113, 113, 113);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(41, 41, 41);
      Node node1 = new Node(114, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(115);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = new Node((-803), (-803), (-803));
      Node node1 = new Node(116, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected token type. Should be LABEL_NAME.
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode("n</scripH~?$rol&~l", "VvFX8mbT1XF49Si");
      Node node1 = new Node(117, node0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected token type. Should be LABEL_NAME.
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newString("qy^A#E?|YNw(j* ");
      Compiler compiler0 = new Compiler();
      Node node1 = new Node(118, node0, node0, node0, node0);
      String string0 = compiler0.toSource(node1);
      assertEquals("var \"qy^A#E?|YNw(j* \"", string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(119);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = Node.newString(120, "Z/u{H[`Y+p#K3p0?0g");
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(41);
      Node node1 = new Node(121, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 121
         // FINALLY
         //     NULL
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(122);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = new Node(123, 53, (-2054));
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 123
         // RESERVED
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString(124, "n<scipt$Xol&Cl", (-71), 47);
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = new Node(41, 41, 41);
      Node node1 = new Node(126, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(127);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 127
         // TARGET
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newString(128, "com.google.javascript.jscomp.SpecializeModule$OriginalFunctionInformation", 119, 128);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 128
         // LOOP com.google.javascript.jscomp.SpecializeModule$OriginalFunctionInformation 119
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString(129, "/scriph", 133, 129);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected EXPR_VOID. Should be EXPR_RESULT.
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newString(45, "V,>rmDQ", 45, 45);
      Node node1 = new Node(131, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 131
         // JSR
         //     SHEQ V,>rmDQ 45
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newString(133, "dO}TusDZvX", 33, 133);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 133
         // TYPEOFNAME dO}TusDZvX 33
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = new Node(134);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 134
         // USE_STACK
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(135);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 135
         // SETPROP_OP
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = new Node(136);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 136
         // SETELEM_OP
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newString(78, "/sc", 4034, (-42));
      Node node1 = new Node(137, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 137
         // LOCAL_BLOCK
         //     SEMI /sc
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = new Node(138);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 138
         // SET_REF_OP
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(139);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 139
         // DOTDOT
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node(140);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 140
         // COLONCOLON
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(141, "v");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 141
         // XML v
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newString(142, "set ", 82, 82);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 142
         // DOTQUERY set  82
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newString(143, "U9H");
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 143
         // XMLATTR U9H
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newString("?`j$AI.Y0+Pb");
      Node node1 = new Node(144, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 144
         // XMLEND
         //     STRING ?`j$AI.Y0+Pb
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(145, "Ah");
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 145
         // TO_OBJECT Ah
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = Node.newString(146, "for(", 3458, (-29));
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 146
         // TO_DOUBLE for(
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(147, "v#", 147, 147);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newString(149, "f(g_~b</script&>u");
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 149
         // CONST f(g_~b</script&>u
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(150);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 150
         // SETCONST
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = new Node(151);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 151
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = Node.newString(152, "!rEA]9@-eF", 182, 40);
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node0);
      assertEquals("debugger", string0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newString(153, "", 153, 153);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager(mockPrintStream0);
      Compiler compiler0 = new Compiler(printStreamErrorManager0);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = new Node(32768);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 32768
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(49);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newString(4, ";`xe0dR7M4", 4, 4);
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node0);
      assertEquals("return", string0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(118, "break");
      String string0 = compiler0.toSource(node0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newString(153, "/sc", 81, 81);
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node0);
      assertEquals("/sc", string0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newNumber((-2259.167498342841));
      node0.addChildToBack(node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newString(29, "com.google.javascript.jscomp.InlineSimpleMethods$1", 0, 38);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(98);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("f(G_~B<!--hCy)&>u");
      Node node1 = new Node(47, node0, node0, node0, 144, 13);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Expected children to be strings
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newString(69, "!--", 69, 69);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = new Node(105);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = new Node(148, 2615, 102);
      node0.addChildrenToFront(node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newString(132, "com.google.javascript.jscomp.SpecializeModule$OriginalFunctionInformation", 5, 132);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unexpected Node subclass.
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode("/n2</scriptxol&cl/", "C-x-y>hJl;1k");
      Node node1 = new Node(125, node0);
      String string0 = compiler0.toSource(node1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newString(75, "/s", 4011, (-58));
      Node node1 = new Node(124, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("com.google.common.collect.HashMultimap");
      String string0 = compiler0.toSource(node0);
      assertEquals("com.google.common.collect.HashMultimap", string0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node(102, 102, 105);
      node0.addChildrenToFront(node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      String string0 = "GnJ*yD{Rt@=$G?{\\u`";
      Node node0 = Node.newString(117, string0, 117, 117);
      String string1 = compiler0.toSource(node0);
      assertEquals("continue", string1);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("return");
      Node node1 = new Node(152, node0, node0, node0, 28, 11);
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newString(116, "f(G_~B<!--hCy)&>u", 116, 116);
      Compiler compiler0 = new Compiler();
      String string0 = compiler0.toSource(node0);
      assertEquals("break", string0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = new Node(130, 41, 1021);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("com.google.javascript.jscomp.InlineSimpleMethods$1");
      Node node1 = new Node(64, node0, node0, 116, 18);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected String children: OBJECTLIT 116
         //     STRING com.google.javascript.jscomp.InlineSimpleMethods$1
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = new Node(31, 31, 31);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(112, 1108, 112);
      // Undeclared exception!
      try { 
        compiler0.toSource(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      double double0 = CodeGenerator.getSimpleNumber("\"com.google.javascript.jscomp.ObjectPropertyStringPreprocess\"");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      double double0 = CodeGenerator.getSimpleNumber("2qaNla(R^>,N0y4r:c{");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      boolean boolean0 = CodeGenerator.isSimpleNumber("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      double double0 = CodeGenerator.getSimpleNumber("1");
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString(16, "f(G_~B<!--hCy)&>u", 16, 16);
      Node node1 = new Node(29, node0);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.toSource(node1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown type 16
         // GT f(G_~B<!--hCy)&>u 16
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      Node node0 = new Node(33);
      CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
      // Undeclared exception!
      try { 
        codeGenerator0.addList(node0, false, codeGenerator_Context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node(3135);
      Node node1 = new Node(51, node0, node0, 8, 12);
      CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      // Undeclared exception!
      try { 
        codeGenerator0.addList(node1, true, codeGenerator_Context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("com.google.common.collect.HashMultimap");
      // Undeclared exception!
      try { 
        codeGenerator0.addArrayList(node0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown precedence for script (type 132)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newString(249, "\\eCd", 171, 171);
      CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, (Charset) null);
      // Undeclared exception!
      try { 
        codeGenerator0.addAllSiblings(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.CodeGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      CharsetEncoder charsetEncoder0 = charset0.newEncoder();
      String string0 = CodeGenerator.jsString("(vt:ds<\";/q[Z(|s>t", charsetEncoder0);
      assertEquals("'(vt:ds<\";/q[Z(|s>t'", string0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      CharsetEncoder charsetEncoder0 = charset0.newEncoder();
      String string0 = CodeGenerator.jsString("n<g3.u '<!--L&~l", charsetEncoder0);
      assertEquals("\"n<g3.u '<\\!--L&~l\"", string0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      String string0 = CodeGenerator.regexpEscape("\n");
      assertEquals("/\\n/", string0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      String string0 = CodeGenerator.regexpEscape("n>Tx?MPPEJ07PtTO8x");
      assertEquals("/n>Tx?MPPEJ07PtTO8x/", string0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      String string0 = CodeGenerator.strEscape("]@}_|lz73,e]>", '%', "%cq.|null,3%", "%AsuM!Eb,U9o}Uy", "]", (CharsetEncoder) null);
      assertEquals("%]@}_|lz73,e]>%", string0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      String string0 = CodeGenerator.identifierEscape("\t=\u000Bl\r \u0085w\u1680\u2028^\u205F\u3000");
      assertEquals("\\u0009=\\u000bl\\u000d \\u0085w\\u1680\\u2028^\\u205f\\u3000", string0);
  }
}
