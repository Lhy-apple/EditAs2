/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 14:46:43 GMT 2023
 */

package org.apache.commons.compress.archivers.sevenz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry;
import org.apache.commons.compress.archivers.sevenz.SevenZMethod;
import org.apache.commons.compress.archivers.sevenz.SevenZOutputFile;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SevenZOutputFile_ESTest extends SevenZOutputFile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFile mockFile0 = new MockFile("ls", "ls");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      SevenZArchiveEntry sevenZArchiveEntry0 = sevenZOutputFile0.createArchiveEntry(mockFile0, "ls");
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.closeArchiveEntry();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockFile mockFile0 = new MockFile("LF~");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      SevenZMethod sevenZMethod0 = SevenZMethod.BZIP2;
      sevenZOutputFile0.setContentCompression(sevenZMethod0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      byte[] byteArray0 = new byte[3];
      sevenZOutputFile0.write(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apach.commons.cogpress.archiers.zip.5455_ExtendedTimestamp", "org.apach.commons.cogpress.archiers.zip.5455_ExtendedTimestamp");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      sevenZOutputFile0.write(40);
      // Undeclared exception!
      try { 
        sevenZOutputFile0.closeArchiveEntry();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockFile mockFile0 = new MockFile("F", "F");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      sevenZOutputFile0.finish();
      sevenZOutputFile0.close();
      assertEquals(44L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockFile mockFile0 = new MockFile("ls", "ls");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      // Undeclared exception!
      try { 
        sevenZOutputFile0.closeArchiveEntry();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockFile mockFile0 = new MockFile("LF~");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      byte[] byteArray0 = new byte[0];
      sevenZOutputFile0.write(byteArray0);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockFile mockFile0 = new MockFile("LF~", "LF~");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      sevenZOutputFile0.finish();
      try { 
        sevenZOutputFile0.finish();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // This archive has already been finished
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZOutputFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MockFile mockFile0 = new MockFile("ls", "ls");
      SevenZOutputFile sevenZOutputFile0 = new SevenZOutputFile(mockFile0);
      SevenZArchiveEntry sevenZArchiveEntry0 = sevenZOutputFile0.createArchiveEntry(mockFile0, "ls");
      sevenZOutputFile0.putArchiveEntry(sevenZArchiveEntry0);
      sevenZOutputFile0.close();
      assertEquals(68L, mockFile0.length());
  }
}
