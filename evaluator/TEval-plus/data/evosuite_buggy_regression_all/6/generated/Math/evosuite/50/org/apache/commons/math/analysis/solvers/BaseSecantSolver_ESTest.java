/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 27 00:52:45 GMT 2023
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Logit;
import org.apache.commons.math.analysis.function.Sigmoid;
import org.apache.commons.math.analysis.function.Sinc;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Sigmoid sigmoid0 = new Sigmoid(48, 0.0);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      illinoisSolver0.solve(48, (UnivariateRealFunction) sigmoid0, 0.0, (double) 48, allowedSolution0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(560, (-132.0153840374013));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = illinoisSolver0.solve(560, (UnivariateRealFunction) sigmoid0, (-132.0153840374013), (double) 560, allowedSolution0);
      assertEquals(560.0, illinoisSolver0.getMax(), 0.01);
      assertEquals(1.4450183221958357, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid();
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(791604710, 791604710, 791604710);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = illinoisSolver0.solve(791604710, (UnivariateRealFunction) sigmoid0, (-1276.812316), (double) 791604710, allowedSolution0);
      assertEquals(7.9160471E8, illinoisSolver0.getMax(), 0.01);
      assertEquals((-1276.812316), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(791604710, (-1276.812316));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1276.812316), (-1276.812316));
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = illinoisSolver0.solve(791604710, (UnivariateRealFunction) sigmoid0, (-1276.812316), (double) 791604710, allowedSolution0);
      assertEquals(3.9580171659384197E8, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(13.33745084902043, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Logit logit0 = new Logit(2253, 119336.19378611438);
      UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(2253, univariateRealFunction0, (-490.58425), (double) 2253);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (2,253) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(791604710, (-1276.812316));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(791604710, 791604710, 791604710);
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = illinoisSolver0.solve(791604710, (UnivariateRealFunction) sigmoid0, (-1276.812316), (double) 791604710, allowedSolution0);
      assertEquals(3.9580171659384197E8, illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-1276.812316), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-7.377484422356526E8), (-2397.6430967339147), (-7.377484422356526E8));
      Sinc sinc0 = new Sinc();
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(325, (UnivariateRealFunction) sinc0, (-20.25571), 1302164.1265803508, 1.986821492305628E-8, allowedSolution0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (325) exceeded: evaluations
         //
         verifyException("org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(791604710, (-1276.762495144901));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(791604710, 791604710, 791604710);
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = illinoisSolver0.solve(791604710, (UnivariateRealFunction) sigmoid0, (-1276.762495144901), (double) 791604710, allowedSolution0);
      assertEquals(3.958017166187524E8, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(7.916034332375048E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(791604710, (-1276.812316));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(791604710, 791604710, 791604710);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = illinoisSolver0.solve(791604710, (UnivariateRealFunction) sigmoid0, (-1276.812316), (double) 791604710, allowedSolution0);
      assertEquals(3.9580171659384197E8, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(7.91603433187684E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(791604710, (-1276.812316));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(791604710, 791604710, 791604710);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = illinoisSolver0.solve(791604710, (UnivariateRealFunction) sigmoid0, (-1276.812316), (double) 791604710, allowedSolution0);
      assertEquals(3.9580171659384197E8, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(7.91603433187684E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(55, (-1288.5711476010874));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(55, 55, 55);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = illinoisSolver0.solve(55, (UnivariateRealFunction) sigmoid0, (-1288.5711476010874), (double) 55, allowedSolution0);
      assertEquals((-616.7855738005437), illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-1233.5711476010874), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(791604710, (-1276.812316));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1276.812316), (-1276.812316), 791604710);
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = illinoisSolver0.solve(791604710, (UnivariateRealFunction) sigmoid0, (-1276.812316), (double) 791604710, allowedSolution0);
      assertEquals(3.9580171659384197E8, illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-1178.2702870240273), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(55, (-1288.5711476010874));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(55, 55, 55);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = illinoisSolver0.solve(55, (UnivariateRealFunction) sigmoid0, (-1288.5711476010874), (double) 55, allowedSolution0);
      assertEquals((-616.7855738005437), illinoisSolver0.getStartValue(), 0.01);
      assertEquals(55.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(55, (-1288.5711476010874));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(55, 55, 55);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = illinoisSolver0.solve(55, (UnivariateRealFunction) sigmoid0, (-1288.5711476010874), (double) 55, allowedSolution0);
      assertEquals((-616.7855738005437), illinoisSolver0.getStartValue(), 0.01);
      assertEquals(55.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(791604710, (-1276.812316));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(791604710, 791604710, 791604710);
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = illinoisSolver0.solve(791604710, (UnivariateRealFunction) sigmoid0, (-1276.812316), (double) 791604710, allowedSolution0);
      assertEquals(3.9580171659384197E8, illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-1276.812316), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(791604710, (-1276.812316));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(791604710, 791604710);
      AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
      double double0 = illinoisSolver0.solve(791604710, (UnivariateRealFunction) sigmoid0, (-1276.812316), (double) 791604710, allowedSolution0);
      assertEquals(3.9580171659384197E8, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(7.91603433187684E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(791604710, (-1276.812316));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(791604710);
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = illinoisSolver0.solve(791604710, (UnivariateRealFunction) sigmoid0, (-1276.812316), (double) 791604710, allowedSolution0);
      assertEquals(3.9580171659384197E8, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(7.916008795712899E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Sigmoid sigmoid0 = new Sigmoid(791604710, (-1276.812316));
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(791604710);
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = illinoisSolver0.solve(791604710, (UnivariateRealFunction) sigmoid0, (-1276.812316), (double) 791604710, allowedSolution0);
      assertEquals(3.9580171659384197E8, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(7.916008795712899E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Sigmoid sigmoid0 = new Sigmoid(48, (-0.1122679157905));
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = illinoisSolver0.solve(48, (UnivariateRealFunction) sigmoid0, (-0.1122679157905), (double) 48, allowedSolution0);
      assertEquals(23.943866042104748, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(6.058068158831196, double0, 0.01);
  }
}
