/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 23:46:17 GMT 2023
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.Paint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ValueMarker;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValueMarker_ESTest extends ValueMarker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(1313.162535555896);
      ValueMarker valueMarker1 = (ValueMarker)valueMarker0.clone();
      boolean boolean0 = valueMarker0.equals(valueMarker1);
      assertTrue(boolean0);
      assertEquals(1313.162535555896, valueMarker1.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(3150.505803998648);
      double double0 = valueMarker0.getValue();
      assertEquals(3150.505803998648, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(1.7976931348623157E308);
      valueMarker0.setValue(1.7976931348623157E308);
      assertEquals(1.7976931348623157E308, valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      Paint paint0 = spiderWebPlot0.getAxisLinePaint();
      ValueMarker valueMarker0 = new ValueMarker((-820.9764201174895), paint0, spiderWebPlot0.DEFAULT_OUTLINE_STROKE);
      assertEquals((-820.9764201174895), valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker((-0.580326557159));
      boolean boolean0 = valueMarker0.equals(valueMarker0);
      assertEquals((-0.580326557159), valueMarker0.getValue(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(1313.162535555896);
      boolean boolean0 = valueMarker0.equals("");
      assertEquals(1313.162535555896, valueMarker0.getValue(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(20.214846338795645);
      IntervalMarker intervalMarker0 = new IntervalMarker(5000000.0, 623.29);
      boolean boolean0 = valueMarker0.equals(intervalMarker0);
      assertFalse(boolean0);
      assertEquals(20.214846338795645, valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(Double.NaN);
      Object object0 = valueMarker0.clone();
      boolean boolean0 = valueMarker0.equals(object0);
      assertFalse(boolean0);
  }
}
