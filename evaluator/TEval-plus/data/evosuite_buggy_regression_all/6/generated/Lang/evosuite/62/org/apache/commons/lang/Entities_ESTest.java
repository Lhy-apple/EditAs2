/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 27 00:47:20 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.unescape("eb&'+{wLwBKR ");
      assertEquals("eb&'+{wLwBKR ", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "p&#&[;");
      assertEquals("p&#&[;", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      String string0 = entities_HashEntityMap0.name(4153);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("ejb&amp;&apos;+{wLwBtKR ");
      assertEquals("ejb&&apos;+{wLwBtKR ", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      entities_HashEntityMap0.add("]c5}#KkgI", 86);
      int int0 = entities_HashEntityMap0.value("]c5}#KkgI");
      assertEquals(86, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      String string0 = entities0.unescape("J&GE;h4F");
      assertEquals("J&GE;h4F", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.HTML40.entityName(490);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities entities0 = Entities.XML;
      entities0.XML.escape("ejb&'+{wLwBtKR ");
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(574);
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "ejb&amp;&apos;+{wLwBtKR ");
      assertEquals("ejb&'+{wLwBtKR ", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities entities0 = Entities.XML;
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(574);
      entities0.map = (Entities.EntityMap) entities_BinaryEntityMap0;
      Entities.fillWithHtml40Entities(entities0);
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "ejb&amp;&apos;+{wLwBtKR ");
      assertEquals("ejb&&apos;+{wLwBtKR ", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities entities0 = Entities.XML;
      entities0.XML.escape("ejb&'+{wLwBtKR ");
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(574);
      entities0.map = (Entities.EntityMap) entities_BinaryEntityMap0;
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Entities entities0 = Entities.XML;
      entities0.addEntity("&%G8(;$", 221);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.escape((Writer) stringWriter0, "ejb&amp;&apos;+{wLwBtKR ");
      assertEquals("ejb&amp;amp;&amp;apos;+{wLwBtKR ", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.unescape("L*2,Jg{a~RWZ");
      assertEquals("L*2,Jg{a~RWZ", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.unescape(".$ppy;&_&2Mmj;e");
      assertEquals(".$ppy;&_&2Mmj;e", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("=GGFILE(6W1!~@&;8\"");
      assertEquals("=GGFILE(6W1!~@&;8\"", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("p&#[;");
      assertEquals("p&#[;", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("p&#;");
      assertEquals("p&#;", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "Illegal Capacity: ");
      assertEquals("Illegal Capacity: ", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "J&%8jE;_&F");
      assertEquals("J&%8jE;_&F", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Entities entities0 = Entities.XML;
      entities0.unescape((Writer) stringWriter0, ",Xbh'}HCj,%&;/$l");
      assertEquals(",Xbh'}HCj,%&;/$l", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Entities entities0 = Entities.XML;
      entities0.unescape((Writer) stringWriter0, "p&#[;");
      assertEquals("p&#[;", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "p&#;");
      assertEquals("p&#;", stringWriter0.toString());
  }
}
