/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 27 00:39:17 GMT 2023
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Entities;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attribute_ESTest extends Attribute_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.jsoup.select.Evaluator$ContainsText", (String) null);
      String string0 = attribute0.toString();
      assertEquals("org.jsoup.select.Evaluator$ContainsText", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("muted", "muted");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put(attribute0);
      assertSame(attributes0, attributes1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attribute attribute0 = new Attribute("q{pP}/9fyvo)3", "q{pP}/9fyvo)3");
      boolean boolean0 = attribute0.isDataAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.jsoup.select.Evaluator$ContainsText", (String) null);
      Attribute attribute1 = attribute0.clone();
      boolean boolean0 = attribute1.equals(attribute0);
      assertEquals("", attribute1.getValue());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Attribute attribute0 = Attribute.createFromEncoded("q{pt9fyv\"N)3", "q{pt9fyv\"N)3");
      boolean boolean0 = attribute0.shouldCollapseAttribute(document_OutputSettings0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attribute attribute0 = new Attribute("qS,>B'.r,I*iTe;/", "qS,>B'.r,I*iTe;/");
      attribute0.setKey("qS,>B'.r,I*iTe;/");
      assertEquals("qS,>B'.r,I*iTe;/", attribute0.getKey());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("#rZ%7yDC", (String) null, attributes0);
      attribute0.setKey("LI;iTYb");
      assertEquals("", attribute0.getValue());
      
      attribute0.setValue("#rZ%7yDC");
      attribute0.toString();
      assertEquals("#rZ%7yDC", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attribute attribute0 = new Attribute("n|\"x>]", "n|\"x>]");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("n|\"x>]", true);
      attribute0.parent = attributes1;
      attribute0.setKey("n|\"x>]");
      assertEquals("n|\"x>]", attribute0.getKey());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("#rZ%7yDC", (String) null, attributes0);
      assertEquals("", attribute0.getValue());
      
      attribute0.setValue("#rZ%7yDC");
      attribute0.toString();
      assertEquals("#rZ%7yDC", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("lipl", "lipl");
      Attribute attribute0 = new Attribute("lipl", "lipl", attributes0);
      String string0 = attribute0.setValue("lipl");
      assertEquals("lipl", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = Attribute.isDataAttribute("data-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = Attribute.isDataAttribute("data-V77{8nLv-");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attribute attribute0 = new Attribute("%<P^bD*[R(", "%<P^bD*[R(");
      MockFileWriter mockFileWriter0 = new MockFileWriter("docypepblicidentifier_singlequoted");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      attribute0.html((Appendable) mockFileWriter0, document_OutputSettings1);
      assertEquals(Entities.EscapeMode.base, document_OutputSettings1.escapeMode());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      boolean boolean0 = Attribute.shouldCollapseAttribute("", "", document_OutputSettings0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("inert", "inert");
      String string0 = attribute0.html();
      assertEquals("inert", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("autofocus", "autofocus");
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("org.soup.select.Evaluator$ContainsTet", "org.soup.select.Evaluator$ContainsTet");
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attribute attribute0 = new Attribute("V77{Lv-", (String) null);
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attribute attribute0 = new Attribute("DoctypePublicIdentifer_singleQuoted", "DoctypePublicIdentifer_singleQuoted");
      boolean boolean0 = attribute0.equals(attribute0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attribute attribute0 = new Attribute("NI0", "NI0");
      boolean boolean0 = attribute0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attribute attribute0 = new Attribute("qS,>B'.r,I*iTe;/", "qS,>B'.r,I*iTe;/");
      boolean boolean0 = attribute0.equals("qS,>B'.r,I*iTe;/");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.jsoup.select.Evaluator$ContainsText", (String) null);
      Attributes attributes0 = new Attributes();
      Attribute attribute1 = new Attribute("#rZ%7yDC", (String) null, attributes0);
      boolean boolean0 = attribute1.equals(attribute0);
      assertEquals("", attribute1.getValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attribute attribute0 = new Attribute("DocypePblicIdentifier_singleQuoted", "DocypePblicIdentifier_singleQuoted");
      Attribute attribute1 = new Attribute("DocypePblicIdentifier_singleQuoted", "DocypePblicIdentifier_singleQuoted");
      boolean boolean0 = attribute1.equals(attribute0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attribute attribute0 = new Attribute("samp", (String) null);
      Attribute attribute1 = Attribute.createFromEncoded("samp", "samp");
      boolean boolean0 = attribute0.equals(attribute1);
      assertFalse(boolean0);
      assertTrue(attribute1.equals((Object)attribute0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.jsoup.select.Evaluator$ContainsText", (String) null);
      attribute0.hashCode();
      assertEquals("", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("#rZ%7yDC", (String) null, attributes0);
      assertEquals("", attribute0.getValue());
      
      attribute0.setValue("#rZ%7yDC");
      attribute0.hashCode();
      assertEquals("#rZ%7yDC", attribute0.getValue());
  }
}
