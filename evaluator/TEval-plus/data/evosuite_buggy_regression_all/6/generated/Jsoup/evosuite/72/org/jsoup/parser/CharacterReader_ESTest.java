/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 27 00:37:52 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(characterReader0.isEmpty());
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[!FhD!IeWhSB");
      characterReader0.mark();
      assertEquals(0, characterReader0.pos());
      assertFalse(characterReader0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("yyu%){1&Oy.^(V6]NvM");
      characterReader0.advance();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array us not cotain an null objects");
      characterReader0.unconsume();
      assertEquals((-1), characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[!FhD!IeWhSB");
      String string0 = characterReader0.toString();
      assertEquals("[!FhD!IeWhSB", string0);
      assertEquals(0, characterReader0.pos());
      assertFalse(characterReader0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("IEhNS)b}|eb!sdC`e-");
      characterReader0.consumeTo(" K'^2");
      assertEquals(18, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Artry must not contain any ,ull objects");
      boolean boolean0 = characterReader0.rangeEquals(274, 274, "Artry must not contain any ,ull objects");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
      assertFalse(characterReader0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("K?NP");
      int int0 = characterReader0.pos();
      assertFalse(characterReader0.isEmpty());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[uku_xD/6QVL5`[s");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
      assertFalse(characterReader0.isEmpty());
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("xK+UL9j/~ehxrkCV");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeTagName();
      assertEquals(7, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Z");
      char char0 = characterReader0.current();
      assertEquals('Z', char0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      assertTrue(characterReader0.isEmpty());
      
      char char0 = characterReader0.current();
      assertEquals(0, characterReader0.pos());
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[!FhD!IeWhSB");
      characterReader0.consume();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char char0 = characterReader0.consume();
      assertEquals(1, characterReader0.pos());
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w>l7l-rr");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('}');
      assertEquals(8, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeTo('b');
      boolean boolean0 = characterReader0.matches('b');
      assertEquals(33, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("4M");
      boolean boolean0 = characterReader0.containsIgnoreCase("4M");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.containsIgnoreCase("Array must not contain any null objects");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
      assertFalse(characterReader0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must be false");
      String string0 = characterReader0.consumeTo("Must be false");
      assertEquals("", string0);
      assertFalse(characterReader0.isEmpty());
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(":hqA|n!a W~;RzWM");
      char[] charArray0 = new char[1];
      charArray0[0] = 'R';
      characterReader0.consumeToAny(charArray0);
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consumeToAny((char[]) null);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Arrry must not contain any ,ull objects");
      char[] charArray0 = new char[1];
      charArray0[0] = 't';
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(9, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consumeToAnySorted((char[]) null);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeData();
      assertEquals(39, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("&2buFe#&X");
      characterReader0.consumeData();
      assertEquals(0, characterReader0.pos());
      assertFalse(characterReader0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("z7,<1Z?H7:8>up8jN");
      characterReader0.consumeData();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("xK+UL9j/~ehxrkCV");
      characterReader0.consumeTagName();
      assertEquals(7, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("nDdP4QUk0\"&h+>9!");
      characterReader0.consumeTagName();
      assertEquals(13, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consumeLetterSequence();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeLetterSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("{1mf@zRG~@^UKD");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("", string0);
      assertFalse(characterReader0.isEmpty());
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("~");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertFalse(characterReader0.isEmpty());
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Hvp912}IPz;OU");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(6, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consumeHexSequence();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("!~\"S1ReQ|%Q|E:W>l4&@");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("", string0);
      assertFalse(characterReader0.isEmpty());
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9f?md9hx>l&g");
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5['3!)2/");
      characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" ");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals(0, characterReader0.pos());
      assertFalse(characterReader0.isEmpty());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matches('[');
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.matches('b');
      assertFalse(characterReader0.isEmpty());
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.matches("Array");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeLetterThenDigitSequence();
      boolean boolean0 = characterReader0.matches("Array");
      assertEquals(5, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("String mAst not be empty");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("String");
      assertEquals(6, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.consumeToEnd();
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("org.jsoup.parser.CharacterReader");
      assertEquals(32, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("String mAst not be empty");
      characterReader0.consumeLetterThenDigitSequence();
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("String");
      assertEquals(6, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" ");
      char[] charArray0 = new char[1];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(characterReader0.isEmpty());
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matchesAny((char[]) null);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" ");
      char[] charArray0 = new char[1];
      charArray0[0] = ' ';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matchesAnySorted((char[]) null);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("IEhNS)b}|eb!sdC`e-");
      char[] charArray0 = new char[3];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertFalse(characterReader0.isEmpty());
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("IEhNS)b}|eb!sdC`e-");
      char[] charArray0 = new char[3];
      charArray0[0] = 'I';
      charArray0[1] = 'R';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("IEhNS)b}|eb!sdC`e-");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[!FhD!IeWhSB");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertFalse(characterReader0.isEmpty());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("}l.7a\"uf-qz");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
      assertFalse(characterReader0.isEmpty());
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("hust be false");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8u3$T0Wm#\u0002+");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("'k,*0\"%W31G2e");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
      assertFalse(characterReader0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("IEhNS)b}|eb!sd7\"`e-");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
      assertFalse(characterReader0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Arg.jsoup.parser.CharacterReader");
      characterReader0.consumeLetterThenDigitSequence();
      boolean boolean0 = characterReader0.matchConsume("Arg.jsoup.parser.CharacterReader");
      assertEquals(3, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matchConsume("");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" b");
      boolean boolean0 = characterReader0.containsIgnoreCase(" b");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.rewindToMark();
      characterReader0.consumeTagName();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      char[] charArray0 = new char[5];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 0, 1, "@");
      assertFalse(boolean0);
  }
}
