/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 27 00:32:08 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.jsoup.parser.TokeniserState;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Tokeniser_ESTest extends Tokeniser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      tokeniser0.createTempBuffer();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      // Undeclared exception!
      try { 
        tokeniser0.emitDoctypePending();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      tokeniser0.acknowledgeSelfClosingFlag();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      tokeniser0.createCommentPending();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      // Undeclared exception!
      try { 
        tokeniser0.isAppropriateEndTagToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("x.b`;NP'|-R4k&^Y<");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token token0 = tokeniser0.read();
      assertEquals("", characterReader0.toString());
      assertEquals("x.b`;NP'|-R4k&^Y<", token0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      // Undeclared exception!
      try { 
        tokeniser0.emitTagPending();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      boolean boolean0 = tokeniser0.isTrackErrors();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      // Undeclared exception!
      try { 
        tokeniser0.emitCommentPending();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#1' =L");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.setTrackErrors(false);
      tokeniser0.consumeCharacterReference((Character) null, true);
      assertEquals("' =L", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" rY[U=?|yhXH@ro");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      boolean boolean0 = tokeniser0.currentNodeInHtmlNS();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" rY[U=?|yhXH@ro");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.createDoctypePending();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" rY[U=?|yhXH@ro");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.getState();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ozQDI_d o^Z_N>'K");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.selfClosing = true;
      tokeniser0.emit(token_StartTag0);
      Token token0 = tokeniser0.read();
      assertSame(token0, token_StartTag0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      Token.StartTag token_StartTag0 = new Token.StartTag();
      tokeniser0.emit(token_StartTag0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#1 8LL");
      Token.EndTag token_EndTag0 = new Token.EndTag("#1 8LL");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.emit(token_EndTag0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#1 8LL");
      Token.EndTag token_EndTag0 = new Token.EndTag("#1 8LL");
      token_EndTag0.appendAttributeName("#1 8LL");
      token_EndTag0.finaliseTag();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.emit(token_EndTag0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = tokeniser0.consumeCharacterReference((Character) null, true);
      assertNull(character0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#xDc28L");
      Character character0 = new Character('Z');
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.consumeCharacterReference(character0, true);
      assertEquals("L", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#1' =L");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = new Character('#');
      Character character1 = tokeniser0.consumeCharacterReference(character0, false);
      assertNull(character1);
      assertEquals("#1' =L", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<!--");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = tokeniser0.consumeCharacterReference((Character) null, true);
      assertNull(character0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = tokeniser0.consumeCharacterReference((Character) null, true);
      assertNull(character0);
      assertEquals("#", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#1' =L");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.consumeCharacterReference((Character) null, true);
      assertEquals("' =L", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#x6Dca28L");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = Character.valueOf('[');
      Character character1 = tokeniser0.consumeCharacterReference(character0, true);
      assertEquals("L", characterReader0.toString());
      assertEquals('\uFFFD', (char)character1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("VTCZlS6^P&hf?-");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token token0 = tokeniser0.read();
      assertEquals("VTCZlS6^P&hf?-", token0.toString());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EmptyVerySmallSquare");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.consumeCharacterReference((Character) null, true);
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("R;zL?3%J(MCkm/|");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = tokeniser0.consumeCharacterReference((Character) null, true);
      assertNull(character0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EmptyVerySmallSquare");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.consumeCharacterReference((Character) null, false);
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.Tokeniser");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = tokeniser0.consumeCharacterReference((Character) null, true);
      assertNull(character0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      Token.Tag token_Tag0 = tokeniser0.createTagPending(false);
      assertNotNull(token_Tag0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3Iu<HLb*8a<");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token token0 = tokeniser0.read();
      assertEquals("3Iu", token0.toString());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("DownRightVectorBar");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.setTrackErrors(false);
      TokeniserState tokeniserState0 = TokeniserState.RCDATAEndTagName;
      tokeniser0.error(tokeniserState0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("VwNZ");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      TokeniserState tokeniserState0 = TokeniserState.AttributeValue_unquoted;
      tokeniser0.setTrackErrors(false);
      tokeniser0.eofError(tokeniserState0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#1 8LL");
      Token.EndTag token_EndTag0 = new Token.EndTag("#1 8LL");
      token_EndTag0.appendAttributeName("#1 8LL");
      token_EndTag0.finaliseTag();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.setTrackErrors(false);
      tokeniser0.emit(token_EndTag0);
  }
}
