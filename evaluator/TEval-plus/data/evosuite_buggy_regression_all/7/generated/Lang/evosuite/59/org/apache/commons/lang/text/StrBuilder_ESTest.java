/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 29 19:46:34 GMT 2023
 */

package org.apache.commons.lang.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import org.apache.commons.lang.text.StrBuilder;
import org.apache.commons.lang.text.StrMatcher;
import org.apache.commons.lang.text.StrTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StrBuilder_ESTest extends StrBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4HB9");
      StringBuffer stringBuffer0 = strBuilder0.toStringBuffer();
      assertEquals(4, strBuilder0.length());
      assertEquals(36, strBuilder0.capacity());
      assertEquals("4HB9", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf((StrMatcher) null);
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("RQwy(2r");
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("RQwy(2r");
      StrBuilder strBuilder1 = strBuilder0.replaceAll(strMatcher0, "RQwy(2r");
      assertEquals(39, strBuilder1.capacity());
      assertEquals(7, strBuilder1.size());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.capacity();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      strBuilder0.getNewLineText();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      assertFalse(strBuilder0.isEmpty());
      
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("4.}9");
      strBuilder0.deleteFirst((StrMatcher) strMatcher_StringMatcher0);
      assertTrue(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf('h');
      assertEquals((-1), int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.asWriter();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("WxU]Ft<w");
      String string0 = strBuilder0.substring(3);
      assertEquals("]Ft<w", string0);
      assertEquals(40, strBuilder0.capacity());
      assertEquals(8, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Q$W'u&n>| ");
      int int0 = strBuilder0.lastIndexOf('Q');
      assertEquals(42, strBuilder0.capacity());
      assertEquals(0, int0);
      assertEquals(10, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("wBEEi5[*),j");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      String string0 = strBuilder_StrBuilderTokenizer0.getContent();
      assertNotNull(string0);
      assertEquals(43, strBuilder0.capacity());
      assertEquals("wBEEi5[*),j", string0);
      assertEquals(11, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf((StrMatcher) null);
      assertEquals((-1), int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("w54.}9");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((StrMatcher) null, "IuS==TY/HJs#`MU@O");
      assertEquals(6, strBuilder1.length());
      assertEquals(38, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8?DqS4>");
      int int0 = strBuilder0.indexOf("");
      assertEquals(0, int0);
      assertEquals(39, strBuilder0.capacity());
      assertEquals(7, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append(1613);
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      strBuilder0.append((-863L));
      assertEquals(8, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.asReader();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.singleQuoteMatcher();
      StrBuilder strBuilder1 = strBuilder0.deleteAll(strMatcher0);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.asTokenizer();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("WxU]Ft<w");
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadRight((Object) null, 4, '$');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(971, (long) 971);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 971
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-1327), (-1327));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1327
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert((-3212), (float) (-3212));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3212
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.insert(3, 0.0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append(2128.5222F);
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5.0");
      strBuilder0.append(0.0);
      assertEquals(6, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(3, 3, '#');
      StrBuilder strBuilder2 = new StrBuilder("Wx]Ft<w");
      boolean boolean0 = strBuilder1.equalsIgnoreCase(strBuilder2);
      assertEquals(7, strBuilder0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.insert(48, '$');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 48
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.close();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.reset();
      assertFalse(strBuilder_StrBuilderReader0.ready());
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      boolean boolean0 = strBuilder_StrBuilderReader0.markSupported();
      assertEquals(34, strBuilder0.capacity());
      assertEquals(2, strBuilder0.length());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      strBuilder_StrBuilderReader0.mark(524);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.close();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(1163);
      assertEquals(1, strBuilder0.size());
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(" $)UBAyyh{bB@ZD5");
      assertFalse(strBuilder0.isEmpty());
      assertEquals(16, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.write(charArray0);
      assertFalse(strBuilder0.isEmpty());
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      strBuilder_StrBuilderWriter0.flush();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write(charArray0, 2135, 2135);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2135
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderWriter strBuilder_StrBuilderWriter0 = strBuilder0.new StrBuilderWriter();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderWriter0.write("java.awt.fonts", (-877), (-877));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.setNullText((String) null);
      assertEquals(4, strBuilder1.length());
      assertEquals(36, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      assertEquals(4, strBuilder0.length());
      
      strBuilder0.setLength(3);
      assertEquals(3, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      // Undeclared exception!
      try { 
        strBuilder0.setLength((-1060));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1060
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.appendNewLine();
      StrBuilder strBuilder2 = strBuilder1.appendFixedWidthPadRight(3, 3, '$');
      strBuilder2.setLength(8);
      assertEquals(8, strBuilder1.size());
      assertEquals(8, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("j");
      Object[] objectArray0 = new Object[3];
      objectArray0[1] = (Object) strBuilder0;
      strBuilder0.appendWithSeparators(objectArray0, (String) null);
      assertEquals(51, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      assertEquals(32, strBuilder0.capacity());
      
      StrBuilder strBuilder1 = strBuilder0.minimizeCapacity();
      strBuilder1.minimizeCapacity();
      assertEquals(0, strBuilder0.capacity());
      assertEquals(0, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("gydnw'aETQC}F4~%B");
      boolean boolean0 = strBuilder0.isEmpty();
      assertEquals(49, strBuilder0.capacity());
      assertFalse(boolean0);
      assertEquals(17, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.isEmpty();
      assertEquals(32, strBuilder0.capacity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-1130));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1130
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read();
      assertEquals(52, int0);
      assertEquals(36, strBuilder0.capacity());
      assertEquals(4, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.charAt(27);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 27
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1658);
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt((-1807), 'l');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1807
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.setCharAt(0, 'b');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 0
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, "BQ:8ohVQ");
      strBuilder1.setCharAt(0, 'b');
      assertEquals(8, strBuilder0.size());
      assertEquals(8, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-817));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -817
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4%}9");
      assertEquals(4, strBuilder0.size());
      
      strBuilder0.deleteCharAt(3);
      assertEquals(3, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt(3128);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3128
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("8(DqS4J");
      char[] charArray0 = strBuilder0.toCharArray();
      assertEquals(39, strBuilder0.capacity());
      assertArrayEquals(new char[] {'8', '(', 'D', 'q', 'S', '4', 'J'}, charArray0);
      assertEquals(7, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      strBuilder0.toCharArray();
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(66, 2517, '?');
      strBuilder1.toCharArray(66, 737);
      assertEquals(2521, strBuilder0.capacity());
      assertEquals(2521, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("WxU]Ft<w");
      char[] charArray0 = strBuilder0.toCharArray(3, 3);
      assertEquals(8, strBuilder0.length());
      assertEquals(0, charArray0.length);
      assertEquals(40, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ar@DWao~h9;jM");
      char[] charArray0 = new char[3];
      char[] charArray1 = strBuilder0.getChars(charArray0);
      assertEquals(13, charArray1.length);
      assertEquals(45, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[3];
      char[] charArray1 = strBuilder0.getChars(charArray0);
      assertEquals(32, strBuilder0.capacity());
      assertEquals(3, charArray1.length);
      assertEquals(0, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(3, 3, '?');
      strBuilder1.append(strBuilder0, 3, 3);
      assertEquals(10, strBuilder1.size());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        strBuilder0.getChars((-1305), (-1305), charArray0, (-1305));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1305
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(44, (-898), charArray0, 32);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -898
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(3);
      // Undeclared exception!
      try { 
        strBuilder0.getChars(114, 35, (char[]) null, 115);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 35
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.getChars(3146, 0, charArray0, 3123);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.setNewLineText("BQ:8ohVQ");
      strBuilder0.appendNewLine();
      assertEquals(8, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setNullText("1qgU6| \"<VkpD");
      strBuilder1.appendNull();
      assertFalse(strBuilder1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((String) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1280));
      StrBuilder strBuilder1 = strBuilder0.append((String) null, (-495), (-1280));
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("G8S##rxq*aN{\"");
      StrBuilder strBuilder1 = strBuilder0.append("", 0, 0);
      assertEquals(46, strBuilder1.capacity());
      assertEquals(14, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2440));
      // Undeclared exception!
      try { 
        strBuilder0.append("", 1232, (-133));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      // Undeclared exception!
      try { 
        strBuilder0.append("end < start", 2, (-1096));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      // Undeclared exception!
      try { 
        strBuilder0.append("4.}9", 3, 3);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(2);
      strBuilder0.append("end < start", 2, 2);
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(263);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0);
      assertEquals(263, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "java.version");
      strBuilder0.append(stringBuffer0);
      assertEquals(12, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StringBuffer stringBuffer0 = new StringBuffer("4.}9");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 0, (-1306));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.append((StringBuffer) null, 3, 3);
      assertEquals(36, strBuilder1.capacity());
      assertEquals(4, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4KY");
      StringBuffer stringBuffer0 = new StringBuffer("4.9");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, (-163), 57);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StringBuffer stringBuffer0 = new StringBuffer("4.9");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 5, 5);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "4.}9");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 3, Integer.MAX_VALUE);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2147483646
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4%}9");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "4%}9");
      // Undeclared exception!
      try { 
        strBuilder0.append(stringBuffer0, 3, 3);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "i&Wi'VAWX3:");
      StrBuilder strBuilder1 = strBuilder0.append(stringBuffer0, 0, 0);
      assertEquals(0, strBuilder1.length());
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("G8S##rxq*aN{\"");
      strBuilder0.append(strBuilder0);
      assertEquals(28, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("G8S##rxq*aN{\"");
      StrBuilder strBuilder1 = new StrBuilder();
      StrBuilder strBuilder2 = strBuilder0.append(strBuilder1);
      assertEquals(32, strBuilder1.capacity());
      assertEquals(14, strBuilder2.length());
      assertEquals(46, strBuilder2.capacity());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append((StrBuilder) null, 780, 780);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, (-3312), 780);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, 780, 780);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = new StrBuilder("UJDy.Eu-3oM_.'d.N_");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder1, 5, (-3398));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      // Undeclared exception!
      try { 
        strBuilder0.append(strBuilder0, 3, 3);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.append(strBuilder0, 0, 0);
      assertEquals(32, strBuilder1.capacity());
      assertEquals(0, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null);
      assertEquals(36, strBuilder1.capacity());
      assertEquals(4, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("g9");
      char[] charArray0 = new char[0];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0);
      assertEquals(34, strBuilder1.capacity());
      assertEquals(2, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.append((char[]) null, 3, 121);
      assertEquals(36, strBuilder1.capacity());
      assertEquals(4, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("WxU]Ft<w");
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, (-2145), (-105));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -105
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(3, 108, 'K');
      // Undeclared exception!
      try { 
        strBuilder1.append(strBuilder0.buffer, 42, (-4284));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -4284
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrTokenizer strTokenizer0 = StrTokenizer.getTSVInstance("Invalid startIndex: ");
      strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "Wb,)W)fe-");
      strBuilder0.replaceAll("user.country", "ZX9QdcosfI~#3");
      assertEquals(27, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PwNj5{NR0");
      char[] charArray0 = strBuilder0.getChars((char[]) null);
      // Undeclared exception!
      try { 
        strBuilder0.append(charArray0, 0, 44);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 44
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ar@DWao~h9;jM");
      char[] charArray0 = new char[3];
      StrBuilder strBuilder1 = strBuilder0.append(charArray0, 0, 0);
      assertEquals(45, strBuilder1.capacity());
      assertEquals(13, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      strBuilder0.append(false);
      assertEquals(9, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("keL");
      strBuilder0.append(true);
      assertEquals(7, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4HB9");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Object[]) null, "4HB9");
      assertEquals(4, strBuilder1.length());
      assertEquals(36, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("jav.wt.printerjob");
      Object[] objectArray0 = new Object[0];
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators(objectArray0, "?7aVA;o.j7MVl");
      assertEquals(17, strBuilder1.length());
      assertEquals(49, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object[] objectArray0 = new Object[6];
      strBuilder0.appendWithSeparators(objectArray0, "4.9");
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) null, "");
      assertEquals(36, strBuilder1.capacity());
      assertEquals(4, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Collection) linkedList0, "`TKt66UH");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(9);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.addLast("9UsRaY");
      strBuilder0.appendWithSeparators((Collection) linkedList0, (String) null);
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) "org.apache.commons.lang.text.StrBuilder$StrBuilderWriter");
      Integer integer0 = new Integer(15);
      linkedList0.add((Object) integer0);
      strBuilder0.appendWithSeparators((Collection) linkedList0, "`TKt66UH");
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) null, ":iQxw`W>fqS1kM,0");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrBuilder strBuilder1 = strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, (String) null);
      assertEquals(32, strBuilder1.capacity());
      assertEquals(0, strBuilder1.size());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Invalid offset: ");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      strBuilder0.appendWithSeparators((Iterator) strBuilder_StrBuilderTokenizer0, "");
      assertEquals(2, strBuilder_StrBuilderTokenizer0.nextIndex());
      assertEquals(70, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendPadding((-2407), 'i');
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      strBuilder0.appendPadding(2, 'z');
      assertEquals(5, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Integer integer0 = new Integer((-1405));
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) integer0, (-1405), 'W');
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      // Undeclared exception!
      try { 
        strBuilder0.appendFixedWidthPadLeft((Object) null, 3145, '\"');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(21, (-1955), '#');
      assertEquals(32, strBuilder1.capacity());
      assertTrue(strBuilder1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      // Undeclared exception!
      try { 
        strBuilder0.insert(771, (Object) "4.}9");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 771
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      // Undeclared exception!
      try { 
        strBuilder0.insert(771, (Object) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 771
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.insert(3, (char[]) null, 3, 3);
      assertEquals(36, strBuilder1.capacity());
      assertEquals(4, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      strBuilder0.insert(41, "org.apache.commons.lang.text.StrBuilder$StrBuilderReader");
      assertEquals(112, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      char[] charArray0 = new char[3];
      strBuilder0.insert(3, charArray0);
      assertEquals(7, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.insert(3, (char[]) null);
      assertEquals(4, strBuilder1.length());
      assertEquals(36, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      char[] charArray0 = new char[0];
      StrBuilder strBuilder0 = new StrBuilder(4163);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft(3166, 3166, '<');
      strBuilder1.insert(938, charArray0);
      assertEquals(3166, strBuilder0.size());
      assertEquals(4163, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      char[] charArray0 = new char[7];
      strBuilder0.insert(3, charArray0, 3, 3);
      assertEquals(7, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, (-2930), 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: -2930
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 1366, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid offset: 1366
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        strBuilder0.insert(0, charArray0, 1, (-2122));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -2122
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = new Object();
      strBuilder0.append(object0);
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        strBuilder0.insert(12, charArray0, 3, 3);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 3
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      StrBuilder strBuilder1 = strBuilder0.insert(0, charArray0, 1, 0);
      assertEquals(32, strBuilder1.capacity());
      assertEquals(0, strBuilder1.size());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".}9");
      strBuilder0.insert(3, false);
      assertEquals(8, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      strBuilder0.insert(4, true);
      assertEquals(8, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("WxU]Ft<w");
      StrBuilder strBuilder1 = strBuilder0.delete(3, 3);
      assertEquals(40, strBuilder1.capacity());
      assertEquals(8, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendNewLine();
      assertEquals(1, strBuilder0.length());
      
      strBuilder0.trim();
      assertTrue(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(".");
      strBuilder0.deleteAll('.');
      assertTrue(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("wBEEi5[*),j");
      strBuilder0.append((Object) "4.9");
      strBuilder0.deleteAll('j');
      assertEquals(36, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("PwNj5{NR0");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst('Y');
      assertEquals(9, strBuilder1.length());
      assertEquals(41, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4%}9");
      strBuilder0.deleteFirst('%');
      assertEquals(3, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteAll((String) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      strBuilder0.deleteAll("4.9");
      assertEquals(0, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Wx]Ft<w");
      strBuilder0.deleteFirst("Wx]Ft<w");
      assertEquals(0, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.deleteFirst((String) null);
      assertEquals(36, strBuilder1.capacity());
      assertEquals(4, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.deleteFirst("Wx]Ft<w");
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replace(0, 0, (String) null);
      assertEquals(32, strBuilder1.capacity());
      assertEquals(0, strBuilder1.size());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5.0");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('.', '.');
      assertEquals(35, strBuilder1.capacity());
      assertEquals(3, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5.0");
      StrBuilder strBuilder1 = strBuilder0.replaceAll('.', '%');
      assertEquals(3, strBuilder1.length());
      assertEquals(35, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceFirst(':', ':');
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendNewLine();
      strBuilder0.replaceFirst('*', 'j');
      assertEquals(1, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ar@DWao~h9;jM");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst('W', 'j');
      assertEquals(45, strBuilder1.capacity());
      assertEquals(13, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("!f>)|");
      StrBuilder strBuilder1 = strBuilder0.replaceAll((String) null, "!f>)|");
      assertEquals(37, strBuilder1.capacity());
      assertEquals(5, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.replaceAll("B!epD`z-s", (String) null);
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = strBuilder0.replaceAll("4.}9", "4.}9");
      assertEquals(36, strBuilder1.capacity());
      assertEquals(4, strBuilder1.size());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst((String) null, "4.9");
      assertEquals(35, strBuilder1.capacity());
      assertEquals(3, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("0", "0");
      assertEquals(1, strBuilder1.length());
      assertEquals(33, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      strBuilder0.replaceFirst("4.}9", "g$'Fsv0");
      strBuilder0.replaceFirst("g$'Fsv0", (String) null);
      assertEquals(0, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("YM(X^q(iXXR}L`rN");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("java.vm.version");
      strBuilder0.deleteFirst(strMatcher0);
      assertEquals(15, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Integer integer0 = new Integer(1730);
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadLeft((Object) integer0, 8, '_');
      strBuilder1.reverse();
      assertFalse(strBuilder0.isEmpty());
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.reverse();
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.trim();
      assertEquals(32, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(";m/+B%9-?btv");
      StrBuilder strBuilder1 = strBuilder0.trim();
      assertEquals(12, strBuilder1.size());
      assertEquals(44, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(";m/+B%9-?btv");
      strBuilder0.appendNewLine();
      strBuilder0.trim();
      assertEquals(12, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      boolean boolean0 = strBuilder0.startsWith("4.9");
      assertTrue(boolean0);
      assertEquals(35, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith((String) null);
      assertFalse(boolean0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("");
      assertEquals(32, strBuilder0.capacity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.startsWith("a@.&Ad:N");
      assertEquals(32, strBuilder0.capacity());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = strBuilder0.setLength(3146);
      boolean boolean0 = strBuilder1.startsWith("a@.&Ad:N");
      assertEquals(3146, strBuilder0.capacity());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      boolean boolean0 = strBuilder0.endsWith("java.vm.specification.name");
      assertFalse(boolean0);
      assertEquals(3, strBuilder0.length());
      assertEquals(35, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith((String) null);
      assertFalse(boolean0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.endsWith("");
      assertEquals(32, strBuilder0.capacity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      boolean boolean0 = strBuilder1.endsWith("t?[%>+ WeHc8");
      assertEquals(27, strBuilder0.length());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      boolean boolean0 = strBuilder0.endsWith("4.9");
      assertEquals(35, strBuilder0.capacity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      String string0 = strBuilder0.leftString(3);
      assertEquals("4.}", string0);
      assertEquals(36, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.leftString((-1000));
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      String string0 = strBuilder0.leftString(110);
      assertEquals(32, strBuilder0.capacity());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      String string0 = strBuilder0.rightString(3);
      assertEquals(".}9", string0);
      assertEquals(36, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("0");
      strBuilder0.rightString((-377));
      assertEquals(1, strBuilder0.length());
      assertEquals(33, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      String string0 = strBuilder0.rightString(6);
      assertEquals("4.}9", string0);
      assertEquals(36, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4%}9");
      String string0 = strBuilder0.midString(3, 3);
      assertEquals("9", string0);
      assertEquals(36, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      strBuilder0.midString((-1380), (-1380));
      assertEquals(3, strBuilder0.length());
      assertEquals(35, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.midString(97, 48);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4%}9");
      StrBuilder strBuilder1 = strBuilder0.appendFixedWidthPadRight(3, 3, '2');
      String string0 = strBuilder1.midString(3, 3);
      assertEquals(7, strBuilder0.length());
      assertEquals("9ja", string0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("5.0");
      boolean boolean0 = strBuilder0.contains('s');
      assertEquals(35, strBuilder0.capacity());
      assertEquals(3, strBuilder0.length());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(";m/+B%9-?btv");
      boolean boolean0 = strBuilder0.contains('/');
      assertTrue(boolean0);
      assertEquals(44, strBuilder0.capacity());
      assertEquals(12, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.contains("C4a1H");
      assertEquals(32, strBuilder0.capacity());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("u");
      boolean boolean0 = strBuilder0.contains("u");
      assertEquals(33, strBuilder0.capacity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.appendFixedWidthPadRight((Object) "j", 21, '.');
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("j");
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_StringMatcher0);
      assertFalse(strBuilder0.isEmpty());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      int int0 = strBuilder0.indexOf('r', (-3268));
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("B", "B");
      assertEquals(35, strBuilder1.capacity());
      assertEquals(3, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf("pS7~7cREl@2ipa", (-1));
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.indexOf((String) null, 1290);
      assertEquals((-1), int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder strBuilder1 = strBuilder0.replaceFirst("r&&PE>K1Ag;", "4.9");
      assertEquals(3, strBuilder1.length());
      assertEquals(35, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrMatcher.NoMatcher strMatcher_NoMatcher0 = new StrMatcher.NoMatcher();
      int int0 = strBuilder0.indexOf((StrMatcher) strMatcher_NoMatcher0, (-1823));
      assertEquals((-1), int0);
      assertEquals(36, strBuilder0.capacity());
      assertEquals(4, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("j");
      boolean boolean0 = strBuilder0.contains((StrMatcher) strMatcher_StringMatcher0);
      assertFalse(boolean0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1));
      int int0 = strBuilder0.lastIndexOf('I', 32);
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ar@DWao~h9;jM");
      int int0 = strBuilder0.lastIndexOf("u");
      assertEquals(13, strBuilder0.length());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      int int0 = strBuilder0.lastIndexOf("LINUX", 4);
      assertEquals((-1), int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("#w|j54R0");
      int int0 = strBuilder0.lastIndexOf((String) null);
      assertEquals((-1), int0);
      assertEquals(8, strBuilder0.length());
      assertEquals(40, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      int int0 = strBuilder0.lastIndexOf("");
      assertEquals(3, strBuilder0.length());
      assertEquals(35, strBuilder0.capacity());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append('u');
      int int0 = strBuilder0.lastIndexOf("-,uVj-_l%");
      assertFalse(strBuilder0.isEmpty());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = new Object();
      strBuilder0.append(object0);
      int int0 = strBuilder0.lastIndexOf("C4a1H");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(";m/+B%9-?btv");
      int int0 = strBuilder0.lastIndexOf(";m/+B%9-?btv");
      assertEquals(44, strBuilder0.capacity());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("WxU]Ft<w");
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("WxU]Ft<w");
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 3);
      assertEquals(8, strBuilder0.length());
      assertEquals(40, strBuilder0.capacity());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrMatcher strMatcher0 = StrMatcher.commaMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0);
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("[x*RpC?-'F]28");
      StrMatcher strMatcher0 = StrMatcher.trimMatcher();
      int int0 = strBuilder0.lastIndexOf(strMatcher0, 3);
      assertEquals((-1), int0);
      assertEquals(45, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ar@DWao~h9;jM");
      StrBuilder strBuilder1 = new StrBuilder("ar@DWao~h9;jM");
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder1);
      assertEquals(13, strBuilder1.length());
      assertEquals(45, strBuilder1.capacity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.equalsIgnoreCase(strBuilder0);
      assertEquals(32, strBuilder0.capacity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      Object object0 = new Object();
      StrBuilder strBuilder1 = strBuilder0.append(object0);
      StrBuilder strBuilder2 = new StrBuilder();
      boolean boolean0 = strBuilder2.equalsIgnoreCase(strBuilder1);
      assertEquals(27, strBuilder0.length());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder strBuilder1 = new StrBuilder("i&Wi'VAWX3:");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      assertEquals(43, strBuilder1.capacity());
      assertFalse(boolean0);
      assertEquals(32, strBuilder0.capacity());
      assertEquals(11, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder strBuilder1 = new StrBuilder("_^CJ");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      assertEquals(4, strBuilder1.length());
      assertFalse(boolean0);
      assertEquals(36, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder strBuilder1 = new StrBuilder("4.9");
      boolean boolean0 = strBuilder0.equals(strBuilder1);
      assertEquals(35, strBuilder1.capacity());
      assertTrue(boolean0);
      assertEquals(3, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      StrMatcher strMatcher0 = StrMatcher.spaceMatcher();
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals((Object) strMatcher0);
      assertEquals(32, strBuilder0.capacity());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      boolean boolean0 = strBuilder0.equals((Object) strBuilder0);
      assertEquals(32, strBuilder0.capacity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((String) null);
      strBuilder0.appendNewLine();
      strBuilder0.hashCode();
      assertEquals(1, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("ar@DWao~h9;jM");
      // Undeclared exception!
      try { 
        strBuilder0.delete((-1), (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      // Undeclared exception!
      try { 
        strBuilder0.delete(52, 52);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.}9");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      StrTokenizer strTokenizer0 = strBuilder_StrBuilderTokenizer0.reset("file.encoding");
      strBuilder0.appendWithSeparators((Iterator) strTokenizer0, "file.encoding");
      assertEquals(0, strTokenizer0.previousIndex());
      assertEquals(31, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder.StrBuilderTokenizer strBuilder_StrBuilderTokenizer0 = strBuilder0.new StrBuilderTokenizer();
      strBuilder_StrBuilderTokenizer0.reset("4.9");
      strBuilder_StrBuilderTokenizer0.getContent();
      assertEquals(3, strBuilder0.length());
      assertEquals(35, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      assertFalse(strBuilder_StrBuilderReader0.ready());
      
      int int0 = strBuilder_StrBuilderReader0.read();
      assertEquals(0, strBuilder0.size());
      assertEquals((-1), int0);
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[24];
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, (-53), (-53));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("4.9");
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      char[] charArray0 = new char[3];
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 1, 1);
      assertArrayEquals(new char[] {'\u0000', '4', '\u0000'}, charArray0);
      assertEquals(1, int0);
      assertEquals(3, strBuilder0.size());
      assertEquals(35, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      char[] charArray0 = new char[15];
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 0, (-2253));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[24];
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 3131, 3131);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[24];
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 19, 19);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[24];
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      // Undeclared exception!
      try { 
        strBuilder_StrBuilderReader0.read(charArray0, 1, Integer.MAX_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.text.StrBuilder$StrBuilderReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[5];
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 0, 0);
      assertEquals(32, strBuilder0.capacity());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[24];
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read(charArray0, 1, 1);
      assertEquals(0, strBuilder0.size());
      assertEquals(32, strBuilder0.capacity());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      char[] charArray0 = new char[24];
      strBuilder0.append('D');
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      int int0 = strBuilder_StrBuilderReader0.read(charArray0);
      assertEquals(1, strBuilder0.size());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip((-547L));
      assertEquals(32, strBuilder0.capacity());
      assertEquals(0L, long0);
      assertEquals(0, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrBuilder.StrBuilderReader strBuilder_StrBuilderReader0 = strBuilder0.new StrBuilderReader();
      long long0 = strBuilder_StrBuilderReader0.skip(669L);
      assertEquals(0, strBuilder0.size());
      assertEquals(0L, long0);
      assertFalse(strBuilder_StrBuilderReader0.ready());
      assertEquals(32, strBuilder0.capacity());
  }
}
