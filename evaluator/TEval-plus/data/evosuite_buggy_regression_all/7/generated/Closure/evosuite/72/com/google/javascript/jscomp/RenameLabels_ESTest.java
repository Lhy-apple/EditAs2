/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 29 18:07:42 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.RenameLabels;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RenameLabels_ESTest extends RenameLabels_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);
      Node node0 = Node.newString("=S12Bvof_XVw");
      Node node1 = new Node(126, node0, node0, node0, node0, 5, 42);
      // Undeclared exception!
      try { 
        renameLabels0.process(node0, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);
      Node node0 = Node.newString("=S12Bvof_XVw", 126, 126);
      Node node1 = new Node(117, node0, node0, node0);
      renameLabels0.process(node0, node1);
      assertEquals(20, Node.FINALLY_PROP);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);
      Node node0 = Node.newString("com.google.javascriptrhino.jstype.TernaryValue");
      Node node1 = new Node(116, node0, node0, node0);
      renameLabels0.process(node0, node1);
      assertEquals(49, Node.DIRECT_EVAL);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);
      Node node0 = Node.newString("=S12Bvof_XVw");
      Node node1 = new Node(126, node0, node0, node0, node0, 5, 1);
      RenameLabels.ProcessLabels renameLabels_ProcessLabels0 = renameLabels0.new ProcessLabels();
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, renameLabels_ProcessLabels0);
      // Undeclared exception!
      try { 
        renameLabels_ProcessLabels0.visit(nodeTraversal0, node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.RenameLabels$ProcessLabels", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);
      Node node0 = new Node(116, 116, 116);
      RenameLabels.ProcessLabels renameLabels_ProcessLabels0 = renameLabels0.new ProcessLabels();
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, renameLabels_ProcessLabels0);
      renameLabels_ProcessLabels0.visit(nodeTraversal0, node0, node0);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);
      Node node0 = Node.newString("");
      Node node1 = new Node(116, node0, node0, node0);
      // Undeclared exception!
      try { 
        renameLabels0.process(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);
      Node node0 = new Node(126);
      RenameLabels.ProcessLabels renameLabels_ProcessLabels0 = renameLabels0.new ProcessLabels();
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, renameLabels_ProcessLabels0);
      // Undeclared exception!
      try { 
        renameLabels_ProcessLabels0.visit(nodeTraversal0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
