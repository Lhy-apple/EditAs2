/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 29 19:29:29 GMT 2023
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attribute_ESTest extends Attribute_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attribute attribute0 = new Attribute("j#-qSI:E4Z\"", (String) null);
      String string0 = attribute0.html();
      assertEquals("j#-qSI:E4Z\"", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("n8[X", "n8[X");
      boolean boolean0 = attribute0.isDataAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("=0q7mQ-v5", "=0q7mQ-v5", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      assertSame(attributes1, attributes0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("data-", "data-");
      boolean boolean0 = attribute0.isDataAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attribute attribute0 = new Attribute("Uk(~e|7?90D", (String) null);
      Attribute attribute1 = attribute0.clone();
      boolean boolean0 = attribute0.equals(attribute1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("a\"iz`/)3<vwa^0lx", "a\"iz`/)3<vwa^0lx");
      attribute0.setKey("a\"iz`/)3<vwa^0lx");
      assertEquals("a\"iz`/)3<vwa^0lx", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("=0q7mQ-v5", "=0q7mQ-v5", attributes0);
      attribute0.setKey("=0q7mQ-v5");
      assertEquals("=0q7mQ-v5", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put(",EVsD0^!U/V", ",EVsD0^!U/V");
      Attribute attribute0 = new Attribute(",EVsD0^!U/V", ",EVsD0^!U/V", attributes1);
      attribute0.setKey(",EVsD0^!U/V");
      assertEquals(",EVsD0^!U/V", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("=0q7mQ-v5", "=0q7mQ-v5", attributes0);
      String string0 = attribute0.setValue("=0q7mQ-v5");
      assertEquals("=0q7mQ-v5", attribute0.getValue());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("voshade", "voshade");
      Attribute attribute0 = new Attribute("voshade", "voshade", attributes0);
      String string0 = attribute0.setValue("voshade");
      assertEquals("voshade", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = Attribute.isDataAttribute("data-+Vgv");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attribute attribute0 = new Attribute("UL7b'2M<Z/'T`L3L", "UL7b'2M<Z/'T`L3L");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      boolean boolean0 = attribute0.shouldCollapseAttribute(document_OutputSettings0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attribute attribute0 = new Attribute("         ", "");
      String string0 = attribute0.html();
      assertEquals("=\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("dclv6pduf;n'j%", "IF)m ");
      String string0 = attribute0.toString();
      assertEquals("dclv6pduf;n'j%=\"IF)m \"", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("noresize", "noresize");
      String string0 = attribute0.toString();
      assertEquals("noresize", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("sortable", "sortable");
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attribute attribute0 = new Attribute("]F;!G0jM", (String) null);
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("n8[X", "n8[X");
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("capton", "capton");
      boolean boolean0 = attribute0.equals(attribute0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attribute attribute0 = new Attribute("n8[X", "n8[X");
      boolean boolean0 = attribute0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("{&L\"V-XSU,", "{&L\"V-XSU,");
      boolean boolean0 = attribute0.equals("{&L\"V-XSU,");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attribute attribute0 = new Attribute("0;|jgilk", "0;|jgilk");
      Attribute attribute1 = new Attribute("?,9L`Yu<)'k^/)d-:3", "?,9L`Yu<)'k^/)d-:3");
      boolean boolean0 = attribute0.equals(attribute1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("n8[X", "n8[X");
      Attribute attribute1 = Attribute.createFromEncoded("n8[X", "n8[X");
      boolean boolean0 = attribute1.equals(attribute0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attribute attribute0 = new Attribute("n8[_", "n8[_");
      Attribute attribute1 = new Attribute("n8[_", (String) null);
      boolean boolean0 = attribute1.equals(attribute0);
      assertFalse(boolean0);
      assertTrue(attribute0.equals((Object)attribute1));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attribute attribute0 = new Attribute("j#-qSI:E4Z\"", (String) null);
      attribute0.hashCode();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("a\"iz`/)3<vwa^0lx", "a\"iz`/)3<vwa^0lx");
      attribute0.hashCode();
  }
}
