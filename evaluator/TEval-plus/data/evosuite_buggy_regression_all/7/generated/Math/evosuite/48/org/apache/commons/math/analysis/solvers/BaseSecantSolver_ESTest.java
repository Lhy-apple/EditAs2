/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 29 19:55:51 GMT 2023
 */

package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Asin;
import org.apache.commons.math.analysis.function.Asinh;
import org.apache.commons.math.analysis.function.Cbrt;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Asinh asinh0 = new Asinh();
      illinoisSolver0.solve(1406047547, (UnivariateRealFunction) asinh0, (-121.62170550645332), (double) 1406047547, (-121.62170550645332));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = pegasusSolver0.solve(1937459820, (UnivariateRealFunction) asinh0, (-952.9408112589), (double) 1937459820, allowedSolution0);
      assertEquals(1.93745982E9, pegasusSolver0.getMax(), 0.01);
      assertEquals((-1.0229396688129393E-12), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Asinh asinh0 = new Asinh();
      double double0 = illinoisSolver0.solve(1406047547, (UnivariateRealFunction) asinh0, 0.0, (double) 1406047547, 0.0);
      assertEquals(1.406047547E9, illinoisSolver0.getMax(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Asin asin0 = new Asin();
      double double0 = illinoisSolver0.solve(1406047547, (UnivariateRealFunction) asin0, (double) 1406047547, 0.0, (double) 1406047547);
      assertEquals(1.406047547E9, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1827.129886483848), (-1827.129886483848), (-1827.129886483848));
      Asinh asinh0 = new Asinh();
      double double0 = illinoisSolver0.solve(1406047547, (UnivariateRealFunction) asinh0, (-1827.129886483848), (double) 1406047547, (-1827.129886483848));
      assertEquals((-1827.129886483848), illinoisSolver0.getStartValue(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      Cbrt cbrt0 = new Cbrt();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = regulaFalsiSolver0.solve(762, (UnivariateRealFunction) cbrt0, (-983.049), (double) 762, allowedSolution0);
      assertEquals((-110.52449999999999), regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals((-4.358096165068502E-7), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      Asinh asinh0 = new Asinh();
      double double0 = illinoisSolver0.solve(1406047547, (UnivariateRealFunction) asinh0, (-1827.129886483848), (double) 1406047547, (-1827.129886483848));
      assertEquals((-1827.129886483848), illinoisSolver0.getStartValue(), 0.01);
      assertEquals((-1.263735520585545E-18), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = pegasusSolver0.solve(1943872504, (UnivariateRealFunction) asinh0, (-2382.27799169969), (double) 1943872504, allowedSolution0);
      assertEquals(9.719350608610042E8, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(4.630368043505274E-12, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = pegasusSolver0.solve(1406047547, (UnivariateRealFunction) asinh0, (-179.99462059357182), (double) 1406047547, allowedSolution0);
      assertEquals(7.030236835026897E8, pegasusSolver0.getStartValue(), 0.01);
      assertEquals((-1.5143684066617168E-8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = pegasusSolver0.solve(1406047547, (UnivariateRealFunction) asinh0, (-145.0436255901867), (double) 1406047547, allowedSolution0);
      assertEquals(7.030237009781872E8, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(7.858267049500479E-12, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = pegasusSolver0.solve(1943872504, (UnivariateRealFunction) asinh0, (-2382.27799169969), (double) 1943872504, allowedSolution0);
      assertEquals(9.719350608610042E8, pegasusSolver0.getStartValue(), 0.01);
      assertEquals((-2.667092019986652E-23), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      double double0 = pegasusSolver0.solve(1945230486, (UnivariateRealFunction) asinh0, (-928.1348678869796), 2100.701381754358, allowedSolution0);
      assertEquals(586.2832569336891, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(2.1816468603431293E-21, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double0 = pegasusSolver0.solve(1406047547, (UnivariateRealFunction) asinh0, (-189.76052251172734), (double) 1406047547, allowedSolution0);
      assertEquals(7.030236786197388E8, pegasusSolver0.getStartValue(), 0.01);
      assertEquals((-1.6812203612070204E-25), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = pegasusSolver0.solve(1406047547, (UnivariateRealFunction) asinh0, (-179.99462059357182), (double) 1406047547, allowedSolution0);
      assertEquals(7.030236835026897E8, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(3.1377540775903015E-16, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      PegasusSolver pegasusSolver0 = new PegasusSolver(1406047592, (-342.8));
      AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
      double double0 = pegasusSolver0.solve(1406047592, (UnivariateRealFunction) asinh0, (-342.8), 1.0, allowedSolution0);
      assertEquals((-170.9), pegasusSolver0.getStartValue(), 0.01);
      assertEquals((-39.88366533796374), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      PegasusSolver pegasusSolver0 = new PegasusSolver();
      AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
      double double0 = pegasusSolver0.solve(1633951492, (UnivariateRealFunction) asinh0, (-2.6033824355191673E-8), (double) 1633951492, allowedSolution0);
      assertEquals(8.16975746E8, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(7.466506746212076E-9, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Asinh asinh0 = new Asinh();
      PegasusSolver pegasusSolver0 = new PegasusSolver(1406047547, 1406047547, (-169.01476989010024));
      AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
      double double0 = pegasusSolver0.solve(1406047547, (UnivariateRealFunction) asinh0, (-169.01476989010024), (double) 1406047547, allowedSolution0);
      assertEquals(7.03023688992615E8, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(2.968640558897536E8, double0, 0.01);
  }
}
