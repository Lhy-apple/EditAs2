/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 29 20:06:32 GMT 2023
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.internal.verification.api.VerificationData;
import org.mockito.verification.Timeout;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-4356L), (-4356L), (VerificationMode) null, true);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-4356L), long0);
      assertEquals((-4356L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, (VerificationMode) null, false);
      VerificationMode verificationMode0 = verificationOverTimeImpl0.getDelegate();
      assertNull(verificationMode0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, (VerificationMode) null, true);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Timeout timeout0 = new Timeout((-833L), (VerificationMode) null);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-833L), 1815L, timeout0, false);
      // Undeclared exception!
      verificationOverTimeImpl0.verify((VerificationData) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-4368L), (-4368L), (VerificationMode) null, true);
      VerificationOverTimeImpl verificationOverTimeImpl1 = new VerificationOverTimeImpl((-4368L), 10L, verificationOverTimeImpl0, true);
      verificationOverTimeImpl1.verify((VerificationData) null);
      assertEquals(10L, verificationOverTimeImpl1.getDuration());
      assertEquals((-4368L), verificationOverTimeImpl1.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AtMost atMost0 = new AtMost(3);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(10L, 10L, atMost0, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertEquals(10L, verificationOverTimeImpl0.getDuration());
      assertFalse(boolean0);
      assertEquals(10L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(251L, 251L, noMoreInteractions0, false);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertFalse(boolean0);
      assertEquals(251L, verificationOverTimeImpl0.getDuration());
      assertEquals(251L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(251L, 251L, (VerificationMode) null, false);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure((VerificationMode) null);
      assertEquals(251L, verificationOverTimeImpl0.getDuration());
      assertTrue(boolean0);
      assertEquals(251L, verificationOverTimeImpl0.getPollingPeriod());
  }
}
