/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 29 20:05:41 GMT 2023
 */

package org.mockito.internal.invocation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hamcrest.text.IsEqualIgnoringWhiteSpace;
import org.junit.runner.RunWith;
import org.mockito.Answers;
import org.mockito.internal.creation.util.MockitoMethodProxy;
import org.mockito.internal.invocation.InvocationImpl;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.invocation.MockitoMethod;
import org.mockito.internal.invocation.realmethod.DefaultRealMethod;
import org.mockito.internal.stubbing.StubbedInvocationMatcher;
import org.mockito.invocation.Invocation;
import org.mockito.invocation.Location;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvocationMatcher_ESTest extends InvocationMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[2];
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod(mockitoMethodProxy0);
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, objectArray0, 8192, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
      try { 
        invocationMatcher0.hasSimilarMethod(invocationImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod(mockitoMethodProxy0);
      Answers answers0 = Answers.RETURNS_SMART_NULLS;
      IsEqualIgnoringWhiteSpace isEqualIgnoringWhiteSpace0 = new IsEqualIgnoringWhiteSpace("5]S|zv+mdY^a.");
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[3];
      InvocationImpl invocationImpl0 = new InvocationImpl(isEqualIgnoringWhiteSpace0, mockitoMethod0, objectArray0, 1881, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      StubbedInvocationMatcher stubbedInvocationMatcher0 = new StubbedInvocationMatcher(invocationMatcher0, answers0);
      Location location0 = stubbedInvocationMatcher0.getLocation();
      assertNotNull(location0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod(mockitoMethodProxy0);
      IsEqualIgnoringWhiteSpace isEqualIgnoringWhiteSpace0 = new IsEqualIgnoringWhiteSpace("5]S|zv+mdY^a.");
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[3];
      InvocationImpl invocationImpl0 = new InvocationImpl(isEqualIgnoringWhiteSpace0, mockitoMethod0, objectArray0, 1881, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
      try { 
        invocationMatcher0.toString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(invocation0).getMock();
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[10];
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod(mockitoMethodProxy0);
      InvocationImpl invocationImpl0 = new InvocationImpl(defaultRealMethod0, mockitoMethod0, objectArray0, (-2248), defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      boolean boolean0 = invocationMatcher0.matches(invocation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null, (Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[10];
      MockitoMethodProxy mockitoMethodProxy0 = mock(MockitoMethodProxy.class, new ViolatedAssumptionAnswer());
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod(mockitoMethodProxy0);
      InvocationImpl invocationImpl0 = new InvocationImpl(defaultRealMethod0, mockitoMethod0, objectArray0, (-2248), defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
      try { 
        invocationMatcher0.matches(invocationImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<Invocation> linkedList0 = new LinkedList<Invocation>();
      List<InvocationMatcher> list0 = InvocationMatcher.createFrom(linkedList0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<Invocation> linkedList0 = new LinkedList<Invocation>();
      linkedList0.add((Invocation) null);
      // Undeclared exception!
      try { 
        InvocationMatcher.createFrom(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }
}
