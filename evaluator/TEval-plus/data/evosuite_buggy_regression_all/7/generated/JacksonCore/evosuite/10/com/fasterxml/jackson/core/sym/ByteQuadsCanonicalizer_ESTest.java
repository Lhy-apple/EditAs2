/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 29 18:47:36 GMT 2023
 */

package com.fasterxml.jackson.core.sym;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteQuadsCanonicalizer_ESTest extends ByteQuadsCanonicalizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      int int0 = byteQuadsCanonicalizer0.hashSeed();
      assertEquals(839877741, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(2);
      int int0 = byteQuadsCanonicalizer0.bucketCount();
      assertEquals(2, byteQuadsCanonicalizer0.hashSeed());
      assertEquals(0, byteQuadsCanonicalizer0.size());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(6000);
      byteQuadsCanonicalizer1.addName("ITN_FILDUNAMES", 6001, 6001);
      byteQuadsCanonicalizer1.release();
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      byteQuadsCanonicalizer0.release();
      assertEquals(839877741, byteQuadsCanonicalizer0.hashSeed());
      assertEquals(0, byteQuadsCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);
      assertFalse(byteQuadsCanonicalizer1.maybeDirty());
      
      byteQuadsCanonicalizer1.release();
      assertEquals(839877741, byteQuadsCanonicalizer1.hashSeed());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(6000);
      byteQuadsCanonicalizer1._count = 6000;
      byteQuadsCanonicalizer1.addName("ITN_FILDUNAMES", 6001, 6001);
      byteQuadsCanonicalizer1.release();
      assertEquals(6001, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(10);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(10);
      int int0 = byteQuadsCanonicalizer1.size();
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(0, int0);
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertFalse(byteQuadsCanonicalizer1.maybeDirty());
      assertEquals(10, byteQuadsCanonicalizer1.hashSeed());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(10);
      int int0 = byteQuadsCanonicalizer0.size();
      assertEquals(0, int0);
      assertEquals(10, byteQuadsCanonicalizer0.hashSeed());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(2340);
      byteQuadsCanonicalizer1.addName(",xr}f-\"1j`1LLv@)=2", 2340, 2340);
      byteQuadsCanonicalizer1.toString();
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(195);
      byteQuadsCanonicalizer1._hashSize = 195;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 195, 195);
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[4];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(1);
      byteQuadsCanonicalizer0._hashSize = 1;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[3] = 1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[14];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      assertEquals(0, byteQuadsCanonicalizer0.hashSeed());
      
      byteQuadsCanonicalizer0.findName(intArray0, 1);
      assertEquals(0, byteQuadsCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[5];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[3] = 1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      int[] intArray0 = new int[7];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 0, 424, 414);
      byteQuadsCanonicalizer1.addName("ku-S{.,Q7<]ggB", byteQuadsCanonicalizer0._hashArea, 1);
      byteQuadsCanonicalizer1.findName(byteQuadsCanonicalizer0._hashArea, (-1306));
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[14];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._secondaryStart = 1;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      assertEquals(0, byteQuadsCanonicalizer0.hashSeed());
      
      intArray0[3] = 4;
      byteQuadsCanonicalizer0.findName(intArray0, 1);
      assertEquals(0, byteQuadsCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[6];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      assertEquals(0, byteQuadsCanonicalizer0.hashSeed());
      
      byteQuadsCanonicalizer0.findName(intArray0, 2);
      assertEquals(0, byteQuadsCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[23];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[3] = 2;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-8));
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("Z%m[!M", (-8), 0);
      byteQuadsCanonicalizer1.findName(1, (-8));
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 1, 4);
      byteQuadsCanonicalizer1.findName(2, 4);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 1, 1, 1);
      byteQuadsCanonicalizer1.findName(2, 19);
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(2461);
      byteQuadsCanonicalizer1.findName(2461, 2461, 2461);
      assertEquals(0, byteQuadsCanonicalizer1.size());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(839877741, byteQuadsCanonicalizer1.hashSeed());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 1, 2881, 1);
      byteQuadsCanonicalizer1.findName(1, 1, 1);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=1, 0/0/0/110 pri/sec/ter/spill (=0), total:110]", 1, 1, 1);
      byteQuadsCanonicalizer1.findName(1, 1, 1);
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("g+6&/VI!", 1642);
      byteQuadsCanonicalizer1.addName("g+6&/VI!", 1642, 1, 1642);
      byteQuadsCanonicalizer1.findName(1642, 1, 2);
      assertEquals(2, byteQuadsCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("b-pxQ4n;)_U?<ZAm[", 1903, 1737);
      byteQuadsCanonicalizer1.findName(2, 1, 2);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("g+6&/VI!", 1642);
      byteQuadsCanonicalizer1.addName("g+6&/VI!", 1642, 1, 1642);
      byteQuadsCanonicalizer1.findName(1642, 266, 266);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("g+6&/VI!", 1642);
      byteQuadsCanonicalizer1.addName("g+6&/VI!", (-2083), 1, 1642);
      byteQuadsCanonicalizer1.findName((-2083), 1, 1642);
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int[] intArray0 = new int[9];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      String string0 = byteQuadsCanonicalizer0.findName(intArray0, 4);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[9];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      int[] intArray1 = new int[6];
      intArray1[3] = 4;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      int[] intArray0 = new int[7];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 388);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 0, 424, 414);
      byteQuadsCanonicalizer1.addName("ku-S{.,Q7<]ggB", byteQuadsCanonicalizer0._hashArea, 1);
      byteQuadsCanonicalizer1.findName(byteQuadsCanonicalizer0._hashArea, 1);
      assertEquals(4, byteQuadsCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[8];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._tertiaryStart = 1;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[3] = 4;
      String string0 = byteQuadsCanonicalizer0.findName(intArray0, 1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[6];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      byteQuadsCanonicalizer0._spilloverEnd = 4;
      intArray0[3] = 4;
      byteQuadsCanonicalizer0.findName(intArray0, (-1794));
      assertEquals(1, byteQuadsCanonicalizer0.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[8];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(1);
      byteQuadsCanonicalizer0._hashSize = 1;
      byteQuadsCanonicalizer0._spilloverEnd = 1;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[3] = 1;
      byteQuadsCanonicalizer0._spilloverEnd = 393;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(393);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[8];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      byteQuadsCanonicalizer0._hashSize = 1;
      byteQuadsCanonicalizer0._spilloverEnd = 1;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      int[] intArray1 = new int[26];
      intArray1[0] = 1;
      intArray1[22] = 1;
      intArray1[3] = 1;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      byteQuadsCanonicalizer0._spilloverEnd = 393;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[21];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(1);
      byteQuadsCanonicalizer0._hashSize = 1;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      byteQuadsCanonicalizer0._tertiaryStart = 1;
      intArray0[3] = 1;
      String string0 = byteQuadsCanonicalizer0.findName(1, 1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int[] intArray0 = new int[6];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      byteQuadsCanonicalizer0._spilloverEnd = 4;
      intArray0[3] = 4;
      String string0 = byteQuadsCanonicalizer0.findName(intArray0, 2);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[11];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashSize = 1;
      byteQuadsCanonicalizer0._spilloverEnd = 1;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      int[] intArray1 = new int[26];
      intArray1[3] = 1;
      intArray1[7] = 1;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      byteQuadsCanonicalizer0._spilloverEnd = 393;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(1);
      byteQuadsCanonicalizer0._hashSize = 1;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[3] = 1;
      byteQuadsCanonicalizer0.findName(1, 1, 1);
      assertEquals((-2), byteQuadsCanonicalizer0.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int[] intArray0 = new int[8];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._tertiaryStart = 1;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[3] = 4;
      byteQuadsCanonicalizer0.findName(0, 0, 0);
      assertEquals(0, byteQuadsCanonicalizer0.size());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int[] intArray0 = new int[8];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[3] = 1;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      byteQuadsCanonicalizer0._spilloverEnd = 1;
      String string0 = byteQuadsCanonicalizer0.findName(0, 0, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int[] intArray0 = new int[11];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashSize = 1;
      byteQuadsCanonicalizer0._spilloverEnd = 1;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      int[] intArray1 = new int[26];
      intArray1[3] = 1;
      intArray1[7] = 1;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      byteQuadsCanonicalizer0._spilloverEnd = 393;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(1, 256, (-366));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int[] intArray0 = new int[9];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[6] = 4;
      byteQuadsCanonicalizer0._spilloverEnd = 36;
      intArray0[3] = 36;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int[] intArray0 = new int[6];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      int[] intArray1 = new int[10];
      intArray1[3] = 1;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      byteQuadsCanonicalizer0._tertiaryStart = 1;
      String string0 = byteQuadsCanonicalizer0.findName(intArray0, 4);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int[] intArray0 = new int[8];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      int[] intArray1 = new int[9];
      intArray1[3] = 1;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      byteQuadsCanonicalizer0._spilloverEnd = 1;
      String string0 = byteQuadsCanonicalizer0.findName(intArray0, 4);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int[] intArray0 = new int[8];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[3] = 1;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      byteQuadsCanonicalizer0._spilloverEnd = 1;
      String string0 = byteQuadsCanonicalizer0.findName(intArray0, 4);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int[] intArray0 = new int[10];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      int[] intArray1 = new int[5];
      intArray1[3] = 5;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int[] intArray0 = new int[9];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      int[] intArray1 = new int[6];
      intArray1[3] = 8;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int[] intArray0 = new int[9];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      int[] intArray1 = new int[6];
      intArray1[3] = 9;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(248);
      byteQuadsCanonicalizer1.addName("Failed rehash(): old count=", 249);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(2466);
      byteQuadsCanonicalizer1.addName("ITERN_FIELD_NAMES", 1, 2466, 1);
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int[] intArray0 = new int[7];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1024);
      byteQuadsCanonicalizer1.addName((String) null, intArray0, 4);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int[] intArray0 = new int[4];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(1);
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[3] = 1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName("8g", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int[] intArray0 = new int[15];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot((-22));
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[3] = (-22);
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName("8g", (-22));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName("-", intArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(2379);
      byteQuadsCanonicalizer1._count = 2379;
      byteQuadsCanonicalizer1.addName("ITERN_FIELD_NAMES", 2380, 2379, 2380);
      int[] intArray0 = new int[9];
      intArray0[3] = 2380;
      byteQuadsCanonicalizer1._hashArea = intArray0;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.addName("ITERN_FIELD_NAMES", 2379, (-1573));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);
      byteQuadsCanonicalizer1._hashSize = 1;
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 1, 1, 1);
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 0, 0, 4);
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 4, 19);
      int[] intArray0 = new int[5];
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", intArray0, 4);
      byteQuadsCanonicalizer1.addName("[com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: size=0, hashSize=0, 0/0/0/0 pri/sec/ter/spill (=0), total:0]", 1714);
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      byteQuadsCanonicalizer0._hashSize = 6000;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0._reportTooManyCollisions();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Spill-over slots in symbol table with 0 entries, hash area of 6000 slots is now full (all 750 slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1375);
      byteQuadsCanonicalizer1._count = 1375;
      byteQuadsCanonicalizer1.addName("", 1376, 1375, 1376);
      byteQuadsCanonicalizer1._hashSize = 1376;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.addName("", 1375, 1375);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Failed rehash(): old count=1376, copyCount=1
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = ByteQuadsCanonicalizer._calcTertiaryShift(487);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(2379);
      byteQuadsCanonicalizer1._count = 2379;
      byteQuadsCanonicalizer1.addName("ITERN_FIELD_NAMES", 2380, 2379, 2380);
      byteQuadsCanonicalizer1._hashSize = 2380;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.addName("ITERN_FIELD_NAMES", 2379, (-1573));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4740
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }
}
