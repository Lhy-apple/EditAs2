/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 23:36:14 GMT 2023
 */

package org.apache.commons.math.ode.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.events.EventHandler;
import org.apache.commons.math.ode.events.EventState;
import org.apache.commons.math.ode.sampling.DummyStepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EventState_ESTest extends EventState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eventHandler0).toString();
      EventState eventState0 = new EventState(eventHandler0, 1895.1111184, 1895.1111184, 3);
      eventState0.getEventHandler();
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals(3, eventState0.getMaxIterationCount());
      assertEquals(1895.1111184, eventState0.getMaxCheckInterval(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, (-3247.7729958846485), 0);
      int int0 = eventState0.getMaxIterationCount();
      assertEquals(0, int0);
      assertFalse(eventState0.stop());
      assertEquals(2.2250738585072014E-308, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(3247.7729958846485, eventState0.getConvergence(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, 2.2250738585072014E-308, (-2310));
      double double0 = eventState0.getEventTime();
      assertEquals(2.2250738585072014E-308, eventState0.getMaxCheckInterval(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals((-2310), eventState0.getMaxIterationCount());
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, 2.2250738585072014E-308, (-2310));
      double double0 = eventState0.getMaxCheckInterval();
      assertFalse(eventState0.stop());
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals((-2310), eventState0.getMaxIterationCount());
      assertEquals(2.2250738585072014E-308, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, 2.2250738585072014E-308, (-2310));
      double double0 = eventState0.getConvergence();
      assertFalse(eventState0.stop());
      assertEquals((-2310), eventState0.getMaxIterationCount());
      assertEquals(2.2250738585072014E-308, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertEquals(2.2250738585072014E-308, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((-337.6137)).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventState eventState0 = new EventState(eventHandler0, 0.0, 0.0, 3);
      double[] doubleArray0 = new double[2];
      eventState0.reinitializeBegin(3, doubleArray0);
      assertFalse(eventState0.stop());
      assertEquals(3, eventState0.getMaxIterationCount());
      assertEquals(0.0, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(2999.10949).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, 2.2250738585072014E-308, (-2310));
      double[] doubleArray0 = new double[1];
      eventState0.reinitializeBegin((-3247.7729958846485), doubleArray0);
      assertEquals(2.2250738585072014E-308, eventState0.getMaxCheckInterval(), 0.01);
      assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
      assertFalse(eventState0.stop());
      assertEquals((-2310), eventState0.getMaxIterationCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(2999.10949, 2999.10949, (-3247.7729958846485), 1.0, 2.2250738585072014E-308).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, (-3247.7729958846485), 0);
      double[] doubleArray0 = new double[5];
      eventState0.stepAccepted(1.0, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      eventState0.evaluateStep(dummyStepInterpolator0);
      eventState0.stepAccepted(2999.10949, doubleArray0);
      boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
      assertEquals(2999.10949, dummyStepInterpolator0.getInterpolatedTime(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      doReturn(2999.10949, 2999.10949, (-3247.7729958846485), 1.0, 2.2250738585072014E-308).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, (-3247.7729958846485), 0);
      double[] doubleArray0 = new double[5];
      eventState0.stepAccepted(1.0, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      dummyStepInterpolator0.storeTime(2.2250738585072014E-308);
      eventState0.evaluateStep(dummyStepInterpolator0);
      eventState0.stepAccepted(2999.10949, doubleArray0);
      boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
      assertEquals((-248.66350728121785), dummyStepInterpolator0.getInterpolatedTime(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      doReturn(2999.10949, 2999.10949, (-3247.7729958846485), 1.0, 2.2250738585072014E-308).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, 2.2250738585072014E-308, 0);
      double[] doubleArray0 = new double[5];
      eventState0.stepAccepted(2.2250738585072014E-308, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      dummyStepInterpolator0.storeTime(1.0);
      eventState0.evaluateStep(dummyStepInterpolator0);
      eventState0.stepAccepted(Double.POSITIVE_INFINITY, doubleArray0);
      // Undeclared exception!
      eventState0.evaluateStep(dummyStepInterpolator0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      doReturn(2999.10949, 2999.10949, (-3247.7729958846485), 1.0, 2.2250738585072014E-308).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, 2.2250738585072014E-308, 0);
      double[] doubleArray0 = new double[0];
      eventState0.stepAccepted(2.2250738585072014E-308, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
      dummyStepInterpolator0.storeTime(2999.10949);
      eventState0.evaluateStep(dummyStepInterpolator0);
      eventState0.stepAccepted((-3247.7729958846485), doubleArray0);
      eventState0.evaluateStep(dummyStepInterpolator0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, 2.2250738585072014E-308, (-2310));
      eventState0.stop();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      doReturn(2999.10949, 2999.10949, (-3247.7729958846485), 1.0, 2.2250738585072014E-308).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, 2.2250738585072014E-308, 0);
      double[] doubleArray0 = new double[0];
      eventState0.stepAccepted(2.2250738585072014E-308, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
      dummyStepInterpolator0.storeTime(2999.10949);
      eventState0.evaluateStep(dummyStepInterpolator0);
      eventState0.stepAccepted((-3247.7729958846485), doubleArray0);
      eventState0.stop();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(2999.10949, 2999.10949, (-3247.7729958846485), 1.0, 2.2250738585072014E-308).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, 2.2250738585072014E-308, (-2310));
      double[] doubleArray0 = new double[1];
      eventState0.stepAccepted(2.2250738585072014E-308, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      dummyStepInterpolator0.storeTime((-3247.7729958846485));
      eventState0.evaluateStep(dummyStepInterpolator0);
      eventState0.reset((-2271.001064063145), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EventState eventState0 = new EventState((EventHandler) null, (-123.01456424717982), (-591.9609041), 3);
      eventState0.reset(2423.9094724900156, (double[]) null);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      doReturn(2999.10949, 2999.10949, (-3247.7729958846485), 1.0, 2.2250738585072014E-308).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, 2.2250738585072014E-308, 1);
      double[] doubleArray0 = new double[0];
      eventState0.stepAccepted(2.2250738585072014E-308, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      dummyStepInterpolator0.storeTime((-3247.7729958846485));
      eventState0.evaluateStep(dummyStepInterpolator0);
      eventState0.stepAccepted(1.0, doubleArray0);
      eventState0.reset((-2271.001064063145), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(2).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      doReturn(2999.10949, 2999.10949, (-3247.7729958846485), 1.0, 2.2250738585072014E-308).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventState eventState0 = new EventState(eventHandler0, 2.2250738585072014E-308, 2.2250738585072014E-308, (-2310));
      double[] doubleArray0 = new double[1];
      eventState0.stepAccepted(2.2250738585072014E-308, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      dummyStepInterpolator0.storeTime((-3247.7729958846485));
      eventState0.evaluateStep(dummyStepInterpolator0);
      eventState0.stepAccepted(1.0, doubleArray0);
      eventState0.reset((-2271.001064063145), doubleArray0);
  }
}
