/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 23:16:04 GMT 2023
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.Charset;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.CombiningEvaluator;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.StructuralEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Evaluator_ESTest extends Evaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(536);
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_IndexEquals0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent:eq(536)", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Document document0 = Document.createShell("BetwenDoctypePublcAdSystemIdknXifiers");
      Elements elements0 = document0.getElementsByIndexLessThan((-1498));
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan((-2902));
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IndexLessThan0);
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(structuralEvaluator_PreviousSibling0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent:prev*:lt(-2902)", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_IsLastChild0);
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertEquals(":prev:last-child", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("/t-.&kYRn|_[/", "/t-.&kYRn|_[/");
      Evaluator[] evaluatorArray0 = new Evaluator[4];
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_AttributeWithValueStarting0);
      evaluatorArray0[0] = (Evaluator) structuralEvaluator_Parent0;
      evaluatorArray0[2] = (Evaluator) evaluator_AttributeWithValueStarting0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Document document0 = Document.createShell("");
      Charset charset0 = document0.charset();
      document0.charset(charset0);
      assertFalse(document0.isBlock());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("nullChar", "html");
      String string0 = evaluator_AttributeWithValue0.toString();
      assertEquals("[nullchar=html]", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("'\"S", "'\"S");
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_AttributeWithValueNot0);
      String string0 = structuralEvaluator_Parent0.toString();
      assertEquals(":parent['\"s!='\"s]", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan((-109257940));
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_IndexGreaterThan0);
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertEquals(":prev:gt(-109257940)", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_IsOnlyOfType0);
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertEquals(":prev:only-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType((-948), (-948));
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthLastOfType0);
      String string0 = structuralEvaluator_Has0.toString();
      assertEquals(":has(:nth-last-of-type(-948n-948))", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IsEmpty0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*:empty", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("html", (Pattern) null);
      // Undeclared exception!
      try { 
        evaluator_AttributeWithValueMatching0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$AttributeWithValueMatching", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstChild0);
      String string0 = structuralEvaluator_Has0.toString();
      assertEquals(":has(:first-child)", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("m4", "\"S");
      String string0 = evaluator_AttributeWithValueEnding0.toString();
      assertEquals("[m4$=\"s]", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_IsOnlyChild0);
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(structuralEvaluator_ImmediateParent0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*:ImmediateParent:only-child", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("[%s]");
      String string0 = evaluator_AttributeStarting0.toString();
      assertEquals("[^[%s]]", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      String string0 = evaluator_IsRoot0.toString();
      assertEquals(":root", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(3209, (-2196));
      String string0 = evaluator_IsNthOfType0.toString();
      assertEquals(":nth-of-type(3209n-2196)", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("R'#root", "R'#root");
      Tag tag0 = Tag.valueOf("R'#root");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("R'#root", "R'#root");
      Element element0 = new Element(tag0, "R'#root", attributes1);
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("'#root", "'#root");
      String string0 = evaluator_AttributeWithValueContaining0.toString();
      assertEquals("['#root*='#root]", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Document document0 = Document.createShell("html");
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches((Pattern) null);
      // Undeclared exception!
      try { 
        evaluator_Matches0.matches(document0, document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches((Pattern) null);
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_Matches0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent:matches(null)", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("org.jsoup.select.Evaluator$IsRoot");
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_ContainsText0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent:contains(org.jsoup.select.evaluator$isroot)", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Document document0 = Document.createShell("aR P[/i8}Cp");
      Elements elements0 = document0.getElementsContainingText("aR P[/i8}Cp");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-3753), (-54));
      Document document0 = Document.createShell("");
      int int0 = evaluator_IsNthChild0.calculatePosition(document0, document0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("'V");
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_ContainsData0);
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertEquals(":prev:containsData('v)", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Document document0 = Document.createShell("\"");
      Evaluator[] evaluatorArray0 = new Evaluator[3];
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("\"");
      evaluatorArray0[0] = (Evaluator) evaluator_ContainsData0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      // Undeclared exception!
      try { 
        combiningEvaluator_Or0.matches(document0, document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.CombiningEvaluator$Or", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Document document0 = Document.createShell("aR P[/i8}Cp");
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("aR P[/i8}Cp");
      boolean boolean0 = evaluator_Id0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("2:c6-h#&");
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_Id0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*#2:c6-h#&", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Evaluator.Class evaluator_Class0 = new Evaluator.Class("");
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_Class0);
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertEquals(":prev.", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Document document0 = Document.createShell("\"");
      Elements elements0 = document0.getElementsByClass("?9xajtw'Wt~7i7%.@");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(1, 1);
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_IsNthLastChild0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent:nth-last-child(1n+1)", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(1, 1);
      boolean boolean0 = evaluator_IsNthLastChild0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Document document0 = Document.createShell("");
      Elements elements0 = document0.getElementsMatchingOwnText("");
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("eVYM!X@'^aqp");
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      String string0 = evaluator_MatchesOwn0.toString();
      assertEquals(":matchesOwn(eVYM!X@'^aqp)", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsLastOfType0);
      String string0 = structuralEvaluator_Has0.toString();
      assertEquals(":has(:last-of-type)", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      Document document0 = Document.createShell("aR P[/i8}Cp");
      Element element0 = document0.createElement("aR P[/i8}Cp");
      Evaluator[] evaluatorArray0 = new Evaluator[8];
      evaluatorArray0[0] = (Evaluator) evaluator_IsEmpty0;
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("aR P[/i8}Cp");
      evaluatorArray0[1] = (Evaluator) evaluator_TagEndsWith0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      // Undeclared exception!
      try { 
        combiningEvaluator_And0.matches(element0, element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.CombiningEvaluator$And", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      Evaluator[] evaluatorArray0 = new Evaluator[6];
      evaluatorArray0[0] = (Evaluator) evaluator_IsEmpty0;
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("aR P[/i8}Cp");
      evaluatorArray0[2] = (Evaluator) evaluator_TagEndsWith0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      String string0 = combiningEvaluator_Or0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Document document0 = Document.createShell("BetweenDoctypePublicAndSystemIdentifiers");
      Elements elements0 = document0.getElementsByAttribute("del");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute((String) null);
      String string0 = evaluator_Attribute0.toString();
      assertEquals("[null]", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Document document0 = Document.createShell("aR P[/i8}Cp");
      Elements elements0 = document0.getElementsContainingOwnText("aR P[/i8}Cp");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[7];
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("org.jsoup.select.Evaluator$AllElements");
      evaluatorArray0[0] = (Evaluator) evaluator_AttributeStarting0;
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("ceERccrsJ[$6");
      evaluatorArray0[6] = (Evaluator) evaluator_ContainsOwnText0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("X?Qy3q*snO ;B");
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_Tag0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*X?Qy3q*snO ;B", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_IsFirstOfType0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent:first-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      String string0 = evaluator_AllElements0.toString();
      assertEquals("*", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("nth-last-child");
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("html > head", parseSettings0);
      Comment comment0 = new Comment("ov.@M=)tp3b}5m&*");
      Attributes attributes0 = comment0.attributes();
      FormElement formElement0 = new FormElement(tag0, "nth-last-child", attributes0);
      boolean boolean0 = evaluator_AttributeStarting0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("nth-last-child");
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("html > head", parseSettings0);
      Comment comment0 = new Comment("ov.@M=)tp3b}5m&*");
      Attributes attributes0 = comment0.attributes();
      attributes0.put("nth-last-child", "nth-last-child");
      FormElement formElement0 = new FormElement(tag0, "nth-last-child", attributes0);
      boolean boolean0 = evaluator_AttributeStarting0.matches(formElement0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Document document0 = new Document("/t-.&kYRn|_[/");
      document0.attr("/t-.&kYRn|_[/", true);
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("html", "D9=*1BfX~I");
      evaluator_AttributeWithValue0.key = "/t-.&kYRn|_[/";
      boolean boolean0 = evaluator_AttributeWithValue0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Tag tag0 = Tag.valueOf("'#root");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("'#root", "'#root");
      Element element0 = new Element(tag0, "'#root", attributes1);
      Document document0 = element0.ownerDocument();
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("t", "'#root");
      evaluator_AttributeWithValue0.key = "'#root";
      boolean boolean0 = evaluator_AttributeWithValue0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Document document0 = Document.createShell("eVYM!X@'^aqp");
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("eVYM!X@'^aqp", "`");
      evaluator_AttributeWithValueNot0.value = "";
      boolean boolean0 = evaluator_AttributeWithValueNot0.matches((Element) null, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Document document0 = Document.createShell("ov.@M=)tp3b}5m&*");
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("nth-last-child", "nth-last-child");
      boolean boolean0 = evaluator_AttributeWithValueNot0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("/t-.&kYRn|_[/", "/t-.&kYRn|_[/");
      Document document0 = new Document("/t-.&kYRn|_[/");
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R'#root");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("R'#root", "R'#root");
      Element element0 = new Element(tag0, "R'#root", attributes1);
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("r'#root", "R'#root");
      FormElement formElement0 = new FormElement(tag0, "R'#root", attributes0);
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(formElement0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("/t-.&kYRn|_[/", "/t-.&kYRn|_[/");
      Document document0 = new Document("/t-.&kYRn|_[/");
      document0.attr("/t-.&kYRn|_[/", true);
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Document document0 = Document.createShell("");
      Elements elements0 = document0.getElementsByAttributeValueEnding("\" ", "'\"S'");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R'#root");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("R'#root", "R'#root");
      Element element0 = new Element(tag0, "R'#root", attributes1);
      Document document0 = Document.createShell("R'#root");
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("R'#root", "R'#root");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Tag tag0 = Tag.valueOf("R'#root");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("R'#root", "R'#root");
      Element element0 = new Element(tag0, "R'#root", attributes1);
      Document document0 = Document.createShell("R'#root");
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("R'#root", "R'#root");
      evaluator_AttributeWithValueEnding0.value = "R'#root";
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("'#root", "'#root");
      Document document0 = Document.createShell(".L?D'ShEa");
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("org.jsoup.select.Evaluator$IndexEvaluator", "org.jsoup.select.Evaluator$IndexEvaluator");
      Tag tag0 = Tag.valueOf("'#root'");
      Comment comment0 = new Comment("ev^x?.8$A7D0|dlQ");
      Attributes attributes0 = comment0.attributes();
      Attributes attributes1 = attributes0.put("org.jsoup.select.Evaluator$IndexEvaluator", true);
      Element element0 = new Element(tag0, "[%s~=%s]", attributes1);
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("html", (Pattern) null);
      Document document0 = Document.createShell("html");
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Document document0 = new Document("/t-.&kYRn|_[/");
      document0.attr("/t-.&kYRn|_[/", true);
      Pattern pattern0 = Pattern.compile("html", (-5502));
      Elements elements0 = document0.getElementsByAttributeValueMatching("/t-.&kYRn|_[/", pattern0);
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Document document0 = new Document("/t-.&kYRn|_[/");
      Element element0 = document0.attr("/t-.&kYRn|_[/", true);
      Pattern pattern0 = Pattern.compile("Yk'U|", (-5502));
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("/t-.&kYRn|_[/", pattern0);
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(element0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("\"joEe", "\"( |U'lo?/Vk)U\"");
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Document document0 = Document.createShell("aR P[/i8}Cp");
      Elements elements0 = document0.getElementsByIndexLessThan(1584);
      assertEquals(3, elements0.size());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Document document0 = Document.createShell("");
      Elements elements0 = document0.getElementsByIndexGreaterThan(2);
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Document document0 = Document.createShell("\"");
      Elements elements0 = document0.getElementsByIndexGreaterThan((-28578680));
      assertEquals(4, elements0.size());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Document document0 = Document.createShell("\"");
      Elements elements0 = document0.getElementsByIndexEquals(1);
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Document document0 = Document.createShell("t");
      Elements elements0 = document0.select(":last-child");
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      Element element0 = document0.body();
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_IsFirstOfType0);
      boolean boolean0 = structuralEvaluator_Parent0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsFirstOfType0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Document document0 = Document.createShell("\"");
      Element element0 = document0.head();
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      element0.after("\"");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsLastOfType0);
      boolean boolean0 = structuralEvaluator_Has0.matches(element0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(16, 16);
      Document document0 = Document.createShell("ov.@M=)tp3b}5m&*");
      Element element0 = document0.head();
      boolean boolean0 = evaluator_IsNthLastChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Document document0 = Document.createShell("f4e]l1<");
      Element element0 = document0.body();
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild((-14482067), (-14482067));
      boolean boolean0 = evaluator_IsNthLastChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(0, 0);
      String string0 = evaluator_IsNthChild0.toString();
      assertEquals(":nth-child(0)", string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(1, 0);
      String string0 = evaluator_IsNthChild0.toString();
      assertEquals(":nth-child(1n)", string0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Tag tag0 = Tag.valueOf("'#root");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "'#root", attributes0);
      Document document0 = Document.createShell("&?'shEa");
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(element0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Document document0 = Document.createShell("ov.@M=)tp3b}5m&*");
      Element element0 = document0.head();
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Tag tag0 = Tag.valueOf("f4e]l1<");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "f4e]l1<", attributes0);
      Document document0 = Document.createShell(".J\"");
      formElement0.appendTo(document0);
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Tag tag0 = Tag.valueOf("f4e]l1<");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "f4e]l1<", attributes0);
      Document document0 = Document.createShell(".J\"");
      Element element0 = document0.body();
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(formElement0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      Document document0 = Document.createShell("*");
      Element element0 = new Element("V[S0F,?X:VPISoY7'");
      boolean boolean0 = evaluator_IsRoot0.matches(element0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      Document document0 = Document.createShell("*");
      boolean boolean0 = evaluator_IsRoot0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      Document document0 = Document.createShell("*");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsRoot0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Document document0 = Document.createShell(".L?D'ShEa");
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches((Element) null, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Document document0 = Document.createShell("ov.@M=)tp3b}5m&*");
      Element element0 = document0.head();
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Document document0 = Document.createShell("ov.@M=)tp3b}5m&*");
      document0.prependChild(document0);
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Tag tag0 = Tag.valueOf("'#root");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "'#root", attributes0);
      Document document0 = Document.createShell(".L?D'ShEa");
      document0.appendTo(element0);
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches((Element) null, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("html > head", parseSettings0);
      Comment comment0 = new Comment("ov.@M=)tp3b}5m&*");
      Attributes attributes0 = comment0.attributes();
      FormElement formElement0 = new FormElement(tag0, "nth-last-child", attributes0);
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or();
      combiningEvaluator_Or0.add(evaluator_IsOnlyOfType0);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(combiningEvaluator_Or0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      Document document0 = Document.createShell("\"");
      boolean boolean0 = evaluator_IsEmpty0.matches(document0, document0);
      assertFalse(boolean0);
  }
}
