/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 23:09:43 GMT 2023
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Document_ESTest extends Document_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Document document0 = Document.createShell("z][( ");
      String string0 = document0.outerHtml();
      assertEquals("<html>\n<head>\n</head>\n<body>\n</body>\n</html>", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Document document0 = Document.createShell(".KPd_{#N+G");
      Element element0 = document0.text("0l&LGd8~LV3rU5{A>g|");
      assertEquals("#root", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Document document0 = Document.createShell(">j\"%HF1X");
      String string0 = document0.nodeName();
      assertEquals("#document", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Document document0 = Document.createShell(".KPd_{#N+G");
      Element element0 = document0.createElement("ecirc");
      assertEquals("ecirc", element0.tagName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Document document0 = Document.createShell(".KPd_{#N+G");
      String string0 = document0.title();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Document document0 = Document.createShell(">j\"%HF1X");
      document0.appendChild(document0);
      document0.remove();
      document0.title(">j\"%HF1X");
      String string0 = document0.title();
      assertEquals(">j\"%HF1X", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Document document0 = Document.createShell(".KPd_{#N+G");
      document0.title("");
      document0.title("0l&LGd8~LV3rU5{A>g|");
      assertEquals("#document", document0.nodeName());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Document document0 = Document.createShell("?wg!Yp5Y0");
      document0.appendText("7!Qe<<Bf:#{@_VWs2z");
      Document document1 = document0.normalise();
      assertEquals("?wg!Yp5Y0", document1.baseUri());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Document document0 = new Document("#root");
      document0.prependText("");
      Document document1 = document0.normalise();
      assertEquals("#root", document1.baseUri());
  }
}
