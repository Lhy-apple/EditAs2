/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 23:11:13 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8^YeSn[3w-&!;R`ay");
      characterReader0.rewindToMark();
      assertEquals("8^YeSn[3w-&!;R`ay", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must be true");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("vO(?Aa|eB .f2");
      assertEquals("Must be true", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must be true");
      characterReader0.mark();
      assertEquals("Must be true", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ixy|W &+vki-g");
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals("xy|W &+vki-g", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ixy|W &+vki-g");
      boolean boolean0 = characterReader0.matchConsume("");
      assertEquals("Ixy|W &+vki-g", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must be true");
      characterReader0.unconsume();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ixy|W &+vki-g");
      String string0 = characterReader0.toString();
      assertEquals("Ixy|W &+vki-g", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8^YeSn[3w-&!;R`ay");
      characterReader0.consumeTo("By)x");
      characterReader0.consumeDigitSequence();
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ixy|W &+vki-g");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ixy|W &+vki-g");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals("Ixy|W &+vki-g", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ixy|W &+vki-g");
      char[] charArray0 = new char[2];
      characterReader0.consumeToAny(charArray0);
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must be truexv.zt<krL.|T#^/s");
      char char0 = characterReader0.current();
      assertEquals('M', char0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8^YeSn[3w-&!;R`ay");
      char char0 = characterReader0.consume();
      assertEquals("^YeSn[3w-&!;R`ay", characterReader0.toString());
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char char0 = characterReader0.consume();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5QOs#G<h@ZsdqhZj");
      characterReader0.consumeTo('q');
      assertEquals("qhZj", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Krl;XPtV$~$FhJA");
      String string0 = characterReader0.consumeTo("Krl;XPtV$~$FhJA");
      assertEquals("Krl;XPtV$~$FhJA", characterReader0.toString());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '/';
      CharacterReader characterReader0 = new CharacterReader("/M");
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ixy|W &+vki-g");
      assertEquals("Ixy|W &+vki-g", characterReader0.toString());
      
      characterReader0.consumeToEnd();
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ixy|W &+vki-g");
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals("|W &+vki-g", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.consumeLetterSequence();
      assertEquals(".jsoup.parser.CharacterReader", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ixy|W &+vki-g");
      characterReader0.consumeTo("org.jsoup.parser.CharacterReaderIxy|W &+vki-g");
      characterReader0.consumeHexSequence();
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8^YeSn[3w-&!;R`ay");
      characterReader0.consumeHexSequence();
      characterReader0.consumeAsString();
      characterReader0.advance();
      characterReader0.consumeHexSequence();
      assertEquals("Sn[3w-&!;R`ay", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("%b;! uZ`/l");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("A", string0);
      assertEquals("rray must not contain any null objects", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8^YeSn[3w-&!;R`ay");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("^YeSn[3w-&!;R`ay", characterReader0.toString());
      assertEquals("8", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("%b;! uZ`/l");
      characterReader0.consumeDigitSequence();
      assertEquals("%b;! uZ`/l", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matches('6');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8^YeSn[3w-&!;R`ay");
      boolean boolean0 = characterReader0.matches('^');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8^YeSn[3w-&!;R`ay");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("8", string0);
      
      boolean boolean0 = characterReader0.matches('^');
      assertEquals("^YeSn[3w-&!;R`ay", characterReader0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8^YeSn[3w-&!;R`ay");
      char[] charArray0 = new char[6];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals("8^YeSn[3w-&!;R`ay", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char[] charArray0 = new char[4];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '/';
      CharacterReader characterReader0 = new CharacterReader("/M");
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("%b;! uZ`/l");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8^YeSn[3w-&!;R`ay");
      characterReader0.consumeHexSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals("^YeSn[3w-&!;R`ay", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ixy|W &+vki-g");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals("Ixy|W &+vki-g", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8^YeSn[3w-&!;R`ay");
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8^YeSn[3w-&!;R`ay");
      boolean boolean0 = characterReader0.matchConsume("Op}a@Sd*{900");
      assertEquals("8^YeSn[3w-&!;R`ay", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("O");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("O");
      assertTrue(boolean0);
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ixy|W &+vki-g");
      boolean boolean0 = characterReader0.containsIgnoreCase("");
      assertTrue(boolean0);
      assertEquals("Ixy|W &+vki-g", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8^YeSn[3w-&!;R`ay");
      boolean boolean0 = characterReader0.containsIgnoreCase("By)x");
      assertEquals("8^YeSn[3w-&!;R`ay", characterReader0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("XR;Y");
      boolean boolean0 = characterReader0.containsIgnoreCase("XR;Y");
      assertTrue(boolean0);
  }
}
