/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 23:18:24 GMT 2023
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attribute_ESTest extends Attribute_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attribute attribute0 = new Attribute("ins", "");
      String string0 = attribute0.toString();
      assertEquals("ins=\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("JS&U,2D", "JS&U,2D");
      boolean boolean0 = attribute0.equals("JS&U,2D");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("')c=q+22w-", "')c=q+22w-", attributes0);
      attributes0.put(attribute0);
      attribute0.setKey("AttributeValue_doubleQuoted");
      assertEquals("AttributeValue_doubleQuoted", attribute0.getKey());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attribute attribute0 = new Attribute("+tiFhOf", "+tiFhOf");
      boolean boolean0 = attribute0.isDataAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attribute attribute0 = new Attribute("B%=c[*,4?M(i04S(F0", "B%=c[*,4?M(i04S(F0");
      Attribute attribute1 = attribute0.clone();
      boolean boolean0 = attribute0.equals(attribute1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attribute attribute0 = new Attribute("-K9(iD4f:", "-K9(iD4f:");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      boolean boolean0 = attribute0.shouldCollapseAttribute(document_OutputSettings0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attribute attribute0 = new Attribute("H-p|", "H-p|");
      attribute0.setKey("H-p|");
      assertEquals("H-p|", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("')c=q+22w-", "')c=q+22w-", attributes0);
      attribute0.setKey("AttributeValue_doubleQuoted");
      assertEquals("AttributeValue_doubleQuoted", attribute0.getKey());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("')c=q+22w-", "')c=q+22w-", attributes0);
      String string0 = attribute0.setValue("')c=q+22w-");
      assertEquals("')c=q+22w-", attribute0.getValue());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("')c=q+22w-", "')c=q+22w-", attributes0);
      attributes0.put(attribute0);
      String string0 = attribute0.setValue("')c=q+22w-");
      assertEquals("')c=q+22w-", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attribute attribute0 = new Attribute("?HsECZ-]K]4[1xA", (String) null);
      String string0 = attribute0.toString();
      assertEquals("?HsECZ-]K]4[1xA", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = Attribute.isDataAttribute("data-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = Attribute.isDataAttribute("data-p*'");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("zCZ>=E;k?Dj");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      Attribute.html("zCZ>=E;k?Dj", "zCZ>=E;k?Dj", (Appendable) mockPrintStream0, document_OutputSettings1);
      assertEquals(1, document_OutputSettings1.indentAmount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attribute attribute0 = new Attribute("B%=c[*,4?M(i04S(F0", "P+$~<?nw{ndbn1 Sb");
      String string0 = attribute0.toString();
      assertEquals("B%=c[*,4?M(i04S(F0=\"P+$~<?nw{ndbn1 Sb\"", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attribute attribute0 = new Attribute("noshade", "noshade");
      String string0 = attribute0.html();
      assertEquals("noshade", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("async", "UTF-", attributes0);
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertTrue(boolean0);
      assertEquals("UTF-", attribute0.getValue());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("}cu[TP(g@", "}cu[TP(g@");
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attribute attribute0 = new Attribute("2:M-Ie?9DZjd2tY", (String) null, (Attributes) null);
      boolean boolean0 = attribute0.isBooleanAttribute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attribute attribute0 = new Attribute("&", (String) null);
      Attribute attribute1 = new Attribute("&", "&");
      boolean boolean0 = attribute0.equals(attribute1);
      assertFalse(boolean0);
      assertTrue(attribute1.equals((Object)attribute0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attribute attribute0 = Attribute.createFromEncoded("}cou[T4XgK", "}cou[T4XgK");
      boolean boolean0 = attribute0.equals(attribute0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attribute attribute0 = new Attribute("nosRad", "nosRad");
      boolean boolean0 = attribute0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attribute attribute0 = new Attribute("}cu[TPXgK", "}cu[TPXgK");
      Attribute attribute1 = new Attribute("'", "}cu[TPXgK");
      boolean boolean0 = attribute0.equals(attribute1);
      assertEquals("}cu[TPXgK", attribute1.getValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.jsoup.nodes.Node", (String) null);
      Attribute attribute1 = attribute0.clone();
      boolean boolean0 = attribute0.equals(attribute1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attribute attribute0 = new Attribute("&", (String) null);
      attribute0.hashCode();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attribute attribute0 = new Attribute(".iv", ".iv");
      attribute0.hashCode();
  }
}
