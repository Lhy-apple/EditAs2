/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 22:52:00 GMT 2023
 */

package org.apache.commons.compress.archivers.dump;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import org.apache.commons.compress.archivers.dump.DumpArchiveInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DumpArchiveInputStream_ESTest extends DumpArchiveInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DumpArchiveInputStream dumpArchiveInputStream0 = null;
      try {
        dumpArchiveInputStream0 = new DumpArchiveInputStream(byteArrayInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // unexpected EOF
         //
         verifyException("org.apache.commons.compress.archivers.dump.DumpArchiveInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      boolean boolean0 = DumpArchiveInputStream.matches(byteArray0, (byte)0);
      assertFalse(boolean0);
  }
}
