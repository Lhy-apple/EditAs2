/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 22:49:26 GMT 2023
 */

package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer[] integerArray0 = new Integer[0];
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0);
      assertEquals(0, multiKey0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      Integer integer0 = new Integer((-2324));
      MultiKey<Object> multiKey0 = new MultiKey<Object>((Object) null, object0, integer0, integer0, "i&hAykMJuY$`5`B+N");
      Object[] objectArray0 = multiKey0.getKeys();
      assertEquals(5, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("PWNBY?[7dU\"%?", "PWNBY?[7dU\"%?");
      String string0 = multiKey0.toString();
      assertEquals("MultiKey[PWNBY?[7dU\"%?, PWNBY?[7dU\"%?]", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0, object0);
      multiKey0.hashCode();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("pvqz@[V5!PC", "pvqz@[V5!PC", "pvqz@[V5!PC", "pvqz@[V5!PC");
      String string0 = multiKey0.getKey(0);
      assertEquals("pvqz@[V5!PC", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("P\"NBY?[7d\"?", "P\"NBY?[7d\"?", "P\"NBY?[7d\"?", "P\"NBY?[7d\"?");
      MultiKey<MultiKey<String>> multiKey1 = new MultiKey<MultiKey<String>>(multiKey0, multiKey0);
      int int0 = multiKey1.size();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MultiKey<Integer> multiKey0 = null;
      try {
        multiKey0 = new MultiKey<Integer>((Integer[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The array of keys must not be null
         //
         verifyException("org.apache.commons.collections4.keyvalue.MultiKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Integer[] integerArray0 = new Integer[0];
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integerArray0, false);
      MultiKey<Object> multiKey1 = new MultiKey<Object>((Object[]) integerArray0, false);
      boolean boolean0 = multiKey1.equals(multiKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>(">7bS.L.y0y&f[{E0Fm", ">7bS.L.y0y&f[{E0Fm", ">7bS.L.y0y&f[{E0Fm");
      boolean boolean0 = multiKey0.equals(multiKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MultiKey<String> multiKey0 = new MultiKey<String>("PWNBY?[7dU\"%?", "PWNBY?[7dU\"%?");
      boolean boolean0 = multiKey0.equals("PWNBY?[7dU\"%?");
      assertFalse(boolean0);
  }
}
