/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 22:41:31 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableSortedMap;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.DisambiguateProperties;
import com.google.javascript.jscomp.TightenTypes;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.JSType;
import java.io.PrintStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DisambiguateProperties_ESTest extends DisambiguateProperties_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TightenTypes tightenTypes0 = new TightenTypes((AbstractCompiler) null);
      CheckLevel checkLevel0 = CheckLevel.OFF;
      ImmutableSortedMap<String, CheckLevel> immutableSortedMap0 = ImmutableSortedMap.of("N #`", checkLevel0, "TightenTypes pass appears to be stuck in an infinite loop.", checkLevel0);
      // Undeclared exception!
      try { 
        DisambiguateProperties.forConcreteTypeSystem((AbstractCompiler) null, tightenTypes0, immutableSortedMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.DisambiguateProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DisambiguateProperties.Warnings disambiguateProperties_Warnings0 = new DisambiguateProperties.Warnings();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CheckLevel checkLevel0 = CheckLevel.OFF;
      ImmutableSortedMap<String, CheckLevel> immutableSortedMap0 = ImmutableSortedMap.of("Stuck in loop expanding types to skip.", checkLevel0, "jR(%]L'{", checkLevel0, "NUMBER_VALUE_OR_OBJECT_TYPE", checkLevel0, "", checkLevel0, "$", checkLevel0);
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newNumber(0.0, (-1), (-1));
      compiler0.toSource(node0);
      DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0, immutableSortedMap0);
      assertNotNull(disambiguateProperties0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-78), (-1889));
      Compiler compiler0 = new Compiler((PrintStream) null);
      compiler0.toSource(node0);
      CheckLevel checkLevel0 = CheckLevel.ERROR;
      ImmutableSortedMap<String, CheckLevel> immutableSortedMap0 = ImmutableSortedMap.of("Stuck in loop expanding types to skip.", checkLevel0, "#` 2QL!p%b)?a:T&{", checkLevel0, ":", checkLevel0);
      ImmutableSortedMap<String, CheckLevel> immutableSortedMap1 = immutableSortedMap0.descendingMap();
      ImmutableSortedMap<String, CheckLevel> immutableSortedMap2 = immutableSortedMap1.headMap("z");
      DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0, immutableSortedMap2);
      assertNotNull(disambiguateProperties0);
  }
}
