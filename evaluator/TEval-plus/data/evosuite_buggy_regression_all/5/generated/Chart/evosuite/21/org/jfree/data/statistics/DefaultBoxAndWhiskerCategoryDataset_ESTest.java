/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 22:25:18 GMT 2023
 */

package org.jfree.data.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Stack;
import javax.swing.JLayeredPane;
import javax.swing.JPopupMenu;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.KeyedObjects2D;
import org.jfree.data.Range;
import org.jfree.data.statistics.BoxAndWhiskerItem;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.SimpleHistogramBin;
import org.jfree.data.time.Day;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.SimpleTimePeriod;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultBoxAndWhiskerCategoryDataset_ESTest extends DefaultBoxAndWhiskerCategoryDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      LinkedList<KeyedObjects2D> linkedList0 = new LinkedList<KeyedObjects2D>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 4, (Number) 4, (Number) 4, (Number) 1, (Number) 1, (List) linkedList0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      assertEquals(2014, quarter0.getYearValue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Quarter quarter0 = new Quarter();
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnIndex(quarter0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Day day0 = new Day();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowIndex(day0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerCategoryDataset0.getRowKey((-2033));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeLowerBound(true);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Week week0 = new Week();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerCategoryDataset0.getValue((Comparable) week0, (Comparable) week0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Row key (Week 7, 2014) not recognised.
         //
         verifyException("org.jfree.data.KeyedObjects2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getColumnKeys();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getRowKeys();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerCategoryDataset0.getColumnKey(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeUpperBound(false);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Object object0 = defaultBoxAndWhiskerCategoryDataset0.clone();
      boolean boolean0 = defaultBoxAndWhiskerCategoryDataset0.equals(object0);
      assertTrue(boolean0);
      assertNotSame(object0, defaultBoxAndWhiskerCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Second second0 = new Second();
      LinkedList<DefaultBoxAndWhiskerCategoryDataset> linkedList0 = new LinkedList<DefaultBoxAndWhiskerCategoryDataset>();
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerCategoryDataset0.add((List) linkedList0, (Comparable) second0, (Comparable) second0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (Infinity) <= upper (-Infinity).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerCategoryDataset0.getItem(1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) null, (Number) null, (Number) null, (Number) null, (Number) null, (Number) null, (Number) null, (Number) null, stack0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) "org.jfree.data.statistics.BoxAndWhiskerItem@1[mean=null,median=null,q1=null,q3=null]", (Comparable) "org.jfree.data.statistics.BoxAndWhiskerItem@1[mean=null,median=null,q1=null,q3=null]");
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) integer0, (Comparable) integer0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ1Value((Comparable) integer0, (Comparable) "org.jfree.data.statistics.BoxAndWhiskerItem@1[mean=null,median=null,q1=null,q3=null]");
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      LinkedList<KeyedObjects2D> linkedList0 = new LinkedList<KeyedObjects2D>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 4, (Number) 4, (Number) 4, (Number) 4, (Number) 1, (Number) 4, (List) linkedList0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((Number) 4, (Number) 4, (Number) 1, (Number) 4, (Number) 4, (Number) 1, (Number) integer0, (Number) integer0, (List) linkedList0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) integer0, (Comparable) quarter0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem1, (Comparable) integer0, (Comparable) integer0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 4, (Number) 1, (Number) 4, (Number) 4, (Number) 4, (Number) 4, (List) stack0);
      SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(4, 959.9833893713);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem1, (Comparable) simpleHistogramBin0, (Comparable) simpleHistogramBin0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      assertEquals(2014, quarter0.getYearValue());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMeanValue(0, 0);
      assertEquals(4, number0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMeanValue((Comparable) quarter0, (Comparable) quarter0);
      assertEquals(4, number0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getValue(0, 0);
      assertEquals(1, number0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) set0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 4, (Number) 4, (Number) 4, (Number) 1, (Number) 4, (Number) 1, (Number) 1, (List) list0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      MockDate mockDate0 = new MockDate();
      SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(mockDate0, mockDate0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMedianValue((Comparable) simpleTimePeriod0, (Comparable) simpleTimePeriod0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMedianValue((Comparable) quarter0, (Comparable) quarter0);
      assertEquals(1, number0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      LinkedList<KeyedObjects2D> linkedList0 = new LinkedList<KeyedObjects2D>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 4, (Number) 4, (Number) 4, (Number) 4, (Number) 1, (Number) 4, (List) linkedList0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ1Value(0, 0);
      assertEquals(4, number0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ1Value((Comparable) quarter0, (Comparable) quarter0);
      assertEquals(1, number0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ3Value(0, 0);
      assertEquals(1, number0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 1, (Number) 1, (Number) 4, (Number) 1, (Number) 4, (Number) 1, (Number) 1, (Number) 1, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Year year0 = new Year();
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) year0, (Comparable) year0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ3Value((Comparable) year0, (Comparable) quarter0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ3Value((Comparable) quarter0, (Comparable) quarter0);
      assertEquals(1, number0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue(0, 0);
      assertEquals(1, number0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 1, (Number) 1, (Number) 4, (Number) 1, (Number) 4, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1, 4, false, false);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) simpleHistogramBin0, (Comparable) simpleHistogramBin0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) quarter0, (Comparable) simpleHistogramBin0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) quarter0, (Comparable) quarter0);
      assertEquals(1, number0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue(0, 0);
      assertEquals(1, number0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      LinkedList<KeyedObjects2D> linkedList0 = new LinkedList<KeyedObjects2D>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 4, (Number) 4, (Number) 4, (Number) 1, (Number) 1, (List) linkedList0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue((Comparable) quarter0, (Comparable) quarter0);
      assertEquals(4, number0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinOutlier(0, 0);
      assertEquals(1, number0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinOutlier((Comparable) quarter0, (Comparable) quarter0);
      assertEquals(1, number0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      RegularTimePeriod regularTimePeriod0 = quarter0.next();
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) regularTimePeriod0, (Comparable) regularTimePeriod0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier(1, 1);
      assertEquals(4, number0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      RegularTimePeriod regularTimePeriod0 = quarter0.next();
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) regularTimePeriod0, (Comparable) regularTimePeriod0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier((Comparable) quarter0, (Comparable) regularTimePeriod0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      LinkedList<KeyedObjects2D> linkedList0 = new LinkedList<KeyedObjects2D>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 4, (Number) 4, (Number) 4, (Number) 1, (Number) 1, (List) linkedList0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier((Comparable) quarter0, (Comparable) quarter0);
      assertEquals(1, number0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0.LAST_QUARTER, (Comparable) quarter0.LAST_QUARTER);
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getOutliers(0, 1);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getOutliers(0, 0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 1, (Number) 1, (Number) 4, (Number) 1, (Number) 4, (Number) 1, (Number) 1, (Number) 1, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      Year year0 = new Year();
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) year0, (Comparable) year0);
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getOutliers((Comparable) year0, (Comparable) quarter0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Stack<JPopupMenu.Separator> stack0 = new Stack<JPopupMenu.Separator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) 4, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 1, (Number) 4, (List) stack0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) quarter0, (Comparable) quarter0);
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getOutliers((Comparable) quarter0, (Comparable) quarter0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      boolean boolean0 = defaultBoxAndWhiskerCategoryDataset0.equals(defaultBoxAndWhiskerCategoryDataset0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Week week0 = new Week();
      boolean boolean0 = defaultBoxAndWhiskerCategoryDataset0.equals(week0);
      assertFalse(boolean0);
  }
}
