/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 23:27:17 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.unescape("Q<rHJZ^Q9H?e&&1;");
      assertEquals("Q<rHJZ^Q9H?e&&1;", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("_` k", (-1));
      int int0 = entities_ArrayEntityMap0.value("_` k");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(1);
      entities_BinaryEntityMap0.add("f", 2305);
      String string0 = entities_BinaryEntityMap0.name(1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("rdquo", 0);
      String string0 = entities_BinaryEntityMap0.name(0);
      assertEquals("rdquo", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      entities_TreeEntityMap0.value("[z");
      entities_TreeEntityMap0.value("[z");
      Entities entities0 = Entities.HTML32;
      entities0.XML.map = (Entities.EntityMap) entities_TreeEntityMap0;
      entities0.addEntity("lQvh.\"5U>/a27E-YR", 14);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      entities_TreeEntityMap0.value("[z");
      int int0 = entities_TreeEntityMap0.value("[z");
      assertEquals((-1), int0);
      
      Entities entities0 = Entities.HTML32;
      entities0.XML.map = (Entities.EntityMap) entities_TreeEntityMap0;
      String string0 = entities0.escape("m_gx$-,Ijc0e 9");
      assertEquals("m_gx$-,Ijc0e 9", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, ";4lkhfOz7S&quot;(d&quot;P.7");
      assertEquals(";4lkhfOz7S\"(d\"P.7", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      Entities entities0 = Entities.HTML32;
      entities0.XML.map = (Entities.EntityMap) entities_TreeEntityMap0;
      entities0.HTML32.map = entities0.XML.map;
      entities0.addEntity("lQvh.\"5U>/a27E-YR", 14);
      int int0 = entities_TreeEntityMap0.value("lQvh.\"5U>/a27E-YR");
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.HTML32.entityName(383);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities0.HTML40.map = (Entities.EntityMap) entities_ArrayEntityMap0;
      Entities.fillWithHtml40Entities(entities0);
      String string0 = entities0.escape("z\"Kj~+Wg9diL ~4H+:");
      assertEquals("z&quot;Kj~+Wg9diL ~4H+:", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("rdquo", 0);
      entities_BinaryEntityMap0.add("&@ysZAb[FJvZ{]))G>D", 233);
      entities_BinaryEntityMap0.add("Illegal Load: ", 233);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      StringWriter stringWriter0 = new StringWriter();
      entities0.escape((Writer) stringWriter0, "-?&^p8;H4sZQcG");
      assertEquals("-?&amp;^p8;H4sZQcG", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("lQvh.\"5U>/a27E-YR");
      assertEquals("lQvh.\"5U>/a27E-YR", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("&;K'^AgZL%@tM\nAH");
      assertEquals("&;K'^AgZL%@tM\nAH", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("U-A{(yt&i$,v");
      assertEquals("U-A{(yt&i$,v", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("s&quot;;M,y&gt;9N;)61i:");
      assertEquals("s\";M,y>9N;)61i:", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      // Undeclared exception!
      try { 
        entities0.unescape((Writer) null, "ordm");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Entities entities0 = new Entities();
      entities0.unescape((Writer) stringWriter0, "H>&06x<JTsp\\~KUYd");
      assertEquals("H>&06x<JTsp\\~KUYd", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "Q<rHJZ^q9H?e&&1;");
      assertEquals("Q<rHJZ^q9H?e&&1;", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Entities entities0 = Entities.XML;
      entities0.unescape((Writer) stringWriter0, "&%Q!'!{Y$DQSw);&;G");
      assertEquals("&%Q!'!{Y$DQSw);&;G", stringWriter0.toString());
  }
}
